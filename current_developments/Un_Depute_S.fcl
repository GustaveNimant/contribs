open "basics";;

open "Un_Bureau_de_vote_S";;
open "Un_Citoyen_electeur_S";;
open "Un_Parlementaire_S";;
open "Un_Scrutin_S";;
open "Un_Territoire_S";;
open "Une_Origine_S";;
open "Une_Race_S";;
open "Une_Religion_S";;

-- InH:  Un_Depute           Un_Senateur
-- InH:      \                  /
-- InH:       v                v
-- InH:        Un_Parlementaire
-- InH:                |
-- InH:                v
-- InH:             Un_Elu
-- InH:                |
-- InH:                v
-- InH:           Un_Francais

species Un_Depute_S (
  UScr is Un_Scrutin_S, 
  URac is Une_Race_S,
  UOri is Une_Origine_S,
  URel is Une_Religion_S,
  UTer is Un_Territoire_S,
  UBvo is Un_Bureau_de_vote_S (UTer),
  UCel is Un_Citoyen_electeur_S (UScr, URac, UOri, URel, UTer, UBvo)
) = 
  
  inherit Un_Parlementaire_S (UScr, URac, UOri, URel, UTer, UBvo, UCel);
  
  let est_un_depute (udep : Self) = true;

  let est_un_senateur (udep : Self) = false;

  logical let est_elu_au_suffrage_direct (udep : Self, uscr : UScr) =
        est_elu_par_le_scrutin (udep, uscr) ->
        UScr!est_une_election_legislative (uscr);

end;;