open "basics";;

open "Le_Gouvernement_S";;
open "L_Electorat_S";;
open "L_Assemblee_nationale_S";;
open "Le_Senat_S";;
open "Le_Parlement_S";;
open "Le_President_de_la_republique_S";;
open "Un_Bureau_de_vote_S";;
open "Un_Citoyen_electeur_S";;
open "Le_Conseil_d_etat_S";;
open "Le_Conseil_des_ministres_S";;
open "Un_Decret_S";;
open "Un_Depute_S";;
open "Un_Domaine_de_projet_legislatif_S";;
open "Un_Francais_S";;
open "Un_Elu_S";;
open "Un_Membre_du_gouvernement_S";;
open "Un_Ministre_S";;
open "Un_Premier_ministre_S";;
open "Un_Organe_deliberant_S";;
open "Un_Parlementaire_S";;
open "Un_Projet_de_loi_S";;
open "Le_Conseil_des_ministres_S";;
open "Un_Scrutin_S";;
open "Un_Senateur_S";;
open "Un_Membre_du_conseil_d_etat_S";;
open "Un_Territoire_francais_S";;
open "Un_Texte_legislatif_S";;
open "Une_Commission_permanente_de_l_assemblee_nationale_S";;
open "Une_Commission_permanente_du_senat_S";;
open "Une_Commission_parlementaire_S";;
open "Une_Ordonnance_S";;
open "Une_Origine_S";;
open "Une_Proposition_de_loi_S";;
open "Une_Race_S";;
open "Une_Religion_S";;

-- Documentation : 

species Un_Amendement_S (
  URac is Une_Race_S,
  UOri is Une_Origine_S,
  URel is Une_Religion_S,
  UTle is Un_Texte_legislatif_S,
  UOrd is Une_Ordonnance_S,
  UDec is Un_Decret_S,
  UTfr is Un_Territoire_francais_S,
  UScr is Un_Scrutin_S,
  UCpa is Une_Commission_parlementaire_S,
  UDpl is Un_Domaine_de_projet_legislatif_S,
  UCan is Une_Commission_permanente_de_l_assemblee_nationale_S,
  UCse is Une_Commission_permanente_du_senat_S,
  UBvo is Un_Bureau_de_vote_S (UTfr),
  UOde is Un_Organe_deliberant_S (UTle),
  UFra is Un_Francais_S (URac, UOri, URel),
  USen is Un_Senateur_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UDep is Un_Depute_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UElu is Un_Elu_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UPar is Un_Parlementaire_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UMin is Un_Ministre_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UPmi is Un_Premier_ministre_S (URac, UOri, URel, UTfr, UScr, UBvo),
  LCmi is Le_Conseil_des_ministres_S (URac, UOri, URel, UTfr, UScr, UBvo, UTle, UMin, UPmi),
  LAna is L_Assemblee_nationale_S (URac, UOri, URel, UTfr, UScr, UBvo, UDep, UPar),
  LSen is Le_Senat_S (URac, UOri, URel, UTfr, UScr, UBvo, USen, UPar),
  LPar is Le_Parlement_S (URac, UOri, URel, UTfr, UScr, UBvo, UDep, USen, UElu, UPar, LAna, LSen),
  UMgo is Un_Membre_du_gouvernement_S (URac, UOri, URel, UTfr, UScr, UBvo),
  UCel is Un_Citoyen_electeur_S (URac, UOri, URel, UTfr, UScr, UBvo),
  LEle is L_Electorat_S (URac, UOri, URel, UTfr, UScr, UBvo, UCel),
  LGou is Le_Gouvernement_S (URac, UOri, URel, UTle, UOrd, UDec, UTfr, UScr, UBvo, UOde, UMgo),
  UPrl is Une_Proposition_de_loi_S (URac, UOri, URel, UTle, UOrd, UDec, UTfr, UScr, UDpl, UCpa, UCan, UCse, UBvo, UOde, UFra, UCel, UDep, USen, LEle, UElu, UPar, LAna, LSen, LPar, UMgo, LGou),
  LPre is Le_President_de_la_republique_S (URac, UOri, URel, UTfr, UScr, UBvo, UFra),
  UMce is Un_Membre_du_conseil_d_etat_S (URac, UOri, URel, UTfr, UScr, UBvo, UFra, LPre),
  LCet is Le_Conseil_d_etat_S (URac, UOri, URel, UTfr, UScr, UTle, UBvo, UFra, UMin, UPmi, LPre, UMce),
  UPlo is Un_Projet_de_loi_S (URac, UOri, URel, UOrd, UDec, UTfr, UScr, UDpl, UTle, UCpa, UCan, UCse, UBvo, UOde, UFra, UCel, UDep, USen, LEle, UElu, UPar, LAna, LSen, LPar, UMgo, LGou, LPre, UMin, UPmi, LCmi, UMce, LCet)
  ) =
    
  inherit Un_Texte_legislatif_S;

  signature un_amendement_est_recevable : Self -> bool;

  signature un_amendement_est_recevable_par_le_gouvernement : Self -> LGou -> bool;

  signature le_gouvernement_s_oppose_a_l_examen_d_un_amendement : Self -> LGou -> bool;

  logical let un_amendement_est_recevable_par_le_president_du_senat (self : Self, usen : USen) =
    USen!un_senateur_est_le_president_du_senat (usen)
    /\
    un_amendement_est_recevable (self);
    
  logical let un_amendement_est_recevable_par_le_president_de_l_assemblee_nationale (self : Self, udep : UDep) =
    UDep!un_depute_est_le_president_de_l_assemblee_nationale (udep)
    /\
    un_amendement_est_recevable (self);
  
  signature un_amendement_est_formule_par_un_senateur : Self -> USen -> bool;

  signature un_amendement_est_formule_par_un_depute : Self -> UDep -> bool;
  
  logical let un_amendement_est_formule_par_un_membre_du_parlement (self : Self,
  udep : UDep, usen : USen) =
    un_amendement_est_formule_par_un_senateur (self, usen)
    \/
    un_amendement_est_formule_par_un_depute (self, udep)
    ;

  signature un_amendement_est_soumis_a_une_commission_parlementaire : Self -> UCpa -> bool;
  
  signature un_amendement_est_du_domaine_de_la_loi : Self -> bool;

  signature un_amendement_est_contraire_a_une_delegation_accordee_en_vertu_de_l_article_38 : Self -> bool;

  signature un_amendement_presente_un_lien_avec_une_proposition_de_loi : Self -> UPrl -> bool;

  signature un_amendement_presente_un_lien_avec_un_projet_de_loi : Self -> UPlo -> bool;

  signature un_amendement_est_recevable_en_premiere_lecture : Self -> bool;
  
end;;