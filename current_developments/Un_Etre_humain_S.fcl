open "basics";;
open "sets";;

open "Un_Territoire_S";;

species Un_Etre_humain_S (
  UTer is Un_Territoire_S
  ) =

  inherit Setoid;

  signature nom : string;

  signature prenom : string;

  signature date_de_naissance : int * (string * int) ; -- annee mois jour

  signature age : int;

  signature today : int;
  
  signature est_un_homme : Self -> bool;

  signature est_une_femme : Self -> bool;

  property est_un_homme_ou_une_femme_pr : all uehu : Self,
           est_un_homme (uehu) -> ~ (est_une_femme (uehu));
  
  theorem est_une_femme_ou_un_homme_th : all uehu : Self,
           est_une_femme (uehu) -> ~ (est_un_homme (uehu))
           proof = by property est_un_homme_ou_une_femme_pr;

  logical let est_un_adulte (uehu : Self) =
     age >= 18;

  logical let est_un_mineur (uehu : Self) =
     age < 18;

  signature a_la_nationalite_francaise : Self -> bool;

  signature a_plusieurs_nationalite : Self -> bool;

  property est_un_adulte_ou_un_mineur_pr : all uehu : Self,
           est_un_adulte (uehu) \/ est_un_mineur (uehu);

  theorem est_un_adulte_ou_un_mineur_th : all uehu : Self,
          est_un_adulte (uehu) \/ est_un_mineur (uehu)
          proof = by property est_un_adulte_ou_un_mineur_pr; 

  signature habite_un_territoire : Self -> UTer -> bool;

end;;

