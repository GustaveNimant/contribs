DIGEST dcf51fbc6930c16bc224983b9df058da
Fbasic_type
R228:232 zenon <> <> lib
R250:261 zenon_induct <> <> lib
R279:289 zenon_focal <> <> lib
R307:310 Coq.Bool.Bool <> <> lib
R328:333 Coq.ZArith.ZArith <> <> lib
R371:375 Coq.Reals.Reals <> <> lib
R393:397 Coq.Strings.Ascii <> <> lib
R415:420 Coq.Strings.String <> <> lib
R438:441 Coq.Lists.List <> <> lib
R459:469 Coq.Wellfounded.Wellfounded <> <> lib
R487:492 Coq.funind.Recdef <> <> lib
R510:521 coq_builtins <> <> lib
R539:547 Coq.Relations.Relations <> <> lib
R565:567 Coq.ZArith.Zwf <> <> lib
R727:732 basics <> <> lib
R743:746 sets <> <> lib
R757:762 orders <> <> lib
mod 772:785 <> Gen_basic_type
R795:808 basic_type Gen_basic_type <> mod
mod 819:836 <> Gen_basic_type_tol
R846:863 basic_type Gen_basic_type_tol <> mod
mod 874:882 <> Int_value
constr 922:930 Int_value mk_record
rec 894:906 Int_value me_as_species
proj 938:941 Int_value rf_T
proj 1000:1009 Int_value rf_element
proj 1069:1076 Int_value rf_equal
proj 1162:1167 Int_value rf_geq
proj 1253:1261 Int_value rf_of_int
proj 1338:1345 Int_value rf_parse
proj 1425:1431 Int_value rf_plus
proj 1507:1512 Int_value rf_pos
proj 1590:1597 Int_value rf_print
proj 1668:1679 Int_value rf_different
proj 1765:1782 Int_value rf_equal_reflexive
proj 1879:1896 Int_value rf_equal_symmetric
proj 2038:2056 Int_value rf_equal_transitive
proj 2230:2253 Int_value rf_same_is_not_different
proj 2394:2417 Int_value rf_different_is_complete
proj 2605:2631 Int_value rf_different_is_irreflexive
proj 2732:2756 Int_value rf_different_is_symmetric
R1013:1016 basic_type <> rf_T meth
R1084:1087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1092:1095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1096:1109 basics <> bool__t def
R1088:1091 basic_type <> rf_T meth
R1080:1083 basic_type <> rf_T meth
R1175:1178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1183:1186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1187:1200 basics <> bool__t def
R1179:1182 basic_type <> rf_T meth
R1171:1174 basic_type <> rf_T meth
R1278:1281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1282:1285 basic_type <> rf_T meth
R1265:1277 basics <> int__t def
R1365:1368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1369:1372 basic_type <> rf_T meth
R1349:1364 basics <> string__t def
R1439:1442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1447:1450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1451:1454 basic_type <> rf_T meth
R1443:1446 basic_type <> rf_T meth
R1435:1438 basic_type <> rf_T meth
R1520:1523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1524:1537 basics <> bool__t def
R1516:1519 basic_type <> rf_T meth
R1605:1608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1609:1624 basics <> string__t def
R1601:1604 basic_type <> rf_T meth
R1687:1690 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1695:1698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1699:1712 basics <> bool__t def
R1691:1694 basic_type <> rf_T meth
R1683:1686 basic_type <> rf_T meth
R1797:1800 basic_type <> rf_T meth
R1803:1809 Coq.Bool.Bool <> Is_true def
R1813:1820 basic_type <> rf_equal meth
R1824:1824 basic_type <> x var
R1822:1822 basic_type <> x var
R1920:1923 basic_type <> rf_T meth
R1958:1961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1962:1968 Coq.Bool.Bool <> Is_true def
R1972:1979 basic_type <> rf_equal meth
R1983:1983 basic_type <> x var
R1981:1981 basic_type <> y var
R1934:1940 Coq.Bool.Bool <> Is_true def
R1944:1951 basic_type <> rf_equal meth
R1955:1955 basic_type <> y var
R1953:1953 basic_type <> x var
R2083:2086 basic_type <> rf_T meth
R2121:2134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2159:2162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2163:2169 Coq.Bool.Bool <> Is_true def
R2173:2180 basic_type <> rf_equal meth
R2184:2184 basic_type <> z var
R2182:2182 basic_type <> x var
R2135:2141 Coq.Bool.Bool <> Is_true def
R2145:2152 basic_type <> rf_equal meth
R2156:2156 basic_type <> z var
R2154:2154 basic_type <> y var
R2097:2103 Coq.Bool.Bool <> Is_true def
R2107:2114 basic_type <> rf_equal meth
R2118:2118 basic_type <> y var
R2116:2116 basic_type <> x var
R2277:2280 basic_type <> rf_T meth
R2319:2323 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R2291:2297 Coq.Bool.Bool <> Is_true def
R2301:2312 basic_type <> rf_different meth
R2316:2316 basic_type <> y var
R2314:2314 basic_type <> x var
R2324:2324 Coq.Init.Logic <> :type_scope:'~'_x not
R2325:2331 Coq.Bool.Bool <> Is_true def
R2336:2343 basic_type <> rf_equal meth
R2347:2347 basic_type <> y var
R2345:2345 basic_type <> x var
R2444:2447 basic_type <> rf_T meth
R2486:2500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2561:2561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2529:2532 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2501:2507 Coq.Bool.Bool <> Is_true def
R2511:2522 basic_type <> rf_different meth
R2526:2526 basic_type <> z var
R2524:2524 basic_type <> x var
R2533:2539 Coq.Bool.Bool <> Is_true def
R2543:2554 basic_type <> rf_different meth
R2558:2558 basic_type <> z var
R2556:2556 basic_type <> y var
R2458:2464 Coq.Bool.Bool <> Is_true def
R2468:2479 basic_type <> rf_different meth
R2483:2483 basic_type <> y var
R2481:2481 basic_type <> x var
R2652:2655 basic_type <> rf_T meth
R2658:2658 Coq.Init.Logic <> :type_scope:'~'_x not
R2659:2665 Coq.Bool.Bool <> Is_true def
R2670:2681 basic_type <> rf_different meth
R2685:2685 basic_type <> x var
R2683:2683 basic_type <> x var
R2780:2783 basic_type <> rf_T meth
R2822:2825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2826:2832 Coq.Bool.Bool <> Is_true def
R2836:2847 basic_type <> rf_different meth
R2851:2851 basic_type <> x var
R2849:2849 basic_type <> y var
R2794:2800 Coq.Bool.Bool <> Is_true def
R2804:2815 basic_type <> rf_different meth
R2819:2819 basic_type <> y var
R2817:2817 basic_type <> x var
def 2878:2884 Int_value element
R2897:2909 basics <> int__t def
R2914:2919 basic_type <> abst_T var
def 2940:2944 Int_value equal
R2966:2971 basic_type <> abst_T var
R2979:2984 basic_type <> abst_T var
R2993:3006 basics <> bool__t def
R3013:3034 basics <> syntactic_equal def
R3041:3041 basic_type <> y var
R3039:3039 basic_type <> x var
def 3058:3060 Int_value geq
R3073:3085 basics <> int__t def
R3094:3099 basic_type <> abst_T var
R3108:3113 basic_type <> abst_T var
R3122:3135 basics <> bool__t def
R3141:3158 basics <> _gt__equal_ def
R3163:3164 basic_type <> n2 var
R3160:3161 basic_type <> n1 var
def 3181:3186 Int_value of_int
R3199:3211 basics <> int__t def
R3219:3231 basics <> int__t def
R3236:3241 basic_type <> abst_T var
R3250:3250 basic_type <> n var
def 3266:3270 Int_value parse
R3283:3295 basics <> int__t def
R3303:3318 basics <> string__t def
R3327:3332 basic_type <> abst_T var
R3338:3357 basics <> int_of_string def
R3359:3359 basic_type <> x var
def 3376:3379 Int_value plus
R3392:3404 basics <> int__t def
R3413:3418 basic_type <> abst_T var
R3427:3432 basic_type <> abst_T var
R3441:3446 basic_type <> abst_T var
R3452:3464 basics <> _plus_ def
R3469:3470 basic_type <> n2 var
R3466:3467 basic_type <> n1 var
def 3487:3489 Int_value pos
R3502:3514 basics <> int__t def
R3522:3527 basic_type <> abst_T var
R3532:3545 basics <> bool__t def
R3555:3565 basics <> _gt_ def
R3567:3567 basic_type <> n var
def 3586:3590 Int_value print
R3603:3615 basics <> int__t def
R3623:3628 basic_type <> abst_T var
R3637:3652 basics <> string__t def
R3658:3677 basics <> string_of_int def
R3679:3679 basic_type <> x var
sec 3795:3818 Int_value Proof_of_equal_reflexive
var 3834:3839 Int_value.Proof_of_equal_reflexive abst_T
var 3856:3865 Int_value.Proof_of_equal_reflexive abst_equal
R3870:3874 basic_type Int_value equal def
R3880:3885 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
prf 3950:3974 Int_value for_zenon_equal_reflexive
R3986:3991 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R3994:4000 Coq.Bool.Bool <> Is_true def
R4003:4012 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4016:4016 basic_type <> x var
R4014:4014 basic_type <> x var
R4037:4040 Coq.Logic.Classical_Prop <> NNPP thm
R4059:4072 zenon <> zenon_notallex thm
R4398:4404 basic_type <> zenon_G var
R4134:4141 zenon <> zenon_ex thm
R4387:4394 basic_type <> zenon_H6 var
R4213:4218 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4246:4253 basic_type <> zenon_H5 var
R4259:4296 coq_builtins <> zenon_not_syntactic_equal thm
R4375:4382 basic_type <> zenon_H4 var
R4338:4348 zenon <> zenon_noteq thm
R4363:4370 basic_type <> zenon_H3 var
R4352:4361 basic_type <> zenon_Tx_c var
R4311:4320 basic_type <> zenon_Tx_c var
R4300:4309 basic_type <> zenon_Tx_c var
R4157:4162 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4166:4168 Coq.Init.Logic <> :type_scope:'~'_x not
R4193:4193 Coq.Init.Logic <> :type_scope:'~'_x not
R4169:4175 Coq.Bool.Bool <> Is_true def
R4178:4187 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4191:4191 basic_type <> x var
R4189:4189 basic_type <> x var
R4143:4148 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4081:4086 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4090:4096 Coq.Bool.Bool <> Is_true def
R4100:4109 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4113:4113 basic_type <> x var
R4111:4111 basic_type <> x var
R4037:4040 Coq.Logic.Classical_Prop <> NNPP thm
R4059:4072 zenon <> zenon_notallex thm
R4398:4404 basic_type <> zenon_G var
R4134:4141 zenon <> zenon_ex thm
R4387:4394 basic_type <> zenon_H6 var
R4213:4218 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4246:4253 basic_type <> zenon_H5 var
R4259:4296 coq_builtins <> zenon_not_syntactic_equal thm
R4375:4382 basic_type <> zenon_H4 var
R4338:4348 zenon <> zenon_noteq thm
R4363:4370 basic_type <> zenon_H3 var
R4352:4361 basic_type <> zenon_Tx_c var
R4311:4320 basic_type <> zenon_Tx_c var
R4300:4309 basic_type <> zenon_Tx_c var
R4157:4162 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4166:4168 Coq.Init.Logic <> :type_scope:'~'_x not
R4193:4193 Coq.Init.Logic <> :type_scope:'~'_x not
R4169:4175 Coq.Bool.Bool <> Is_true def
R4178:4187 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4191:4191 basic_type <> x var
R4189:4189 basic_type <> x var
R4143:4148 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4081:4086 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4090:4096 Coq.Bool.Bool <> Is_true def
R4100:4109 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4113:4113 basic_type <> x var
R4111:4111 basic_type <> x var
prf 4482:4517 Int_value for_zenon_abstracted_equal_reflexive
R4538:4543 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4546:4552 Coq.Bool.Bool <> Is_true def
R4556:4565 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4569:4569 basic_type <> x var
R4567:4567 basic_type <> x var
R4608:4613 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4608:4613 basic_type <> Int_value.Proof_of_equal_reflexive.abst_T var
R4655:4664 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4655:4664 basic_type <> Int_value.Proof_of_equal_reflexive.abst_equal var
R4678:4702 basic_type Int_value for_zenon_equal_reflexive thm
R4678:4702 basic_type Int_value for_zenon_equal_reflexive thm
R4732:4755 basic_type Int_value.Proof_of_equal_reflexive <> sec
prf 4771:4785 Int_value equal_reflexive
R4818:4822 basic_type Int_value equal def
R4824:4829 basic_type <> abst_T var
R4848:4853 basic_type <> abst_T var
R4856:4862 Coq.Bool.Bool <> Is_true def
R4866:4875 basic_type <> abst_equal var
R4879:4879 basic_type <> x var
R4877:4877 basic_type <> x var
R4892:4927 basic_type Int_value for_zenon_abstracted_equal_reflexive thm
R4892:4927 basic_type Int_value for_zenon_abstracted_equal_reflexive thm
sec 5057:5080 Int_value Proof_of_equal_symmetric
var 5096:5101 Int_value.Proof_of_equal_symmetric abst_T
var 5118:5127 Int_value.Proof_of_equal_symmetric abst_equal
R5132:5136 basic_type Int_value equal def
R5142:5147 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
prf 5212:5236 Int_value for_zenon_equal_symmetric
R5248:5253 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5265:5270 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5273:5274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5299:5302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5327:5327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5303:5309 Coq.Bool.Bool <> Is_true def
R5312:5321 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5325:5325 basic_type <> x var
R5323:5323 basic_type <> y var
R5275:5281 Coq.Bool.Bool <> Is_true def
R5284:5293 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5297:5297 basic_type <> y var
R5295:5295 basic_type <> x var
R5348:5351 Coq.Logic.Classical_Prop <> NNPP thm
R5370:5383 zenon <> zenon_notallex thm
R6307:6313 basic_type <> zenon_G var
R5494:5501 zenon <> zenon_ex thm
R6296:6303 basic_type <> zenon_Hd var
R5621:5626 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5641:5654 zenon <> zenon_notallex thm
R6285:6292 basic_type <> zenon_Hc var
R5764:5771 zenon <> zenon_ex thm
R6274:6281 basic_type <> zenon_Hb var
R5891:5896 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5911:5924 zenon <> zenon_notimply thm
R6263:6270 basic_type <> zenon_Ha var
R5969:5976 basic_type <> zenon_H9 var
R5983:6016 coq_builtins <> zenon_syntactic_equal thm
R6251:6258 basic_type <> zenon_H8 var
R6090:6097 basic_type <> zenon_H7 var
R6104:6141 coq_builtins <> zenon_not_syntactic_equal thm
R6239:6246 basic_type <> zenon_H6 var
R6183:6193 zenon <> zenon_eqsym thm
R6228:6235 basic_type <> zenon_H5 var
R6219:6226 basic_type <> zenon_H4 var
R6208:6217 basic_type <> zenon_Ty_d var
R6197:6206 basic_type <> zenon_Tx_c var
R6156:6165 basic_type <> zenon_Tx_c var
R6145:6154 basic_type <> zenon_Ty_d var
R6049:6058 basic_type <> zenon_Ty_d var
R6038:6047 basic_type <> zenon_Tx_c var
R6018:6034 zenon_focal <> zenon_focal_eqdec thm
R5787:5792 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5796:5797 Coq.Init.Logic <> :type_scope:'~'_x not
R5871:5871 Coq.Init.Logic <> :type_scope:'~'_x not
R5798:5798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5832:5836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5870:5870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5837:5843 Coq.Bool.Bool <> Is_true def
R5846:5855 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5859:5868 basic_type <> zenon_Tx_c var
R5857:5857 basic_type <> y var
R5799:5805 Coq.Bool.Bool <> Is_true def
R5808:5817 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5830:5830 basic_type <> y var
R5819:5828 basic_type <> zenon_Tx_c var
R5773:5778 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5663:5668 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5672:5672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5706:5709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5743:5743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5710:5716 Coq.Bool.Bool <> Is_true def
R5719:5728 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5732:5741 basic_type <> zenon_Tx_c var
R5730:5730 basic_type <> y var
R5673:5679 Coq.Bool.Bool <> Is_true def
R5682:5691 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5704:5704 basic_type <> y var
R5693:5702 basic_type <> zenon_Tx_c var
R5517:5522 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5526:5527 Coq.Init.Logic <> :type_scope:'~'_x not
R5601:5601 Coq.Init.Logic <> :type_scope:'~'_x not
R5537:5542 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5545:5545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5571:5574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5599:5599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5575:5581 Coq.Bool.Bool <> Is_true def
R5584:5593 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5597:5597 basic_type <> x var
R5595:5595 basic_type <> y var
R5546:5552 Coq.Bool.Bool <> Is_true def
R5556:5565 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5569:5569 basic_type <> y var
R5567:5567 basic_type <> x var
R5503:5508 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5392:5397 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5410:5415 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5418:5419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5444:5447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5472:5472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5448:5454 Coq.Bool.Bool <> Is_true def
R5457:5466 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5470:5470 basic_type <> x var
R5468:5468 basic_type <> y var
R5420:5426 Coq.Bool.Bool <> Is_true def
R5429:5438 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5442:5442 basic_type <> y var
R5440:5440 basic_type <> x var
R5348:5351 Coq.Logic.Classical_Prop <> NNPP thm
R5370:5383 zenon <> zenon_notallex thm
R6307:6313 basic_type <> zenon_G var
R5494:5501 zenon <> zenon_ex thm
R6296:6303 basic_type <> zenon_Hd var
R5621:5626 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5641:5654 zenon <> zenon_notallex thm
R6285:6292 basic_type <> zenon_Hc var
R5764:5771 zenon <> zenon_ex thm
R6274:6281 basic_type <> zenon_Hb var
R5891:5896 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5911:5924 zenon <> zenon_notimply thm
R6263:6270 basic_type <> zenon_Ha var
R5969:5976 basic_type <> zenon_H9 var
R5983:6016 coq_builtins <> zenon_syntactic_equal thm
R6251:6258 basic_type <> zenon_H8 var
R6090:6097 basic_type <> zenon_H7 var
R6104:6141 coq_builtins <> zenon_not_syntactic_equal thm
R6239:6246 basic_type <> zenon_H6 var
R6183:6193 zenon <> zenon_eqsym thm
R6228:6235 basic_type <> zenon_H5 var
R6219:6226 basic_type <> zenon_H4 var
R6208:6217 basic_type <> zenon_Ty_d var
R6197:6206 basic_type <> zenon_Tx_c var
R6156:6165 basic_type <> zenon_Tx_c var
R6145:6154 basic_type <> zenon_Ty_d var
R6049:6058 basic_type <> zenon_Ty_d var
R6038:6047 basic_type <> zenon_Tx_c var
R6018:6034 zenon_focal <> zenon_focal_eqdec thm
R5787:5792 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5796:5797 Coq.Init.Logic <> :type_scope:'~'_x not
R5871:5871 Coq.Init.Logic <> :type_scope:'~'_x not
R5798:5798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5832:5836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5870:5870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5837:5843 Coq.Bool.Bool <> Is_true def
R5846:5855 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5859:5868 basic_type <> zenon_Tx_c var
R5857:5857 basic_type <> y var
R5799:5805 Coq.Bool.Bool <> Is_true def
R5808:5817 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5830:5830 basic_type <> y var
R5819:5828 basic_type <> zenon_Tx_c var
R5773:5778 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5663:5668 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5672:5672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5706:5709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5743:5743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5710:5716 Coq.Bool.Bool <> Is_true def
R5719:5728 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5732:5741 basic_type <> zenon_Tx_c var
R5730:5730 basic_type <> y var
R5673:5679 Coq.Bool.Bool <> Is_true def
R5682:5691 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5704:5704 basic_type <> y var
R5693:5702 basic_type <> zenon_Tx_c var
R5517:5522 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5526:5527 Coq.Init.Logic <> :type_scope:'~'_x not
R5601:5601 Coq.Init.Logic <> :type_scope:'~'_x not
R5537:5542 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5545:5545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5571:5574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5599:5599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5575:5581 Coq.Bool.Bool <> Is_true def
R5584:5593 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5597:5597 basic_type <> x var
R5595:5595 basic_type <> y var
R5546:5552 Coq.Bool.Bool <> Is_true def
R5556:5565 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5569:5569 basic_type <> y var
R5567:5567 basic_type <> x var
R5503:5508 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5392:5397 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5410:5415 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R5418:5419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5444:5447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5472:5472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5448:5454 Coq.Bool.Bool <> Is_true def
R5457:5466 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5470:5470 basic_type <> x var
R5468:5468 basic_type <> y var
R5420:5426 Coq.Bool.Bool <> Is_true def
R5429:5438 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R5442:5442 basic_type <> y var
R5440:5440 basic_type <> x var
prf 6391:6426 Int_value for_zenon_abstracted_equal_symmetric
R6450:6455 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R6492:6495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6496:6502 Coq.Bool.Bool <> Is_true def
R6506:6515 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R6519:6519 basic_type <> x var
R6517:6517 basic_type <> y var
R6466:6472 Coq.Bool.Bool <> Is_true def
R6476:6485 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R6489:6489 basic_type <> y var
R6487:6487 basic_type <> x var
R6558:6563 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R6558:6563 basic_type <> Int_value.Proof_of_equal_symmetric.abst_T var
R6605:6614 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R6605:6614 basic_type <> Int_value.Proof_of_equal_symmetric.abst_equal var
R6628:6652 basic_type Int_value for_zenon_equal_symmetric thm
R6628:6652 basic_type Int_value for_zenon_equal_symmetric thm
R6682:6705 basic_type Int_value.Proof_of_equal_symmetric <> sec
prf 6721:6735 Int_value equal_symmetric
R6768:6772 basic_type Int_value equal def
R6774:6779 basic_type <> abst_T var
R6801:6806 basic_type <> abst_T var
R6841:6844 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6845:6851 Coq.Bool.Bool <> Is_true def
R6855:6864 basic_type <> abst_equal var
R6868:6868 basic_type <> x var
R6866:6866 basic_type <> y var
R6815:6821 Coq.Bool.Bool <> Is_true def
R6825:6834 basic_type <> abst_equal var
R6838:6838 basic_type <> y var
R6836:6836 basic_type <> x var
R6881:6916 basic_type Int_value for_zenon_abstracted_equal_symmetric thm
R6881:6916 basic_type Int_value for_zenon_abstracted_equal_symmetric thm
sec 7047:7071 Int_value Proof_of_equal_transitive
var 7087:7092 Int_value.Proof_of_equal_transitive abst_T
var 7109:7118 Int_value.Proof_of_equal_transitive abst_equal
R7123:7127 basic_type Int_value equal def
R7133:7138 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
prf 7203:7228 Int_value for_zenon_equal_transitive
R7240:7245 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7257:7262 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7275:7280 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7283:7283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7308:7311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7367:7367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7312:7312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7337:7341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7366:7366 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7342:7348 Coq.Bool.Bool <> Is_true def
R7351:7360 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7364:7364 basic_type <> z var
R7362:7362 basic_type <> x var
R7313:7319 Coq.Bool.Bool <> Is_true def
R7322:7331 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7335:7335 basic_type <> z var
R7333:7333 basic_type <> y var
R7284:7290 Coq.Bool.Bool <> Is_true def
R7293:7302 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7306:7306 basic_type <> y var
R7304:7304 basic_type <> x var
R7389:7392 Coq.Logic.Classical_Prop <> NNPP thm
R7411:7424 zenon <> zenon_notallex thm
R9203:9209 basic_type <> zenon_G var
R7584:7591 zenon <> zenon_ex thm
R9191:9199 basic_type <> zenon_H15 var
R7760:7765 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7780:7793 zenon <> zenon_notallex thm
R9179:9187 basic_type <> zenon_H14 var
R7953:7960 zenon <> zenon_ex thm
R9167:9175 basic_type <> zenon_H13 var
R8127:8132 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8147:8160 zenon <> zenon_notallex thm
R9155:9163 basic_type <> zenon_H12 var
R8320:8327 zenon <> zenon_ex thm
R9143:9151 basic_type <> zenon_H11 var
R8494:8499 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8515:8528 zenon <> zenon_notimply thm
R9131:9139 basic_type <> zenon_H10 var
R8559:8572 zenon <> zenon_notimply thm
R9120:9127 basic_type <> zenon_Hf var
R8617:8624 basic_type <> zenon_He var
R8631:8664 coq_builtins <> zenon_syntactic_equal thm
R9108:9115 basic_type <> zenon_Hd var
R8738:8745 basic_type <> zenon_Hc var
R8752:8785 coq_builtins <> zenon_syntactic_equal thm
R9096:9103 basic_type <> zenon_Hb var
R8859:8866 basic_type <> zenon_Ha var
R8873:8910 coq_builtins <> zenon_not_syntactic_equal thm
R9084:9091 basic_type <> zenon_H9 var
R8952:8962 zenon <> zenon_subst thm
R9073:9080 basic_type <> zenon_H6 var
R9064:9071 basic_type <> zenon_H5 var
R9044:9051 basic_type <> zenon_H8 var
R9053:9060 basic_type <> zenon_H7 var
R9017:9026 basic_type <> zenon_Tz_e var
R9006:9015 basic_type <> zenon_Ty_d var
R8992:8994 Coq.Init.Logic <> :type_scope:x_'='_x not
R8982:8991 basic_type <> zenon_Tx_c var
R8995:9002 basic_type <> zenon_Vf var
R8925:8934 basic_type <> zenon_Tz_e var
R8914:8923 basic_type <> zenon_Tx_c var
R8818:8827 basic_type <> zenon_Tz_e var
R8807:8816 basic_type <> zenon_Ty_d var
R8787:8803 zenon_focal <> zenon_focal_eqdec thm
R8697:8706 basic_type <> zenon_Ty_d var
R8686:8695 basic_type <> zenon_Tx_c var
R8666:8682 zenon_focal <> zenon_focal_eqdec thm
R8343:8348 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8352:8353 Coq.Init.Logic <> :type_scope:'~'_x not
R8474:8474 Coq.Init.Logic <> :type_scope:'~'_x not
R8354:8354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8397:8400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8473:8473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8401:8401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8435:8438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8472:8472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8439:8445 Coq.Bool.Bool <> Is_true def
R8448:8457 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8470:8470 basic_type <> z var
R8459:8468 basic_type <> zenon_Tx_c var
R8402:8408 Coq.Bool.Bool <> Is_true def
R8411:8420 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8433:8433 basic_type <> z var
R8422:8431 basic_type <> zenon_Ty_d var
R8355:8361 Coq.Bool.Bool <> Is_true def
R8364:8373 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8386:8395 basic_type <> zenon_Ty_d var
R8375:8384 basic_type <> zenon_Tx_c var
R8329:8334 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8170:8175 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8179:8179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8222:8225 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8299:8299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8226:8226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8261:8264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8298:8298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8265:8271 Coq.Bool.Bool <> Is_true def
R8274:8283 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8296:8296 basic_type <> z var
R8285:8294 basic_type <> zenon_Tx_c var
R8227:8233 Coq.Bool.Bool <> Is_true def
R8237:8246 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8259:8259 basic_type <> z var
R8248:8257 basic_type <> zenon_Ty_d var
R8180:8186 Coq.Bool.Bool <> Is_true def
R8189:8198 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8211:8220 basic_type <> zenon_Ty_d var
R8200:8209 basic_type <> zenon_Tx_c var
R7976:7981 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7985:7986 Coq.Init.Logic <> :type_scope:'~'_x not
R8107:8107 Coq.Init.Logic <> :type_scope:'~'_x not
R7996:8001 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8004:8004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8038:8041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8105:8105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8042:8042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8067:8070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8104:8104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8071:8077 Coq.Bool.Bool <> Is_true def
R8080:8089 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8102:8102 basic_type <> z var
R8091:8100 basic_type <> zenon_Tx_c var
R8043:8049 Coq.Bool.Bool <> Is_true def
R8052:8061 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8065:8065 basic_type <> z var
R8063:8063 basic_type <> y var
R8005:8011 Coq.Bool.Bool <> Is_true def
R8014:8023 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8036:8036 basic_type <> y var
R8025:8034 basic_type <> zenon_Tx_c var
R7962:7967 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7802:7807 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7821:7826 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7829:7829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7863:7866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7931:7931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7867:7867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7892:7896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7930:7930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7897:7903 Coq.Bool.Bool <> Is_true def
R7906:7915 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7928:7928 basic_type <> z var
R7917:7926 basic_type <> zenon_Tx_c var
R7868:7874 Coq.Bool.Bool <> Is_true def
R7877:7886 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7890:7890 basic_type <> z var
R7888:7888 basic_type <> y var
R7830:7836 Coq.Bool.Bool <> Is_true def
R7839:7848 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7861:7861 basic_type <> y var
R7850:7859 basic_type <> zenon_Tx_c var
R7607:7612 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7616:7617 Coq.Init.Logic <> :type_scope:'~'_x not
R7739:7739 Coq.Init.Logic <> :type_scope:'~'_x not
R7627:7632 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7644:7649 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7652:7652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7677:7681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7736:7736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7682:7682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7707:7710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7735:7735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7711:7717 Coq.Bool.Bool <> Is_true def
R7720:7729 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7733:7733 basic_type <> z var
R7731:7731 basic_type <> x var
R7683:7689 Coq.Bool.Bool <> Is_true def
R7692:7701 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7705:7705 basic_type <> z var
R7703:7703 basic_type <> y var
R7653:7659 Coq.Bool.Bool <> Is_true def
R7662:7671 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7675:7675 basic_type <> y var
R7673:7673 basic_type <> x var
R7593:7598 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7433:7438 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7451:7456 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7469:7474 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7477:7477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7502:7505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7561:7561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7506:7506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7531:7535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7560:7560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7536:7542 Coq.Bool.Bool <> Is_true def
R7545:7554 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7558:7558 basic_type <> z var
R7556:7556 basic_type <> x var
R7507:7513 Coq.Bool.Bool <> Is_true def
R7516:7525 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7529:7529 basic_type <> z var
R7527:7527 basic_type <> y var
R7478:7484 Coq.Bool.Bool <> Is_true def
R7487:7496 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7500:7500 basic_type <> y var
R7498:7498 basic_type <> x var
R7389:7392 Coq.Logic.Classical_Prop <> NNPP thm
R7411:7424 zenon <> zenon_notallex thm
R9203:9209 basic_type <> zenon_G var
R7584:7591 zenon <> zenon_ex thm
R9191:9199 basic_type <> zenon_H15 var
R7760:7765 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7780:7793 zenon <> zenon_notallex thm
R9179:9187 basic_type <> zenon_H14 var
R7953:7960 zenon <> zenon_ex thm
R9167:9175 basic_type <> zenon_H13 var
R8127:8132 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8147:8160 zenon <> zenon_notallex thm
R9155:9163 basic_type <> zenon_H12 var
R8320:8327 zenon <> zenon_ex thm
R9143:9151 basic_type <> zenon_H11 var
R8494:8499 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8515:8528 zenon <> zenon_notimply thm
R9131:9139 basic_type <> zenon_H10 var
R8559:8572 zenon <> zenon_notimply thm
R9120:9127 basic_type <> zenon_Hf var
R8617:8624 basic_type <> zenon_He var
R8631:8664 coq_builtins <> zenon_syntactic_equal thm
R9108:9115 basic_type <> zenon_Hd var
R8738:8745 basic_type <> zenon_Hc var
R8752:8785 coq_builtins <> zenon_syntactic_equal thm
R9096:9103 basic_type <> zenon_Hb var
R8859:8866 basic_type <> zenon_Ha var
R8873:8910 coq_builtins <> zenon_not_syntactic_equal thm
R9084:9091 basic_type <> zenon_H9 var
R8952:8962 zenon <> zenon_subst thm
R9073:9080 basic_type <> zenon_H6 var
R9064:9071 basic_type <> zenon_H5 var
R9044:9051 basic_type <> zenon_H8 var
R9053:9060 basic_type <> zenon_H7 var
R9017:9026 basic_type <> zenon_Tz_e var
R9006:9015 basic_type <> zenon_Ty_d var
R8992:8994 Coq.Init.Logic <> :type_scope:x_'='_x not
R8982:8991 basic_type <> zenon_Tx_c var
R8995:9002 basic_type <> zenon_Vf var
R8925:8934 basic_type <> zenon_Tz_e var
R8914:8923 basic_type <> zenon_Tx_c var
R8818:8827 basic_type <> zenon_Tz_e var
R8807:8816 basic_type <> zenon_Ty_d var
R8787:8803 zenon_focal <> zenon_focal_eqdec thm
R8697:8706 basic_type <> zenon_Ty_d var
R8686:8695 basic_type <> zenon_Tx_c var
R8666:8682 zenon_focal <> zenon_focal_eqdec thm
R8343:8348 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8352:8353 Coq.Init.Logic <> :type_scope:'~'_x not
R8474:8474 Coq.Init.Logic <> :type_scope:'~'_x not
R8354:8354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8397:8400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8473:8473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8401:8401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8435:8438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8472:8472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8439:8445 Coq.Bool.Bool <> Is_true def
R8448:8457 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8470:8470 basic_type <> z var
R8459:8468 basic_type <> zenon_Tx_c var
R8402:8408 Coq.Bool.Bool <> Is_true def
R8411:8420 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8433:8433 basic_type <> z var
R8422:8431 basic_type <> zenon_Ty_d var
R8355:8361 Coq.Bool.Bool <> Is_true def
R8364:8373 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8386:8395 basic_type <> zenon_Ty_d var
R8375:8384 basic_type <> zenon_Tx_c var
R8329:8334 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8170:8175 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8179:8179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8222:8225 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8299:8299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8226:8226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8261:8264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8298:8298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8265:8271 Coq.Bool.Bool <> Is_true def
R8274:8283 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8296:8296 basic_type <> z var
R8285:8294 basic_type <> zenon_Tx_c var
R8227:8233 Coq.Bool.Bool <> Is_true def
R8237:8246 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8259:8259 basic_type <> z var
R8248:8257 basic_type <> zenon_Ty_d var
R8180:8186 Coq.Bool.Bool <> Is_true def
R8189:8198 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8211:8220 basic_type <> zenon_Ty_d var
R8200:8209 basic_type <> zenon_Tx_c var
R7976:7981 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7985:7986 Coq.Init.Logic <> :type_scope:'~'_x not
R8107:8107 Coq.Init.Logic <> :type_scope:'~'_x not
R7996:8001 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R8004:8004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8038:8041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8105:8105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8042:8042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8067:8070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8104:8104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8071:8077 Coq.Bool.Bool <> Is_true def
R8080:8089 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8102:8102 basic_type <> z var
R8091:8100 basic_type <> zenon_Tx_c var
R8043:8049 Coq.Bool.Bool <> Is_true def
R8052:8061 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8065:8065 basic_type <> z var
R8063:8063 basic_type <> y var
R8005:8011 Coq.Bool.Bool <> Is_true def
R8014:8023 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R8036:8036 basic_type <> y var
R8025:8034 basic_type <> zenon_Tx_c var
R7962:7967 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7802:7807 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7821:7826 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7829:7829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7863:7866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7931:7931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7867:7867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7892:7896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7930:7930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7897:7903 Coq.Bool.Bool <> Is_true def
R7906:7915 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7928:7928 basic_type <> z var
R7917:7926 basic_type <> zenon_Tx_c var
R7868:7874 Coq.Bool.Bool <> Is_true def
R7877:7886 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7890:7890 basic_type <> z var
R7888:7888 basic_type <> y var
R7830:7836 Coq.Bool.Bool <> Is_true def
R7839:7848 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7861:7861 basic_type <> y var
R7850:7859 basic_type <> zenon_Tx_c var
R7607:7612 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7616:7617 Coq.Init.Logic <> :type_scope:'~'_x not
R7739:7739 Coq.Init.Logic <> :type_scope:'~'_x not
R7627:7632 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7644:7649 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7652:7652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7677:7681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7736:7736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7682:7682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7707:7710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7735:7735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7711:7717 Coq.Bool.Bool <> Is_true def
R7720:7729 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7733:7733 basic_type <> z var
R7731:7731 basic_type <> x var
R7683:7689 Coq.Bool.Bool <> Is_true def
R7692:7701 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7705:7705 basic_type <> z var
R7703:7703 basic_type <> y var
R7653:7659 Coq.Bool.Bool <> Is_true def
R7662:7671 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7675:7675 basic_type <> y var
R7673:7673 basic_type <> x var
R7593:7598 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7433:7438 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7451:7456 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7469:7474 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R7477:7477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7502:7505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7561:7561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7506:7506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7531:7535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7560:7560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7536:7542 Coq.Bool.Bool <> Is_true def
R7545:7554 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7558:7558 basic_type <> z var
R7556:7556 basic_type <> x var
R7507:7513 Coq.Bool.Bool <> Is_true def
R7516:7525 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7529:7529 basic_type <> z var
R7527:7527 basic_type <> y var
R7478:7484 Coq.Bool.Bool <> Is_true def
R7487:7496 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R7500:7500 basic_type <> y var
R7498:7498 basic_type <> x var
prf 9287:9323 Int_value for_zenon_abstracted_equal_transitive
R9350:9355 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R9392:9405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9432:9435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9436:9442 Coq.Bool.Bool <> Is_true def
R9446:9455 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R9459:9459 basic_type <> z var
R9457:9457 basic_type <> x var
R9406:9412 Coq.Bool.Bool <> Is_true def
R9416:9425 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R9429:9429 basic_type <> z var
R9427:9427 basic_type <> y var
R9366:9372 Coq.Bool.Bool <> Is_true def
R9376:9385 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R9389:9389 basic_type <> y var
R9387:9387 basic_type <> x var
R9498:9503 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R9498:9503 basic_type <> Int_value.Proof_of_equal_transitive.abst_T var
R9545:9554 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R9545:9554 basic_type <> Int_value.Proof_of_equal_transitive.abst_equal var
R9568:9593 basic_type Int_value for_zenon_equal_transitive thm
R9568:9593 basic_type Int_value for_zenon_equal_transitive thm
R9623:9647 basic_type Int_value.Proof_of_equal_transitive <> sec
prf 9663:9678 Int_value equal_transitive
R9711:9715 basic_type Int_value equal def
R9717:9722 basic_type <> abst_T var
R9747:9752 basic_type <> abst_T var
R9787:9798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9825:9828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9829:9835 Coq.Bool.Bool <> Is_true def
R9839:9848 basic_type <> abst_equal var
R9852:9852 basic_type <> z var
R9850:9850 basic_type <> x var
R9799:9805 Coq.Bool.Bool <> Is_true def
R9809:9818 basic_type <> abst_equal var
R9822:9822 basic_type <> z var
R9820:9820 basic_type <> y var
R9761:9767 Coq.Bool.Bool <> Is_true def
R9771:9780 basic_type <> abst_equal var
R9784:9784 basic_type <> y var
R9782:9782 basic_type <> x var
R9865:9901 basic_type Int_value for_zenon_abstracted_equal_transitive thm
R9865:9901 basic_type Int_value for_zenon_abstracted_equal_transitive thm
def 10001:10017 Int_value collection_create
R10043:10055 basics <> int__t def
R10130:10136 basic_type Int_value element def
R10209:10213 basic_type Int_value equal def
R10215:10223 basic_type <> local_rep var
R10294:10296 basic_type Int_value geq def
R10370:10375 basic_type Int_value of_int def
R10448:10452 basic_type Int_value parse def
R10524:10527 basic_type Int_value plus def
R10598:10600 basic_type Int_value pos def
R10673:10677 basic_type Int_value print def
R10745:10765 sets Setoid different def
R10777:10787 basic_type <> local_equal var
R10767:10775 basic_type <> local_rep var
R10870:10884 basic_type Int_value equal_reflexive thm
R10886:10894 basic_type <> local_rep var
R10977:10991 basic_type Int_value equal_symmetric thm
R10993:11001 basic_type <> local_rep var
R11085:11100 basic_type Int_value equal_transitive thm
R11102:11110 basic_type <> local_rep var
R11190:11222 sets Setoid same_is_not_different thm
R11240:11250 basic_type <> local_equal var
R11230:11238 basic_type <> local_rep var
R11330:11362 sets Setoid different_is_complete thm
R11487:11513 basic_type <> local_same_is_not_different var
R11458:11479 basic_type <> local_equal_transitive var
R11436:11456 basic_type <> local_equal_symmetric var
R11408:11428 basic_type <> local_equal_reflexive var
R11392:11406 basic_type <> local_different var
R11380:11390 basic_type <> local_equal var
R11370:11378 basic_type <> local_rep var
R11602:11637 sets Setoid different_is_irreflexive thm
R11705:11731 basic_type <> local_same_is_not_different var
R11683:11703 basic_type <> local_equal_reflexive var
R11667:11681 basic_type <> local_different var
R11649:11659 basic_type <> local_equal var
R11639:11647 basic_type <> local_rep var
R11812:11845 sets Setoid different_is_symmetric thm
R11919:11945 basic_type <> local_same_is_not_different var
R11891:11911 basic_type <> local_equal_symmetric var
R11875:11889 basic_type <> local_different var
R11863:11873 basic_type <> local_equal var
R11853:11861 basic_type <> local_rep var
R11954:11962 basic_type Int_value mk_record constr
R12254:12281 basic_type <> local_different_is_symmetric var
R12223:12252 basic_type <> local_different_is_irreflexive var
R12191:12217 basic_type <> local_different_is_complete var
R12163:12189 basic_type <> local_same_is_not_different var
R12136:12157 basic_type <> local_equal_transitive var
R12114:12134 basic_type <> local_equal_symmetric var
R12092:12112 basic_type <> local_equal_reflexive var
R12072:12086 basic_type <> local_different var
R12060:12070 basic_type <> local_print var
R12050:12058 basic_type <> local_pos var
R12039:12048 basic_type <> local_plus var
R12027:12037 basic_type <> local_parse var
R12010:12021 basic_type <> local_of_int var
R12000:12008 basic_type <> local_geq var
R11988:11998 basic_type <> local_equal var
R11974:11986 basic_type <> local_element var
R11964:11972 basic_type <> local_rep var
R12291:12299 basic_type Int_value <> mod
mod 12310:12323 <> Coll_int_value
var 12332:12351 Coll_int_value effective_collection
R12356:12382 basic_type Int_value collection_create def
def 12453:12465 Coll_int_value me_as_carrier
R12470:12482 basics <> int__t def
def 12498:12504 Coll_int_value element
R12531:12550 basic_type Int_value rf_element proj
R12509:12528 basic_type Coll_int_value effective_collection def
def 12567:12571 Coll_int_value equal
R12598:12615 basic_type Int_value rf_equal proj
R12576:12595 basic_type Coll_int_value effective_collection def
def 12632:12634 Coll_int_value geq
R12661:12676 basic_type Int_value rf_geq proj
R12639:12658 basic_type Coll_int_value effective_collection def
def 12693:12698 Coll_int_value of_int
R12725:12743 basic_type Int_value rf_of_int proj
R12703:12722 basic_type Coll_int_value effective_collection def
def 12760:12764 Coll_int_value parse
R12791:12808 basic_type Int_value rf_parse proj
R12769:12788 basic_type Coll_int_value effective_collection def
def 12825:12828 Coll_int_value plus
R12855:12871 basic_type Int_value rf_plus proj
R12833:12852 basic_type Coll_int_value effective_collection def
def 12888:12890 Coll_int_value pos
R12917:12932 basic_type Int_value rf_pos proj
R12895:12914 basic_type Coll_int_value effective_collection def
def 12949:12953 Coll_int_value print
R12980:12997 basic_type Int_value rf_print proj
R12958:12977 basic_type Coll_int_value effective_collection def
def 13014:13022 Coll_int_value different
R13049:13070 basic_type Int_value rf_different proj
R13027:13046 basic_type Coll_int_value effective_collection def
def 13087:13101 Coll_int_value equal_reflexive
R13132:13159 basic_type Int_value rf_equal_reflexive proj
R13110:13129 basic_type Coll_int_value effective_collection def
def 13176:13190 Coll_int_value equal_symmetric
R13221:13248 basic_type Int_value rf_equal_symmetric proj
R13199:13218 basic_type Coll_int_value effective_collection def
def 13265:13280 Coll_int_value equal_transitive
R13311:13339 basic_type Int_value rf_equal_transitive proj
R13289:13308 basic_type Coll_int_value effective_collection def
def 13356:13376 Coll_int_value same_is_not_different
R13407:13440 basic_type Int_value rf_same_is_not_different proj
R13385:13404 basic_type Coll_int_value effective_collection def
def 13457:13477 Coll_int_value different_is_complete
R13508:13541 basic_type Int_value rf_different_is_complete proj
R13486:13505 basic_type Coll_int_value effective_collection def
def 13558:13581 Coll_int_value different_is_irreflexive
R13612:13648 basic_type Int_value rf_different_is_irreflexive proj
R13590:13609 basic_type Coll_int_value effective_collection def
def 13665:13686 Coll_int_value different_is_symmetric
R13717:13751 basic_type Int_value rf_different_is_symmetric proj
R13695:13714 basic_type Coll_int_value effective_collection def
R13762:13775 basic_type Coll_int_value <> mod
mod 13786:13795 <> Bool_value
constr 13835:13843 Bool_value mk_record
rec 13807:13819 Bool_value me_as_species
proj 13851:13854 Bool_value rf_T
proj 13914:13923 Bool_value rf_element
proj 13984:13991 Bool_value rf_equal
proj 14078:14087 Bool_value rf_of_bool
proj 14166:14173 Bool_value rf_parse
proj 14244:14255 Bool_value rf_different
proj 14342:14359 Bool_value rf_equal_reflexive
proj 14457:14474 Bool_value rf_equal_symmetric
proj 14617:14635 Bool_value rf_equal_transitive
proj 14819:14826 Bool_value rf_print
proj 14897:14920 Bool_value rf_same_is_not_different
proj 15061:15084 Bool_value rf_different_is_complete
proj 15272:15298 Bool_value rf_different_is_irreflexive
proj 15399:15423 Bool_value rf_different_is_symmetric
R13927:13930 basic_type <> rf_T meth
R13999:14002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14007:14010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14011:14024 basics <> bool__t def
R14003:14006 basic_type <> rf_T meth
R13995:13998 basic_type <> rf_T meth
R14105:14108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14109:14112 basic_type <> rf_T meth
R14091:14104 basics <> bool__t def
R14193:14196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14197:14200 basic_type <> rf_T meth
R14177:14192 basics <> string__t def
R14263:14266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14271:14274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14275:14288 basics <> bool__t def
R14267:14270 basic_type <> rf_T meth
R14259:14262 basic_type <> rf_T meth
R14374:14377 basic_type <> rf_T meth
R14380:14386 Coq.Bool.Bool <> Is_true def
R14390:14397 basic_type <> rf_equal meth
R14401:14401 basic_type <> x var
R14399:14399 basic_type <> x var
R14498:14501 basic_type <> rf_T meth
R14536:14539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14540:14546 Coq.Bool.Bool <> Is_true def
R14550:14557 basic_type <> rf_equal meth
R14561:14561 basic_type <> x var
R14559:14559 basic_type <> y var
R14512:14518 Coq.Bool.Bool <> Is_true def
R14522:14529 basic_type <> rf_equal meth
R14533:14533 basic_type <> y var
R14531:14531 basic_type <> x var
R14662:14665 basic_type <> rf_T meth
R14700:14713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14738:14741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14742:14748 Coq.Bool.Bool <> Is_true def
R14752:14759 basic_type <> rf_equal meth
R14763:14763 basic_type <> z var
R14761:14761 basic_type <> x var
R14714:14720 Coq.Bool.Bool <> Is_true def
R14724:14731 basic_type <> rf_equal meth
R14735:14735 basic_type <> z var
R14733:14733 basic_type <> y var
R14676:14682 Coq.Bool.Bool <> Is_true def
R14686:14693 basic_type <> rf_equal meth
R14697:14697 basic_type <> y var
R14695:14695 basic_type <> x var
R14834:14837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14838:14853 basics <> string__t def
R14830:14833 basic_type <> rf_T meth
R14944:14947 basic_type <> rf_T meth
R14986:14990 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14958:14964 Coq.Bool.Bool <> Is_true def
R14968:14979 basic_type <> rf_different meth
R14983:14983 basic_type <> y var
R14981:14981 basic_type <> x var
R14991:14991 Coq.Init.Logic <> :type_scope:'~'_x not
R14992:14998 Coq.Bool.Bool <> Is_true def
R15003:15010 basic_type <> rf_equal meth
R15014:15014 basic_type <> y var
R15012:15012 basic_type <> x var
R15111:15114 basic_type <> rf_T meth
R15153:15167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15228:15228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15196:15199 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15168:15174 Coq.Bool.Bool <> Is_true def
R15178:15189 basic_type <> rf_different meth
R15193:15193 basic_type <> z var
R15191:15191 basic_type <> x var
R15200:15206 Coq.Bool.Bool <> Is_true def
R15210:15221 basic_type <> rf_different meth
R15225:15225 basic_type <> z var
R15223:15223 basic_type <> y var
R15125:15131 Coq.Bool.Bool <> Is_true def
R15135:15146 basic_type <> rf_different meth
R15150:15150 basic_type <> y var
R15148:15148 basic_type <> x var
R15319:15322 basic_type <> rf_T meth
R15325:15325 Coq.Init.Logic <> :type_scope:'~'_x not
R15326:15332 Coq.Bool.Bool <> Is_true def
R15337:15348 basic_type <> rf_different meth
R15352:15352 basic_type <> x var
R15350:15350 basic_type <> x var
R15447:15450 basic_type <> rf_T meth
R15489:15492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15493:15499 Coq.Bool.Bool <> Is_true def
R15503:15514 basic_type <> rf_different meth
R15518:15518 basic_type <> x var
R15516:15516 basic_type <> y var
R15461:15467 Coq.Bool.Bool <> Is_true def
R15471:15482 basic_type <> rf_different meth
R15486:15486 basic_type <> y var
R15484:15484 basic_type <> x var
def 15545:15551 Bool_value element
R15564:15577 basics <> bool__t def
R15582:15587 basic_type <> abst_T var
R15592:15595 Coq.Init.Datatypes <> true constr
def 15611:15615 Bool_value equal
R15637:15642 basic_type <> abst_T var
R15650:15655 basic_type <> abst_T var
R15664:15677 basics <> bool__t def
R15684:15705 basics <> syntactic_equal def
R15712:15712 basic_type <> y var
R15710:15710 basic_type <> x var
def 15729:15735 Bool_value of_bool
R15748:15761 basics <> bool__t def
R15769:15782 basics <> bool__t def
R15791:15796 basic_type <> abst_T var
R15801:15801 basic_type <> b var
def 15817:15821 Bool_value parse
R15834:15847 basics <> bool__t def
R15855:15870 basics <> string__t def
R15879:15884 basic_type <> abst_T var
R15899:15920 basics <> syntactic_equal def
R15925:15925 basic_type <> x var
R15957:15961 Coq.Init.Datatypes <> false constr
R15947:15950 Coq.Init.Datatypes <> true constr
sec 16078:16101 Bool_value Proof_of_equal_reflexive
var 16117:16122 Bool_value.Proof_of_equal_reflexive abst_T
var 16139:16148 Bool_value.Proof_of_equal_reflexive abst_equal
R16153:16157 basic_type Bool_value equal def
R16163:16168 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
prf 16234:16258 Bool_value for_zenon_equal_reflexive
R16270:16275 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16278:16284 Coq.Bool.Bool <> Is_true def
R16287:16296 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16300:16300 basic_type <> x var
R16298:16298 basic_type <> x var
R16321:16324 Coq.Logic.Classical_Prop <> NNPP thm
R16343:16356 zenon <> zenon_notallex thm
R16682:16688 basic_type <> zenon_G var
R16418:16425 zenon <> zenon_ex thm
R16671:16678 basic_type <> zenon_H6 var
R16497:16502 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16530:16537 basic_type <> zenon_H5 var
R16543:16580 coq_builtins <> zenon_not_syntactic_equal thm
R16659:16666 basic_type <> zenon_H4 var
R16622:16632 zenon <> zenon_noteq thm
R16647:16654 basic_type <> zenon_H3 var
R16636:16645 basic_type <> zenon_Tx_c var
R16595:16604 basic_type <> zenon_Tx_c var
R16584:16593 basic_type <> zenon_Tx_c var
R16441:16446 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16450:16452 Coq.Init.Logic <> :type_scope:'~'_x not
R16477:16477 Coq.Init.Logic <> :type_scope:'~'_x not
R16453:16459 Coq.Bool.Bool <> Is_true def
R16462:16471 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16475:16475 basic_type <> x var
R16473:16473 basic_type <> x var
R16427:16432 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16365:16370 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16374:16380 Coq.Bool.Bool <> Is_true def
R16384:16393 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16397:16397 basic_type <> x var
R16395:16395 basic_type <> x var
R16321:16324 Coq.Logic.Classical_Prop <> NNPP thm
R16343:16356 zenon <> zenon_notallex thm
R16682:16688 basic_type <> zenon_G var
R16418:16425 zenon <> zenon_ex thm
R16671:16678 basic_type <> zenon_H6 var
R16497:16502 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16530:16537 basic_type <> zenon_H5 var
R16543:16580 coq_builtins <> zenon_not_syntactic_equal thm
R16659:16666 basic_type <> zenon_H4 var
R16622:16632 zenon <> zenon_noteq thm
R16647:16654 basic_type <> zenon_H3 var
R16636:16645 basic_type <> zenon_Tx_c var
R16595:16604 basic_type <> zenon_Tx_c var
R16584:16593 basic_type <> zenon_Tx_c var
R16441:16446 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16450:16452 Coq.Init.Logic <> :type_scope:'~'_x not
R16477:16477 Coq.Init.Logic <> :type_scope:'~'_x not
R16453:16459 Coq.Bool.Bool <> Is_true def
R16462:16471 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16475:16475 basic_type <> x var
R16473:16473 basic_type <> x var
R16427:16432 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16365:16370 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16374:16380 Coq.Bool.Bool <> Is_true def
R16384:16393 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16397:16397 basic_type <> x var
R16395:16395 basic_type <> x var
prf 16766:16801 Bool_value for_zenon_abstracted_equal_reflexive
R16822:16827 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16830:16836 Coq.Bool.Bool <> Is_true def
R16840:16849 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16853:16853 basic_type <> x var
R16851:16851 basic_type <> x var
R16892:16897 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16892:16897 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_T var
R16939:16948 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16939:16948 basic_type <> Bool_value.Proof_of_equal_reflexive.abst_equal var
R16962:16986 basic_type Bool_value for_zenon_equal_reflexive thm
R16962:16986 basic_type Bool_value for_zenon_equal_reflexive thm
R17016:17039 basic_type Bool_value.Proof_of_equal_reflexive <> sec
prf 17055:17069 Bool_value equal_reflexive
R17102:17106 basic_type Bool_value equal def
R17108:17113 basic_type <> abst_T var
R17132:17137 basic_type <> abst_T var
R17140:17146 Coq.Bool.Bool <> Is_true def
R17150:17159 basic_type <> abst_equal var
R17163:17163 basic_type <> x var
R17161:17161 basic_type <> x var
R17176:17211 basic_type Bool_value for_zenon_abstracted_equal_reflexive thm
R17176:17211 basic_type Bool_value for_zenon_abstracted_equal_reflexive thm
sec 17342:17365 Bool_value Proof_of_equal_symmetric
var 17381:17386 Bool_value.Proof_of_equal_symmetric abst_T
var 17403:17412 Bool_value.Proof_of_equal_symmetric abst_equal
R17417:17421 basic_type Bool_value equal def
R17427:17432 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
prf 17497:17521 Bool_value for_zenon_equal_symmetric
R17533:17538 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17550:17555 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17558:17559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17584:17587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17612:17612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17588:17594 Coq.Bool.Bool <> Is_true def
R17597:17606 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17610:17610 basic_type <> x var
R17608:17608 basic_type <> y var
R17560:17566 Coq.Bool.Bool <> Is_true def
R17569:17578 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17582:17582 basic_type <> y var
R17580:17580 basic_type <> x var
R17633:17636 Coq.Logic.Classical_Prop <> NNPP thm
R17655:17668 zenon <> zenon_notallex thm
R18592:18598 basic_type <> zenon_G var
R17779:17786 zenon <> zenon_ex thm
R18581:18588 basic_type <> zenon_Hd var
R17906:17911 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17926:17939 zenon <> zenon_notallex thm
R18570:18577 basic_type <> zenon_Hc var
R18049:18056 zenon <> zenon_ex thm
R18559:18566 basic_type <> zenon_Hb var
R18176:18181 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18196:18209 zenon <> zenon_notimply thm
R18548:18555 basic_type <> zenon_Ha var
R18254:18261 basic_type <> zenon_H9 var
R18268:18301 coq_builtins <> zenon_syntactic_equal thm
R18536:18543 basic_type <> zenon_H8 var
R18375:18382 basic_type <> zenon_H7 var
R18389:18426 coq_builtins <> zenon_not_syntactic_equal thm
R18524:18531 basic_type <> zenon_H6 var
R18468:18478 zenon <> zenon_eqsym thm
R18513:18520 basic_type <> zenon_H5 var
R18504:18511 basic_type <> zenon_H4 var
R18493:18502 basic_type <> zenon_Ty_d var
R18482:18491 basic_type <> zenon_Tx_c var
R18441:18450 basic_type <> zenon_Tx_c var
R18430:18439 basic_type <> zenon_Ty_d var
R18334:18343 basic_type <> zenon_Ty_d var
R18323:18332 basic_type <> zenon_Tx_c var
R18303:18319 zenon_focal <> zenon_focal_eqdec thm
R18072:18077 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18081:18082 Coq.Init.Logic <> :type_scope:'~'_x not
R18156:18156 Coq.Init.Logic <> :type_scope:'~'_x not
R18083:18083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18117:18121 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18155:18155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18122:18128 Coq.Bool.Bool <> Is_true def
R18131:18140 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18144:18153 basic_type <> zenon_Tx_c var
R18142:18142 basic_type <> y var
R18084:18090 Coq.Bool.Bool <> Is_true def
R18093:18102 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18115:18115 basic_type <> y var
R18104:18113 basic_type <> zenon_Tx_c var
R18058:18063 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17948:17953 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17957:17957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17991:17994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18028:18028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17995:18001 Coq.Bool.Bool <> Is_true def
R18004:18013 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18017:18026 basic_type <> zenon_Tx_c var
R18015:18015 basic_type <> y var
R17958:17964 Coq.Bool.Bool <> Is_true def
R17967:17976 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17989:17989 basic_type <> y var
R17978:17987 basic_type <> zenon_Tx_c var
R17802:17807 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17811:17812 Coq.Init.Logic <> :type_scope:'~'_x not
R17886:17886 Coq.Init.Logic <> :type_scope:'~'_x not
R17822:17827 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17830:17830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17856:17859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17884:17884 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17860:17866 Coq.Bool.Bool <> Is_true def
R17869:17878 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17882:17882 basic_type <> x var
R17880:17880 basic_type <> y var
R17831:17837 Coq.Bool.Bool <> Is_true def
R17841:17850 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17854:17854 basic_type <> y var
R17852:17852 basic_type <> x var
R17788:17793 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17677:17682 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17695:17700 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17703:17704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17729:17732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17757:17757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17733:17739 Coq.Bool.Bool <> Is_true def
R17742:17751 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17755:17755 basic_type <> x var
R17753:17753 basic_type <> y var
R17705:17711 Coq.Bool.Bool <> Is_true def
R17714:17723 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17727:17727 basic_type <> y var
R17725:17725 basic_type <> x var
R17633:17636 Coq.Logic.Classical_Prop <> NNPP thm
R17655:17668 zenon <> zenon_notallex thm
R18592:18598 basic_type <> zenon_G var
R17779:17786 zenon <> zenon_ex thm
R18581:18588 basic_type <> zenon_Hd var
R17906:17911 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17926:17939 zenon <> zenon_notallex thm
R18570:18577 basic_type <> zenon_Hc var
R18049:18056 zenon <> zenon_ex thm
R18559:18566 basic_type <> zenon_Hb var
R18176:18181 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18196:18209 zenon <> zenon_notimply thm
R18548:18555 basic_type <> zenon_Ha var
R18254:18261 basic_type <> zenon_H9 var
R18268:18301 coq_builtins <> zenon_syntactic_equal thm
R18536:18543 basic_type <> zenon_H8 var
R18375:18382 basic_type <> zenon_H7 var
R18389:18426 coq_builtins <> zenon_not_syntactic_equal thm
R18524:18531 basic_type <> zenon_H6 var
R18468:18478 zenon <> zenon_eqsym thm
R18513:18520 basic_type <> zenon_H5 var
R18504:18511 basic_type <> zenon_H4 var
R18493:18502 basic_type <> zenon_Ty_d var
R18482:18491 basic_type <> zenon_Tx_c var
R18441:18450 basic_type <> zenon_Tx_c var
R18430:18439 basic_type <> zenon_Ty_d var
R18334:18343 basic_type <> zenon_Ty_d var
R18323:18332 basic_type <> zenon_Tx_c var
R18303:18319 zenon_focal <> zenon_focal_eqdec thm
R18072:18077 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18081:18082 Coq.Init.Logic <> :type_scope:'~'_x not
R18156:18156 Coq.Init.Logic <> :type_scope:'~'_x not
R18083:18083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18117:18121 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18155:18155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18122:18128 Coq.Bool.Bool <> Is_true def
R18131:18140 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18144:18153 basic_type <> zenon_Tx_c var
R18142:18142 basic_type <> y var
R18084:18090 Coq.Bool.Bool <> Is_true def
R18093:18102 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18115:18115 basic_type <> y var
R18104:18113 basic_type <> zenon_Tx_c var
R18058:18063 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17948:17953 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17957:17957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17991:17994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18028:18028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17995:18001 Coq.Bool.Bool <> Is_true def
R18004:18013 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18017:18026 basic_type <> zenon_Tx_c var
R18015:18015 basic_type <> y var
R17958:17964 Coq.Bool.Bool <> Is_true def
R17967:17976 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17989:17989 basic_type <> y var
R17978:17987 basic_type <> zenon_Tx_c var
R17802:17807 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17811:17812 Coq.Init.Logic <> :type_scope:'~'_x not
R17886:17886 Coq.Init.Logic <> :type_scope:'~'_x not
R17822:17827 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17830:17830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17856:17859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17884:17884 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17860:17866 Coq.Bool.Bool <> Is_true def
R17869:17878 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17882:17882 basic_type <> x var
R17880:17880 basic_type <> y var
R17831:17837 Coq.Bool.Bool <> Is_true def
R17841:17850 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17854:17854 basic_type <> y var
R17852:17852 basic_type <> x var
R17788:17793 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17677:17682 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17695:17700 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R17703:17704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17729:17732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17757:17757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17733:17739 Coq.Bool.Bool <> Is_true def
R17742:17751 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17755:17755 basic_type <> x var
R17753:17753 basic_type <> y var
R17705:17711 Coq.Bool.Bool <> Is_true def
R17714:17723 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R17727:17727 basic_type <> y var
R17725:17725 basic_type <> x var
prf 18676:18711 Bool_value for_zenon_abstracted_equal_symmetric
R18735:18740 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18777:18780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18781:18787 Coq.Bool.Bool <> Is_true def
R18791:18800 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18804:18804 basic_type <> x var
R18802:18802 basic_type <> y var
R18751:18757 Coq.Bool.Bool <> Is_true def
R18761:18770 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18774:18774 basic_type <> y var
R18772:18772 basic_type <> x var
R18843:18848 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18843:18848 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_T var
R18890:18899 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18890:18899 basic_type <> Bool_value.Proof_of_equal_symmetric.abst_equal var
R18913:18937 basic_type Bool_value for_zenon_equal_symmetric thm
R18913:18937 basic_type Bool_value for_zenon_equal_symmetric thm
R18967:18990 basic_type Bool_value.Proof_of_equal_symmetric <> sec
prf 19006:19020 Bool_value equal_symmetric
R19053:19057 basic_type Bool_value equal def
R19059:19064 basic_type <> abst_T var
R19086:19091 basic_type <> abst_T var
R19126:19129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19130:19136 Coq.Bool.Bool <> Is_true def
R19140:19149 basic_type <> abst_equal var
R19153:19153 basic_type <> x var
R19151:19151 basic_type <> y var
R19100:19106 Coq.Bool.Bool <> Is_true def
R19110:19119 basic_type <> abst_equal var
R19123:19123 basic_type <> y var
R19121:19121 basic_type <> x var
R19166:19201 basic_type Bool_value for_zenon_abstracted_equal_symmetric thm
R19166:19201 basic_type Bool_value for_zenon_abstracted_equal_symmetric thm
sec 19333:19357 Bool_value Proof_of_equal_transitive
var 19373:19378 Bool_value.Proof_of_equal_transitive abst_T
var 19395:19404 Bool_value.Proof_of_equal_transitive abst_equal
R19409:19413 basic_type Bool_value equal def
R19419:19424 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
prf 19489:19514 Bool_value for_zenon_equal_transitive
R19526:19531 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19543:19548 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19561:19566 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19569:19569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19594:19597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19653:19653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19598:19598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19623:19627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19652:19652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19628:19634 Coq.Bool.Bool <> Is_true def
R19637:19646 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19650:19650 basic_type <> z var
R19648:19648 basic_type <> x var
R19599:19605 Coq.Bool.Bool <> Is_true def
R19608:19617 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19621:19621 basic_type <> z var
R19619:19619 basic_type <> y var
R19570:19576 Coq.Bool.Bool <> Is_true def
R19579:19588 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19592:19592 basic_type <> y var
R19590:19590 basic_type <> x var
R19675:19678 Coq.Logic.Classical_Prop <> NNPP thm
R19697:19710 zenon <> zenon_notallex thm
R21489:21495 basic_type <> zenon_G var
R19870:19877 zenon <> zenon_ex thm
R21477:21485 basic_type <> zenon_H15 var
R20046:20051 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20066:20079 zenon <> zenon_notallex thm
R21465:21473 basic_type <> zenon_H14 var
R20239:20246 zenon <> zenon_ex thm
R21453:21461 basic_type <> zenon_H13 var
R20413:20418 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20433:20446 zenon <> zenon_notallex thm
R21441:21449 basic_type <> zenon_H12 var
R20606:20613 zenon <> zenon_ex thm
R21429:21437 basic_type <> zenon_H11 var
R20780:20785 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20801:20814 zenon <> zenon_notimply thm
R21417:21425 basic_type <> zenon_H10 var
R20845:20858 zenon <> zenon_notimply thm
R21406:21413 basic_type <> zenon_Hf var
R20903:20910 basic_type <> zenon_He var
R20917:20950 coq_builtins <> zenon_syntactic_equal thm
R21394:21401 basic_type <> zenon_Hd var
R21024:21031 basic_type <> zenon_Hc var
R21038:21071 coq_builtins <> zenon_syntactic_equal thm
R21382:21389 basic_type <> zenon_Hb var
R21145:21152 basic_type <> zenon_Ha var
R21159:21196 coq_builtins <> zenon_not_syntactic_equal thm
R21370:21377 basic_type <> zenon_H9 var
R21238:21248 zenon <> zenon_subst thm
R21359:21366 basic_type <> zenon_H6 var
R21350:21357 basic_type <> zenon_H5 var
R21330:21337 basic_type <> zenon_H8 var
R21339:21346 basic_type <> zenon_H7 var
R21303:21312 basic_type <> zenon_Tz_e var
R21292:21301 basic_type <> zenon_Ty_d var
R21278:21280 Coq.Init.Logic <> :type_scope:x_'='_x not
R21268:21277 basic_type <> zenon_Tx_c var
R21281:21288 basic_type <> zenon_Vf var
R21211:21220 basic_type <> zenon_Tz_e var
R21200:21209 basic_type <> zenon_Tx_c var
R21104:21113 basic_type <> zenon_Tz_e var
R21093:21102 basic_type <> zenon_Ty_d var
R21073:21089 zenon_focal <> zenon_focal_eqdec thm
R20983:20992 basic_type <> zenon_Ty_d var
R20972:20981 basic_type <> zenon_Tx_c var
R20952:20968 zenon_focal <> zenon_focal_eqdec thm
R20629:20634 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20638:20639 Coq.Init.Logic <> :type_scope:'~'_x not
R20760:20760 Coq.Init.Logic <> :type_scope:'~'_x not
R20640:20640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20683:20686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20759:20759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20687:20687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20721:20724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20758:20758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20725:20731 Coq.Bool.Bool <> Is_true def
R20734:20743 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20756:20756 basic_type <> z var
R20745:20754 basic_type <> zenon_Tx_c var
R20688:20694 Coq.Bool.Bool <> Is_true def
R20697:20706 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20719:20719 basic_type <> z var
R20708:20717 basic_type <> zenon_Ty_d var
R20641:20647 Coq.Bool.Bool <> Is_true def
R20650:20659 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20672:20681 basic_type <> zenon_Ty_d var
R20661:20670 basic_type <> zenon_Tx_c var
R20615:20620 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20456:20461 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20465:20465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20508:20511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20585:20585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20512:20512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20547:20550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20584:20584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20551:20557 Coq.Bool.Bool <> Is_true def
R20560:20569 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20582:20582 basic_type <> z var
R20571:20580 basic_type <> zenon_Tx_c var
R20513:20519 Coq.Bool.Bool <> Is_true def
R20523:20532 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20545:20545 basic_type <> z var
R20534:20543 basic_type <> zenon_Ty_d var
R20466:20472 Coq.Bool.Bool <> Is_true def
R20475:20484 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20497:20506 basic_type <> zenon_Ty_d var
R20486:20495 basic_type <> zenon_Tx_c var
R20262:20267 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20271:20272 Coq.Init.Logic <> :type_scope:'~'_x not
R20393:20393 Coq.Init.Logic <> :type_scope:'~'_x not
R20282:20287 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20290:20290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20324:20327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20391:20391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20328:20328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20353:20356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20390:20390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20357:20363 Coq.Bool.Bool <> Is_true def
R20366:20375 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20388:20388 basic_type <> z var
R20377:20386 basic_type <> zenon_Tx_c var
R20329:20335 Coq.Bool.Bool <> Is_true def
R20338:20347 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20351:20351 basic_type <> z var
R20349:20349 basic_type <> y var
R20291:20297 Coq.Bool.Bool <> Is_true def
R20300:20309 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20322:20322 basic_type <> y var
R20311:20320 basic_type <> zenon_Tx_c var
R20248:20253 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20088:20093 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20107:20112 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20115:20115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20149:20152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20217:20217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20153:20153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20178:20182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20216:20216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20183:20189 Coq.Bool.Bool <> Is_true def
R20192:20201 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20214:20214 basic_type <> z var
R20203:20212 basic_type <> zenon_Tx_c var
R20154:20160 Coq.Bool.Bool <> Is_true def
R20163:20172 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20176:20176 basic_type <> z var
R20174:20174 basic_type <> y var
R20116:20122 Coq.Bool.Bool <> Is_true def
R20125:20134 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20147:20147 basic_type <> y var
R20136:20145 basic_type <> zenon_Tx_c var
R19893:19898 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19902:19903 Coq.Init.Logic <> :type_scope:'~'_x not
R20025:20025 Coq.Init.Logic <> :type_scope:'~'_x not
R19913:19918 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19930:19935 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19938:19938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19963:19967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20022:20022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19968:19968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19993:19996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20021:20021 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19997:20003 Coq.Bool.Bool <> Is_true def
R20006:20015 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20019:20019 basic_type <> z var
R20017:20017 basic_type <> x var
R19969:19975 Coq.Bool.Bool <> Is_true def
R19978:19987 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19991:19991 basic_type <> z var
R19989:19989 basic_type <> y var
R19939:19945 Coq.Bool.Bool <> Is_true def
R19948:19957 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19961:19961 basic_type <> y var
R19959:19959 basic_type <> x var
R19879:19884 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19719:19724 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19737:19742 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19755:19760 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19763:19763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19788:19791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19847:19847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19792:19792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19817:19821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19846:19846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19822:19828 Coq.Bool.Bool <> Is_true def
R19831:19840 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19844:19844 basic_type <> z var
R19842:19842 basic_type <> x var
R19793:19799 Coq.Bool.Bool <> Is_true def
R19802:19811 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19815:19815 basic_type <> z var
R19813:19813 basic_type <> y var
R19764:19770 Coq.Bool.Bool <> Is_true def
R19773:19782 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19786:19786 basic_type <> y var
R19784:19784 basic_type <> x var
R19675:19678 Coq.Logic.Classical_Prop <> NNPP thm
R19697:19710 zenon <> zenon_notallex thm
R21489:21495 basic_type <> zenon_G var
R19870:19877 zenon <> zenon_ex thm
R21477:21485 basic_type <> zenon_H15 var
R20046:20051 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20066:20079 zenon <> zenon_notallex thm
R21465:21473 basic_type <> zenon_H14 var
R20239:20246 zenon <> zenon_ex thm
R21453:21461 basic_type <> zenon_H13 var
R20413:20418 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20433:20446 zenon <> zenon_notallex thm
R21441:21449 basic_type <> zenon_H12 var
R20606:20613 zenon <> zenon_ex thm
R21429:21437 basic_type <> zenon_H11 var
R20780:20785 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20801:20814 zenon <> zenon_notimply thm
R21417:21425 basic_type <> zenon_H10 var
R20845:20858 zenon <> zenon_notimply thm
R21406:21413 basic_type <> zenon_Hf var
R20903:20910 basic_type <> zenon_He var
R20917:20950 coq_builtins <> zenon_syntactic_equal thm
R21394:21401 basic_type <> zenon_Hd var
R21024:21031 basic_type <> zenon_Hc var
R21038:21071 coq_builtins <> zenon_syntactic_equal thm
R21382:21389 basic_type <> zenon_Hb var
R21145:21152 basic_type <> zenon_Ha var
R21159:21196 coq_builtins <> zenon_not_syntactic_equal thm
R21370:21377 basic_type <> zenon_H9 var
R21238:21248 zenon <> zenon_subst thm
R21359:21366 basic_type <> zenon_H6 var
R21350:21357 basic_type <> zenon_H5 var
R21330:21337 basic_type <> zenon_H8 var
R21339:21346 basic_type <> zenon_H7 var
R21303:21312 basic_type <> zenon_Tz_e var
R21292:21301 basic_type <> zenon_Ty_d var
R21278:21280 Coq.Init.Logic <> :type_scope:x_'='_x not
R21268:21277 basic_type <> zenon_Tx_c var
R21281:21288 basic_type <> zenon_Vf var
R21211:21220 basic_type <> zenon_Tz_e var
R21200:21209 basic_type <> zenon_Tx_c var
R21104:21113 basic_type <> zenon_Tz_e var
R21093:21102 basic_type <> zenon_Ty_d var
R21073:21089 zenon_focal <> zenon_focal_eqdec thm
R20983:20992 basic_type <> zenon_Ty_d var
R20972:20981 basic_type <> zenon_Tx_c var
R20952:20968 zenon_focal <> zenon_focal_eqdec thm
R20629:20634 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20638:20639 Coq.Init.Logic <> :type_scope:'~'_x not
R20760:20760 Coq.Init.Logic <> :type_scope:'~'_x not
R20640:20640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20683:20686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20759:20759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20687:20687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20721:20724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20758:20758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20725:20731 Coq.Bool.Bool <> Is_true def
R20734:20743 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20756:20756 basic_type <> z var
R20745:20754 basic_type <> zenon_Tx_c var
R20688:20694 Coq.Bool.Bool <> Is_true def
R20697:20706 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20719:20719 basic_type <> z var
R20708:20717 basic_type <> zenon_Ty_d var
R20641:20647 Coq.Bool.Bool <> Is_true def
R20650:20659 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20672:20681 basic_type <> zenon_Ty_d var
R20661:20670 basic_type <> zenon_Tx_c var
R20615:20620 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20456:20461 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20465:20465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20508:20511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20585:20585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20512:20512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20547:20550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20584:20584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20551:20557 Coq.Bool.Bool <> Is_true def
R20560:20569 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20582:20582 basic_type <> z var
R20571:20580 basic_type <> zenon_Tx_c var
R20513:20519 Coq.Bool.Bool <> Is_true def
R20523:20532 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20545:20545 basic_type <> z var
R20534:20543 basic_type <> zenon_Ty_d var
R20466:20472 Coq.Bool.Bool <> Is_true def
R20475:20484 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20497:20506 basic_type <> zenon_Ty_d var
R20486:20495 basic_type <> zenon_Tx_c var
R20262:20267 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20271:20272 Coq.Init.Logic <> :type_scope:'~'_x not
R20393:20393 Coq.Init.Logic <> :type_scope:'~'_x not
R20282:20287 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20290:20290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20324:20327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20391:20391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20328:20328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20353:20356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20390:20390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20357:20363 Coq.Bool.Bool <> Is_true def
R20366:20375 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20388:20388 basic_type <> z var
R20377:20386 basic_type <> zenon_Tx_c var
R20329:20335 Coq.Bool.Bool <> Is_true def
R20338:20347 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20351:20351 basic_type <> z var
R20349:20349 basic_type <> y var
R20291:20297 Coq.Bool.Bool <> Is_true def
R20300:20309 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20322:20322 basic_type <> y var
R20311:20320 basic_type <> zenon_Tx_c var
R20248:20253 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20088:20093 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20107:20112 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R20115:20115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20149:20152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20217:20217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20153:20153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20178:20182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20216:20216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20183:20189 Coq.Bool.Bool <> Is_true def
R20192:20201 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20214:20214 basic_type <> z var
R20203:20212 basic_type <> zenon_Tx_c var
R20154:20160 Coq.Bool.Bool <> Is_true def
R20163:20172 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20176:20176 basic_type <> z var
R20174:20174 basic_type <> y var
R20116:20122 Coq.Bool.Bool <> Is_true def
R20125:20134 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20147:20147 basic_type <> y var
R20136:20145 basic_type <> zenon_Tx_c var
R19893:19898 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19902:19903 Coq.Init.Logic <> :type_scope:'~'_x not
R20025:20025 Coq.Init.Logic <> :type_scope:'~'_x not
R19913:19918 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19930:19935 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19938:19938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19963:19967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20022:20022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19968:19968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19993:19996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20021:20021 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19997:20003 Coq.Bool.Bool <> Is_true def
R20006:20015 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R20019:20019 basic_type <> z var
R20017:20017 basic_type <> x var
R19969:19975 Coq.Bool.Bool <> Is_true def
R19978:19987 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19991:19991 basic_type <> z var
R19989:19989 basic_type <> y var
R19939:19945 Coq.Bool.Bool <> Is_true def
R19948:19957 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19961:19961 basic_type <> y var
R19959:19959 basic_type <> x var
R19879:19884 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19719:19724 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19737:19742 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19755:19760 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R19763:19763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19788:19791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19847:19847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19792:19792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19817:19821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19846:19846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19822:19828 Coq.Bool.Bool <> Is_true def
R19831:19840 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19844:19844 basic_type <> z var
R19842:19842 basic_type <> x var
R19793:19799 Coq.Bool.Bool <> Is_true def
R19802:19811 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19815:19815 basic_type <> z var
R19813:19813 basic_type <> y var
R19764:19770 Coq.Bool.Bool <> Is_true def
R19773:19782 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R19786:19786 basic_type <> y var
R19784:19784 basic_type <> x var
prf 21573:21609 Bool_value for_zenon_abstracted_equal_transitive
R21636:21641 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R21678:21691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21718:21721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21722:21728 Coq.Bool.Bool <> Is_true def
R21732:21741 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R21745:21745 basic_type <> z var
R21743:21743 basic_type <> x var
R21692:21698 Coq.Bool.Bool <> Is_true def
R21702:21711 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R21715:21715 basic_type <> z var
R21713:21713 basic_type <> y var
R21652:21658 Coq.Bool.Bool <> Is_true def
R21662:21671 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R21675:21675 basic_type <> y var
R21673:21673 basic_type <> x var
R21784:21789 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R21784:21789 basic_type <> Bool_value.Proof_of_equal_transitive.abst_T var
R21831:21840 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R21831:21840 basic_type <> Bool_value.Proof_of_equal_transitive.abst_equal var
R21854:21879 basic_type Bool_value for_zenon_equal_transitive thm
R21854:21879 basic_type Bool_value for_zenon_equal_transitive thm
R21909:21933 basic_type Bool_value.Proof_of_equal_transitive <> sec
prf 21949:21964 Bool_value equal_transitive
R21997:22001 basic_type Bool_value equal def
R22003:22008 basic_type <> abst_T var
R22033:22038 basic_type <> abst_T var
R22073:22084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22111:22114 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22115:22121 Coq.Bool.Bool <> Is_true def
R22125:22134 basic_type <> abst_equal var
R22138:22138 basic_type <> z var
R22136:22136 basic_type <> x var
R22085:22091 Coq.Bool.Bool <> Is_true def
R22095:22104 basic_type <> abst_equal var
R22108:22108 basic_type <> z var
R22106:22106 basic_type <> y var
R22047:22053 Coq.Bool.Bool <> Is_true def
R22057:22066 basic_type <> abst_equal var
R22070:22070 basic_type <> y var
R22068:22068 basic_type <> x var
R22151:22187 basic_type Bool_value for_zenon_abstracted_equal_transitive thm
R22151:22187 basic_type Bool_value for_zenon_abstracted_equal_transitive thm
def 22218:22222 Bool_value print
R22235:22248 basics <> bool__t def
R22275:22278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22285:22288 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22289:22302 basics <> bool__t def
R22279:22284 basic_type <> abst_T var
R22269:22274 basic_type <> abst_T var
R22310:22315 basic_type <> abst_T var
R22324:22339 basics <> string__t def
R22353:22362 basic_type <> abst_equal var
R22366:22369 Coq.Init.Datatypes <> true constr
R22364:22364 basic_type <> x var
def 22496:22512 Bool_value collection_create
R22538:22551 basics <> bool__t def
R22627:22633 basic_type Bool_value element def
R22707:22711 basic_type Bool_value equal def
R22713:22721 basic_type <> local_rep var
R22797:22803 basic_type Bool_value of_bool def
R22877:22881 basic_type Bool_value parse def
R22949:22969 sets Setoid different def
R22981:22991 basic_type <> local_equal var
R22971:22979 basic_type <> local_rep var
R23075:23089 basic_type Bool_value equal_reflexive thm
R23091:23099 basic_type <> local_rep var
R23183:23197 basic_type Bool_value equal_symmetric thm
R23199:23207 basic_type <> local_rep var
R23292:23307 basic_type Bool_value equal_transitive thm
R23309:23317 basic_type <> local_rep var
R23391:23395 basic_type Bool_value print def
R23397:23407 basic_type <> local_equal var
R23487:23519 sets Setoid same_is_not_different thm
R23537:23547 basic_type <> local_equal var
R23527:23535 basic_type <> local_rep var
R23627:23659 sets Setoid different_is_complete thm
R23784:23810 basic_type <> local_same_is_not_different var
R23755:23776 basic_type <> local_equal_transitive var
R23733:23753 basic_type <> local_equal_symmetric var
R23705:23725 basic_type <> local_equal_reflexive var
R23689:23703 basic_type <> local_different var
R23677:23687 basic_type <> local_equal var
R23667:23675 basic_type <> local_rep var
R23899:23934 sets Setoid different_is_irreflexive thm
R24002:24028 basic_type <> local_same_is_not_different var
R23980:24000 basic_type <> local_equal_reflexive var
R23964:23978 basic_type <> local_different var
R23946:23956 basic_type <> local_equal var
R23936:23944 basic_type <> local_rep var
R24109:24142 sets Setoid different_is_symmetric thm
R24216:24242 basic_type <> local_same_is_not_different var
R24188:24208 basic_type <> local_equal_symmetric var
R24172:24186 basic_type <> local_different var
R24160:24170 basic_type <> local_equal var
R24150:24158 basic_type <> local_rep var
R24251:24259 basic_type Bool_value mk_record constr
R24521:24548 basic_type <> local_different_is_symmetric var
R24486:24515 basic_type <> local_different_is_irreflexive var
R24458:24484 basic_type <> local_different_is_complete var
R24426:24452 basic_type <> local_same_is_not_different var
R24414:24424 basic_type <> local_print var
R24391:24412 basic_type <> local_equal_transitive var
R24365:24385 basic_type <> local_equal_symmetric var
R24343:24363 basic_type <> local_equal_reflexive var
R24327:24341 basic_type <> local_different var
R24311:24321 basic_type <> local_parse var
R24297:24309 basic_type <> local_of_bool var
R24285:24295 basic_type <> local_equal var
R24271:24283 basic_type <> local_element var
R24261:24269 basic_type <> local_rep var
R24558:24567 basic_type Bool_value <> mod
mod 24578:24592 <> Coll_bool_value
var 24601:24620 Coll_bool_value effective_collection
R24625:24652 basic_type Bool_value collection_create def
def 24723:24735 Coll_bool_value me_as_carrier
R24740:24753 basics <> bool__t def
def 24769:24775 Coll_bool_value element
R24802:24822 basic_type Bool_value rf_element proj
R24780:24799 basic_type Coll_bool_value effective_collection def
def 24839:24843 Coll_bool_value equal
R24870:24888 basic_type Bool_value rf_equal proj
R24848:24867 basic_type Coll_bool_value effective_collection def
def 24905:24911 Coll_bool_value of_bool
R24938:24958 basic_type Bool_value rf_of_bool proj
R24916:24935 basic_type Coll_bool_value effective_collection def
def 24975:24979 Coll_bool_value parse
R25006:25024 basic_type Bool_value rf_parse proj
R24984:25003 basic_type Coll_bool_value effective_collection def
def 25041:25049 Coll_bool_value different
R25076:25098 basic_type Bool_value rf_different proj
R25054:25073 basic_type Coll_bool_value effective_collection def
def 25115:25129 Coll_bool_value equal_reflexive
R25160:25188 basic_type Bool_value rf_equal_reflexive proj
R25138:25157 basic_type Coll_bool_value effective_collection def
def 25205:25219 Coll_bool_value equal_symmetric
R25250:25278 basic_type Bool_value rf_equal_symmetric proj
R25228:25247 basic_type Coll_bool_value effective_collection def
def 25295:25310 Coll_bool_value equal_transitive
R25341:25370 basic_type Bool_value rf_equal_transitive proj
R25319:25338 basic_type Coll_bool_value effective_collection def
def 25387:25391 Coll_bool_value print
R25418:25436 basic_type Bool_value rf_print proj
R25396:25415 basic_type Coll_bool_value effective_collection def
def 25453:25473 Coll_bool_value same_is_not_different
R25504:25538 basic_type Bool_value rf_same_is_not_different proj
R25482:25501 basic_type Coll_bool_value effective_collection def
def 25555:25575 Coll_bool_value different_is_complete
R25606:25640 basic_type Bool_value rf_different_is_complete proj
R25584:25603 basic_type Coll_bool_value effective_collection def
def 25657:25680 Coll_bool_value different_is_irreflexive
R25711:25748 basic_type Bool_value rf_different_is_irreflexive proj
R25689:25708 basic_type Coll_bool_value effective_collection def
def 25765:25786 Coll_bool_value different_is_symmetric
R25817:25852 basic_type Bool_value rf_different_is_symmetric proj
R25795:25814 basic_type Coll_bool_value effective_collection def
R25863:25877 basic_type Coll_bool_value <> mod
