DIGEST 5c8d9de6a0216cb652eefda61adcc2f3
Fnum_capteur
R228:232 zenon <> <> lib
R250:261 zenon_induct <> <> lib
R279:289 zenon_focal <> <> lib
R307:310 Coq.Bool.Bool <> <> lib
R328:333 Coq.ZArith.ZArith <> <> lib
R371:375 Coq.Reals.Reals <> <> lib
R393:397 Coq.Strings.Ascii <> <> lib
R415:420 Coq.Strings.String <> <> lib
R438:441 Coq.Lists.List <> <> lib
R459:469 Coq.Wellfounded.Wellfounded <> <> lib
R487:492 Coq.funind.Recdef <> <> lib
R510:521 coq_builtins <> <> lib
R539:547 Coq.Relations.Relations <> <> lib
R565:567 Coq.ZArith.Zwf <> <> lib
R727:732 basics <> <> lib
R743:746 sets <> <> lib
R757:762 orders <> <> lib
R773:777 peano <> <> lib
mod 787:796 <> Sp_capteur
R806:815 num_capteur Sp_capteur <> mod
mod 826:836 <> Imp_capteur
constr 888:896 Imp_capteur mk_record
rec 848:860 Imp_capteur me_as_species
proj 904:907 Imp_capteur rf_T
proj 969:977 Imp_capteur rf_capt_1
proj 1040:1047 Imp_capteur rf_equal
proj 1132:1139 Imp_capteur rf_parse
proj 1222:1230 Imp_capteur rf_capt_2
proj 1293:1302 Imp_capteur rf_element
proj 1353:1364 Imp_capteur rf_different
proj 1453:1470 Imp_capteur rf_equal_reflexive
proj 1570:1587 Imp_capteur rf_equal_symmetric
proj 1732:1750 Imp_capteur rf_equal_transitive
proj 1936:1961 Imp_capteur rf_all_field_different_0_1
proj 2069:2077 Imp_capteur rf_capt_3
proj 2128:2151 Imp_capteur rf_same_is_not_different
proj 2304:2329 Imp_capteur rf_all_field_different_0_2
proj 2437:2462 Imp_capteur rf_all_field_different_1_2
proj 2570:2581 Imp_capteur rf_all_value
proj 2797:2804 Imp_capteur rf_print
proj 2875:2898 Imp_capteur rf_different_is_complete
proj 3086:3112 Imp_capteur rf_different_is_irreflexive
proj 3213:3237 Imp_capteur rf_different_is_symmetric
R981:984 num_capteur <> rf_T meth
R1055:1058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1063:1066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1067:1080 basics <> bool__t def
R1059:1062 num_capteur <> rf_T meth
R1051:1054 num_capteur <> rf_T meth
R1159:1162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1163:1166 num_capteur <> rf_T meth
R1143:1158 basics <> string__t def
R1234:1237 num_capteur <> rf_T meth
R1306:1309 num_capteur <> rf_T meth
R1372:1375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1380:1383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1384:1397 basics <> bool__t def
R1376:1379 num_capteur <> rf_T meth
R1368:1371 num_capteur <> rf_T meth
R1485:1488 num_capteur <> rf_T meth
R1491:1497 Coq.Bool.Bool <> Is_true def
R1501:1508 num_capteur <> rf_equal meth
R1512:1512 num_capteur <> x var
R1510:1510 num_capteur <> x var
R1611:1614 num_capteur <> rf_T meth
R1649:1652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1653:1659 Coq.Bool.Bool <> Is_true def
R1663:1670 num_capteur <> rf_equal meth
R1674:1674 num_capteur <> x var
R1672:1672 num_capteur <> y var
R1625:1631 Coq.Bool.Bool <> Is_true def
R1635:1642 num_capteur <> rf_equal meth
R1646:1646 num_capteur <> y var
R1644:1644 num_capteur <> x var
R1777:1780 num_capteur <> rf_T meth
R1815:1828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1853:1856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1857:1863 Coq.Bool.Bool <> Is_true def
R1867:1874 num_capteur <> rf_equal meth
R1878:1878 num_capteur <> z var
R1876:1876 num_capteur <> x var
R1829:1835 Coq.Bool.Bool <> Is_true def
R1839:1846 num_capteur <> rf_equal meth
R1850:1850 num_capteur <> z var
R1848:1848 num_capteur <> y var
R1791:1797 Coq.Bool.Bool <> Is_true def
R1801:1808 num_capteur <> rf_equal meth
R1812:1812 num_capteur <> y var
R1810:1810 num_capteur <> x var
R1971:1971 Coq.Init.Logic <> :type_scope:'~'_x not
R1972:1978 Coq.Bool.Bool <> Is_true def
R1983:1990 num_capteur <> rf_equal meth
R2002:2010 num_capteur <> rf_capt_2 meth
R1992:2000 num_capteur <> rf_capt_1 meth
R2081:2084 num_capteur <> rf_T meth
R2175:2178 num_capteur <> rf_T meth
R2217:2221 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R2189:2195 Coq.Bool.Bool <> Is_true def
R2199:2210 num_capteur <> rf_different meth
R2214:2214 num_capteur <> y var
R2212:2212 num_capteur <> x var
R2222:2222 Coq.Init.Logic <> :type_scope:'~'_x not
R2223:2229 Coq.Bool.Bool <> Is_true def
R2234:2241 num_capteur <> rf_equal meth
R2245:2245 num_capteur <> y var
R2243:2243 num_capteur <> x var
R2339:2339 Coq.Init.Logic <> :type_scope:'~'_x not
R2340:2346 Coq.Bool.Bool <> Is_true def
R2351:2358 num_capteur <> rf_equal meth
R2370:2378 num_capteur <> rf_capt_3 meth
R2360:2368 num_capteur <> rf_capt_1 meth
R2472:2472 Coq.Init.Logic <> :type_scope:'~'_x not
R2473:2479 Coq.Bool.Bool <> Is_true def
R2484:2491 num_capteur <> rf_equal meth
R2503:2511 num_capteur <> rf_capt_3 meth
R2493:2501 num_capteur <> rf_capt_2 meth
R2602:2605 num_capteur <> rf_T meth
R2648:2661 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2616:2622 Coq.Bool.Bool <> Is_true def
R2626:2633 num_capteur <> rf_equal meth
R2637:2645 num_capteur <> rf_capt_1 meth
R2635:2635 num_capteur <> e var
R2694:2709 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2662:2668 Coq.Bool.Bool <> Is_true def
R2672:2679 num_capteur <> rf_equal meth
R2683:2691 num_capteur <> rf_capt_2 meth
R2681:2681 num_capteur <> e var
R2710:2716 Coq.Bool.Bool <> Is_true def
R2720:2727 num_capteur <> rf_equal meth
R2731:2739 num_capteur <> rf_capt_3 meth
R2729:2729 num_capteur <> e var
R2812:2815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2816:2831 basics <> string__t def
R2808:2811 num_capteur <> rf_T meth
R2925:2928 num_capteur <> rf_T meth
R2967:2981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3042:3042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3010:3013 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2982:2988 Coq.Bool.Bool <> Is_true def
R2992:3003 num_capteur <> rf_different meth
R3007:3007 num_capteur <> z var
R3005:3005 num_capteur <> x var
R3014:3020 Coq.Bool.Bool <> Is_true def
R3024:3035 num_capteur <> rf_different meth
R3039:3039 num_capteur <> z var
R3037:3037 num_capteur <> y var
R2939:2945 Coq.Bool.Bool <> Is_true def
R2949:2960 num_capteur <> rf_different meth
R2964:2964 num_capteur <> y var
R2962:2962 num_capteur <> x var
R3133:3136 num_capteur <> rf_T meth
R3139:3139 Coq.Init.Logic <> :type_scope:'~'_x not
R3140:3146 Coq.Bool.Bool <> Is_true def
R3151:3162 num_capteur <> rf_different meth
R3166:3166 num_capteur <> x var
R3164:3164 num_capteur <> x var
R3261:3264 num_capteur <> rf_T meth
R3303:3306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3307:3313 Coq.Bool.Bool <> Is_true def
R3317:3328 num_capteur <> rf_different meth
R3332:3332 num_capteur <> x var
R3330:3330 num_capteur <> y var
R3275:3281 Coq.Bool.Bool <> Is_true def
R3285:3296 num_capteur <> rf_different meth
R3300:3300 num_capteur <> y var
R3298:3298 num_capteur <> x var
def 3359:3364 Imp_capteur capt_1
R3394:3399 num_capteur <> _p_P_T var
R3413:3418 num_capteur <> _p_P_T var
R3427:3432 num_capteur <> abst_T var
R3437:3445 num_capteur <> _p_P_zero var
def 3461:3465 Imp_capteur equal
R3506:3509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3516:3519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3520:3533 basics <> bool__t def
R3510:3515 num_capteur <> _p_P_T var
R3500:3505 num_capteur <> _p_P_T var
R3547:3552 num_capteur <> _p_P_T var
R3560:3565 num_capteur <> abst_T var
R3577:3582 num_capteur <> abst_T var
R3587:3600 basics <> bool__t def
R3606:3615 num_capteur <> _p_P_equal var
R3619:3619 num_capteur <> y var
R3617:3617 num_capteur <> x var
def 3636:3641 Imp_capteur capt_2
R3674:3677 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3678:3683 num_capteur <> _p_P_T var
R3668:3673 num_capteur <> _p_P_T var
R3701:3706 num_capteur <> _p_P_T var
R3724:3729 num_capteur <> abst_T var
R3734:3739 num_capteur <> abst_T var
R3749:3754 num_capteur <> _p_P_s var
R3756:3766 num_capteur <> abst_capt_1 var
def 3783:3789 Imp_capteur element
R3836:3841 num_capteur <> abst_T var
R3850:3855 num_capteur <> abst_T var
R3860:3870 num_capteur <> abst_capt_1 var
sec 3988:4011 Imp_capteur Proof_of_equal_reflexive
var 4027:4032 Imp_capteur.Proof_of_equal_reflexive _p_P_T
var 4054:4063 Imp_capteur.Proof_of_equal_reflexive _p_P_equal
R4073:4076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4083:4086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4087:4100 basics <> bool__t def
R4077:4082 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4067:4072 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
var 4116:4135 Imp_capteur.Proof_of_equal_reflexive _p_P_equal_reflexive
R4156:4161 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4164:4170 Coq.Bool.Bool <> Is_true def
R4174:4183 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R4187:4187 num_capteur <> x var
R4185:4185 num_capteur <> x var
var 4200:4205 Imp_capteur.Proof_of_equal_reflexive abst_T
R4210:4215 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
var 4226:4235 Imp_capteur.Proof_of_equal_reflexive abst_equal
R4240:4244 num_capteur Imp_capteur equal def
R4257:4266 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R4246:4251 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
prf 4332:4356 Imp_capteur for_zenon_equal_reflexive
R4368:4373 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4376:4382 Coq.Bool.Bool <> Is_true def
R4385:4394 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4398:4398 num_capteur <> x var
R4396:4396 num_capteur <> x var
R4419:4422 Coq.Logic.Classical_Prop <> NNPP thm
R4441:4454 zenon <> zenon_notallex thm
R4784:4790 num_capteur <> zenon_G var
R4516:4523 zenon <> zenon_ex thm
R4773:4780 num_capteur <> zenon_H6 var
R4595:4600 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4628:4635 num_capteur <> zenon_H5 var
R4641:4649 zenon <> zenon_all thm
R4749:4768 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal_reflexive var
R4729:4736 num_capteur <> zenon_H3 var
R4738:4745 num_capteur <> zenon_H2 var
R4702:4711 num_capteur <> zenon_Tx_e var
R4665:4670 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4674:4680 Coq.Bool.Bool <> Is_true def
R4684:4693 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R4697:4697 num_capteur <> x var
R4695:4695 num_capteur <> x var
R4651:4656 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4539:4544 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4548:4550 Coq.Init.Logic <> :type_scope:'~'_x not
R4575:4575 Coq.Init.Logic <> :type_scope:'~'_x not
R4551:4557 Coq.Bool.Bool <> Is_true def
R4560:4569 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4573:4573 num_capteur <> x var
R4571:4571 num_capteur <> x var
R4525:4530 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4463:4468 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4472:4478 Coq.Bool.Bool <> Is_true def
R4482:4491 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4495:4495 num_capteur <> x var
R4493:4493 num_capteur <> x var
R4419:4422 Coq.Logic.Classical_Prop <> NNPP thm
R4441:4454 zenon <> zenon_notallex thm
R4784:4790 num_capteur <> zenon_G var
R4516:4523 zenon <> zenon_ex thm
R4773:4780 num_capteur <> zenon_H6 var
R4595:4600 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4628:4635 num_capteur <> zenon_H5 var
R4641:4649 zenon <> zenon_all thm
R4749:4768 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal_reflexive var
R4729:4736 num_capteur <> zenon_H3 var
R4738:4745 num_capteur <> zenon_H2 var
R4702:4711 num_capteur <> zenon_Tx_e var
R4665:4670 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4674:4680 Coq.Bool.Bool <> Is_true def
R4684:4693 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R4697:4697 num_capteur <> x var
R4695:4695 num_capteur <> x var
R4651:4656 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4539:4544 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4548:4550 Coq.Init.Logic <> :type_scope:'~'_x not
R4575:4575 Coq.Init.Logic <> :type_scope:'~'_x not
R4551:4557 Coq.Bool.Bool <> Is_true def
R4560:4569 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4573:4573 num_capteur <> x var
R4571:4571 num_capteur <> x var
R4525:4530 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4463:4468 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4472:4478 Coq.Bool.Bool <> Is_true def
R4482:4491 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4495:4495 num_capteur <> x var
R4493:4493 num_capteur <> x var
prf 4868:4903 Imp_capteur for_zenon_abstracted_equal_reflexive
R4924:4929 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R4932:4938 Coq.Bool.Bool <> Is_true def
R4942:4951 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R4955:4955 num_capteur <> x var
R4953:4953 num_capteur <> x var
R4993:4998 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R4993:4998 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_T var
R5040:5049 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R5040:5049 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal var
R5101:5120 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal_reflexive var
R5101:5120 num_capteur <> Imp_capteur.Proof_of_equal_reflexive._p_P_equal_reflexive var
R5158:5163 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R5158:5163 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_T var
R5205:5214 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R5205:5214 num_capteur <> Imp_capteur.Proof_of_equal_reflexive.abst_equal var
R5228:5252 num_capteur Imp_capteur for_zenon_equal_reflexive thm
R5228:5252 num_capteur Imp_capteur for_zenon_equal_reflexive thm
R5282:5305 num_capteur Imp_capteur.Proof_of_equal_reflexive <> sec
prf 5321:5335 Imp_capteur equal_reflexive
R5377:5380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5387:5390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5391:5404 basics <> bool__t def
R5381:5386 num_capteur <> _p_P_T var
R5371:5376 num_capteur <> _p_P_T var
R5446:5451 num_capteur <> _p_P_T var
R5454:5460 Coq.Bool.Bool <> Is_true def
R5464:5473 num_capteur <> _p_P_equal var
R5477:5477 num_capteur <> x var
R5475:5475 num_capteur <> x var
R5493:5498 num_capteur <> _p_P_T var
R5520:5524 num_capteur Imp_capteur equal def
R5533:5542 num_capteur <> _p_P_equal var
R5526:5531 num_capteur <> _p_P_T var
R5561:5566 num_capteur <> abst_T var
R5569:5575 Coq.Bool.Bool <> Is_true def
R5579:5588 num_capteur <> abst_equal var
R5592:5592 num_capteur <> x var
R5590:5590 num_capteur <> x var
R5605:5640 num_capteur Imp_capteur for_zenon_abstracted_equal_reflexive thm
R5605:5640 num_capteur Imp_capteur for_zenon_abstracted_equal_reflexive thm
sec 5773:5796 Imp_capteur Proof_of_equal_symmetric
var 5812:5817 Imp_capteur.Proof_of_equal_symmetric _p_P_T
var 5839:5848 Imp_capteur.Proof_of_equal_symmetric _p_P_equal
R5858:5861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5868:5871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5872:5885 basics <> bool__t def
R5862:5867 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R5852:5857 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
var 5901:5920 Imp_capteur.Proof_of_equal_symmetric _p_P_equal_symmetric
R5944:5949 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R5986:5989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5990:5996 Coq.Bool.Bool <> Is_true def
R6000:6009 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R6013:6013 num_capteur <> x var
R6011:6011 num_capteur <> y var
R5960:5966 Coq.Bool.Bool <> Is_true def
R5970:5979 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R5983:5983 num_capteur <> y var
R5981:5981 num_capteur <> x var
var 6026:6031 Imp_capteur.Proof_of_equal_symmetric abst_T
R6036:6041 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
var 6052:6061 Imp_capteur.Proof_of_equal_symmetric abst_equal
R6066:6070 num_capteur Imp_capteur equal def
R6083:6092 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R6072:6077 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
prf 6158:6182 Imp_capteur for_zenon_equal_symmetric
R6194:6199 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6211:6216 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6219:6220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6245:6248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6273:6273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6249:6255 Coq.Bool.Bool <> Is_true def
R6258:6267 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6271:6271 num_capteur <> x var
R6269:6269 num_capteur <> y var
R6221:6227 Coq.Bool.Bool <> Is_true def
R6230:6239 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6243:6243 num_capteur <> y var
R6241:6241 num_capteur <> x var
R6294:6297 Coq.Logic.Classical_Prop <> NNPP thm
R6316:6329 zenon <> zenon_notallex thm
R7407:7413 num_capteur <> zenon_G var
R6440:6447 zenon <> zenon_ex thm
R7396:7403 num_capteur <> zenon_Hf var
R6567:6572 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6587:6600 zenon <> zenon_notallex thm
R7385:7392 num_capteur <> zenon_He var
R6710:6717 zenon <> zenon_ex thm
R7374:7381 num_capteur <> zenon_Hd var
R6837:6842 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6857:6870 zenon <> zenon_notimply thm
R7363:7370 num_capteur <> zenon_Hc var
R6915:6922 num_capteur <> zenon_Hb var
R6943:6950 num_capteur <> zenon_Ha var
R6956:6964 zenon <> zenon_all thm
R7338:7357 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal_symmetric var
R7092:7100 zenon <> zenon_all thm
R7327:7334 num_capteur <> zenon_H8 var
R7228:7238 zenon <> zenon_imply thm
R7316:7323 num_capteur <> zenon_H7 var
R7296:7303 num_capteur <> zenon_H4 var
R7305:7312 num_capteur <> zenon_H3 var
R7260:7267 num_capteur <> zenon_H6 var
R7269:7276 num_capteur <> zenon_H5 var
R7201:7210 num_capteur <> zenon_Ty_j var
R7116:7121 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7125:7125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7160:7163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7197:7197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7164:7170 Coq.Bool.Bool <> Is_true def
R7173:7182 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7186:7195 num_capteur <> zenon_Tx_c var
R7184:7184 num_capteur <> y var
R7126:7132 Coq.Bool.Bool <> Is_true def
R7136:7145 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7158:7158 num_capteur <> y var
R7147:7156 num_capteur <> zenon_Tx_c var
R7102:7107 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7065:7074 num_capteur <> zenon_Tx_c var
R6980:6985 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R6999:7004 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7007:7007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7032:7035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7060:7060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7036:7042 Coq.Bool.Bool <> Is_true def
R7045:7054 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7058:7058 num_capteur <> x var
R7056:7056 num_capteur <> y var
R7008:7014 Coq.Bool.Bool <> Is_true def
R7017:7026 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7030:7030 num_capteur <> y var
R7028:7028 num_capteur <> x var
R6966:6971 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R6733:6738 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6742:6743 Coq.Init.Logic <> :type_scope:'~'_x not
R6817:6817 Coq.Init.Logic <> :type_scope:'~'_x not
R6744:6744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6778:6782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6816:6816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6783:6789 Coq.Bool.Bool <> Is_true def
R6792:6801 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6805:6814 num_capteur <> zenon_Tx_c var
R6803:6803 num_capteur <> y var
R6745:6751 Coq.Bool.Bool <> Is_true def
R6754:6763 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6776:6776 num_capteur <> y var
R6765:6774 num_capteur <> zenon_Tx_c var
R6719:6724 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6609:6614 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6618:6618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6652:6655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6689:6689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6656:6662 Coq.Bool.Bool <> Is_true def
R6665:6674 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6678:6687 num_capteur <> zenon_Tx_c var
R6676:6676 num_capteur <> y var
R6619:6625 Coq.Bool.Bool <> Is_true def
R6628:6637 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6650:6650 num_capteur <> y var
R6639:6648 num_capteur <> zenon_Tx_c var
R6463:6468 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6472:6473 Coq.Init.Logic <> :type_scope:'~'_x not
R6547:6547 Coq.Init.Logic <> :type_scope:'~'_x not
R6483:6488 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6491:6491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6517:6520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6545:6545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6521:6527 Coq.Bool.Bool <> Is_true def
R6530:6539 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6543:6543 num_capteur <> x var
R6541:6541 num_capteur <> y var
R6492:6498 Coq.Bool.Bool <> Is_true def
R6502:6511 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6515:6515 num_capteur <> y var
R6513:6513 num_capteur <> x var
R6449:6454 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6338:6343 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6356:6361 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6364:6365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6390:6393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6418:6418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6394:6400 Coq.Bool.Bool <> Is_true def
R6403:6412 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6416:6416 num_capteur <> x var
R6414:6414 num_capteur <> y var
R6366:6372 Coq.Bool.Bool <> Is_true def
R6375:6384 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6388:6388 num_capteur <> y var
R6386:6386 num_capteur <> x var
R6294:6297 Coq.Logic.Classical_Prop <> NNPP thm
R6316:6329 zenon <> zenon_notallex thm
R7407:7413 num_capteur <> zenon_G var
R6440:6447 zenon <> zenon_ex thm
R7396:7403 num_capteur <> zenon_Hf var
R6567:6572 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6587:6600 zenon <> zenon_notallex thm
R7385:7392 num_capteur <> zenon_He var
R6710:6717 zenon <> zenon_ex thm
R7374:7381 num_capteur <> zenon_Hd var
R6837:6842 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6857:6870 zenon <> zenon_notimply thm
R7363:7370 num_capteur <> zenon_Hc var
R6915:6922 num_capteur <> zenon_Hb var
R6943:6950 num_capteur <> zenon_Ha var
R6956:6964 zenon <> zenon_all thm
R7338:7357 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal_symmetric var
R7092:7100 zenon <> zenon_all thm
R7327:7334 num_capteur <> zenon_H8 var
R7228:7238 zenon <> zenon_imply thm
R7316:7323 num_capteur <> zenon_H7 var
R7296:7303 num_capteur <> zenon_H4 var
R7305:7312 num_capteur <> zenon_H3 var
R7260:7267 num_capteur <> zenon_H6 var
R7269:7276 num_capteur <> zenon_H5 var
R7201:7210 num_capteur <> zenon_Ty_j var
R7116:7121 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7125:7125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7160:7163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7197:7197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7164:7170 Coq.Bool.Bool <> Is_true def
R7173:7182 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7186:7195 num_capteur <> zenon_Tx_c var
R7184:7184 num_capteur <> y var
R7126:7132 Coq.Bool.Bool <> Is_true def
R7136:7145 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7158:7158 num_capteur <> y var
R7147:7156 num_capteur <> zenon_Tx_c var
R7102:7107 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7065:7074 num_capteur <> zenon_Tx_c var
R6980:6985 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R6999:7004 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7007:7007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7032:7035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7060:7060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7036:7042 Coq.Bool.Bool <> Is_true def
R7045:7054 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7058:7058 num_capteur <> x var
R7056:7056 num_capteur <> y var
R7008:7014 Coq.Bool.Bool <> Is_true def
R7017:7026 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7030:7030 num_capteur <> y var
R7028:7028 num_capteur <> x var
R6966:6971 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R6733:6738 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6742:6743 Coq.Init.Logic <> :type_scope:'~'_x not
R6817:6817 Coq.Init.Logic <> :type_scope:'~'_x not
R6744:6744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6778:6782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6816:6816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6783:6789 Coq.Bool.Bool <> Is_true def
R6792:6801 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6805:6814 num_capteur <> zenon_Tx_c var
R6803:6803 num_capteur <> y var
R6745:6751 Coq.Bool.Bool <> Is_true def
R6754:6763 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6776:6776 num_capteur <> y var
R6765:6774 num_capteur <> zenon_Tx_c var
R6719:6724 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6609:6614 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6618:6618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6652:6655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6689:6689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6656:6662 Coq.Bool.Bool <> Is_true def
R6665:6674 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6678:6687 num_capteur <> zenon_Tx_c var
R6676:6676 num_capteur <> y var
R6619:6625 Coq.Bool.Bool <> Is_true def
R6628:6637 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6650:6650 num_capteur <> y var
R6639:6648 num_capteur <> zenon_Tx_c var
R6463:6468 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6472:6473 Coq.Init.Logic <> :type_scope:'~'_x not
R6547:6547 Coq.Init.Logic <> :type_scope:'~'_x not
R6483:6488 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6491:6491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6517:6520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6545:6545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6521:6527 Coq.Bool.Bool <> Is_true def
R6530:6539 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6543:6543 num_capteur <> x var
R6541:6541 num_capteur <> y var
R6492:6498 Coq.Bool.Bool <> Is_true def
R6502:6511 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6515:6515 num_capteur <> y var
R6513:6513 num_capteur <> x var
R6449:6454 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6338:6343 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6356:6361 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R6364:6365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6390:6393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6418:6418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6394:6400 Coq.Bool.Bool <> Is_true def
R6403:6412 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6416:6416 num_capteur <> x var
R6414:6414 num_capteur <> y var
R6366:6372 Coq.Bool.Bool <> Is_true def
R6375:6384 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R6388:6388 num_capteur <> y var
R6386:6386 num_capteur <> x var
prf 7491:7526 Imp_capteur for_zenon_abstracted_equal_symmetric
R7550:7555 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R7592:7595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7596:7602 Coq.Bool.Bool <> Is_true def
R7606:7615 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R7619:7619 num_capteur <> x var
R7617:7617 num_capteur <> y var
R7566:7572 Coq.Bool.Bool <> Is_true def
R7576:7585 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R7589:7589 num_capteur <> y var
R7587:7587 num_capteur <> x var
R7657:7662 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7657:7662 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_T var
R7704:7713 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7704:7713 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal var
R7765:7784 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal_symmetric var
R7765:7784 num_capteur <> Imp_capteur.Proof_of_equal_symmetric._p_P_equal_symmetric var
R7822:7827 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R7822:7827 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_T var
R7869:7878 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R7869:7878 num_capteur <> Imp_capteur.Proof_of_equal_symmetric.abst_equal var
R7892:7916 num_capteur Imp_capteur for_zenon_equal_symmetric thm
R7892:7916 num_capteur Imp_capteur for_zenon_equal_symmetric thm
R7946:7969 num_capteur Imp_capteur.Proof_of_equal_symmetric <> sec
prf 7985:7999 Imp_capteur equal_symmetric
R8041:8044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8051:8054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8055:8068 basics <> bool__t def
R8045:8050 num_capteur <> _p_P_T var
R8035:8040 num_capteur <> _p_P_T var
R8113:8118 num_capteur <> _p_P_T var
R8153:8156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8157:8163 Coq.Bool.Bool <> Is_true def
R8167:8176 num_capteur <> _p_P_equal var
R8180:8180 num_capteur <> x var
R8178:8178 num_capteur <> y var
R8127:8133 Coq.Bool.Bool <> Is_true def
R8137:8146 num_capteur <> _p_P_equal var
R8150:8150 num_capteur <> y var
R8148:8148 num_capteur <> x var
R8200:8205 num_capteur <> _p_P_T var
R8223:8227 num_capteur Imp_capteur equal def
R8236:8245 num_capteur <> _p_P_equal var
R8229:8234 num_capteur <> _p_P_T var
R8267:8272 num_capteur <> abst_T var
R8307:8310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8311:8317 Coq.Bool.Bool <> Is_true def
R8321:8330 num_capteur <> abst_equal var
R8334:8334 num_capteur <> x var
R8332:8332 num_capteur <> y var
R8281:8287 Coq.Bool.Bool <> Is_true def
R8291:8300 num_capteur <> abst_equal var
R8304:8304 num_capteur <> y var
R8302:8302 num_capteur <> x var
R8347:8382 num_capteur Imp_capteur for_zenon_abstracted_equal_symmetric thm
R8347:8382 num_capteur Imp_capteur for_zenon_abstracted_equal_symmetric thm
sec 8516:8540 Imp_capteur Proof_of_equal_transitive
var 8556:8561 Imp_capteur.Proof_of_equal_transitive _p_P_T
var 8583:8592 Imp_capteur.Proof_of_equal_transitive _p_P_equal
R8602:8605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8612:8615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8616:8629 basics <> bool__t def
R8606:8611 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R8596:8601 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
var 8645:8665 Imp_capteur.Proof_of_equal_transitive _p_P_equal_transitive
R8692:8697 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R8708:8708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8765:8779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8780:8786 Coq.Bool.Bool <> Is_true def
R8790:8799 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R8803:8803 num_capteur <> z var
R8801:8801 num_capteur <> x var
R8735:8738 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8709:8715 Coq.Bool.Bool <> Is_true def
R8719:8728 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R8732:8732 num_capteur <> y var
R8730:8730 num_capteur <> x var
R8739:8745 Coq.Bool.Bool <> Is_true def
R8749:8758 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R8762:8762 num_capteur <> z var
R8760:8760 num_capteur <> y var
var 8816:8821 Imp_capteur.Proof_of_equal_transitive abst_T
R8826:8831 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
var 8842:8851 Imp_capteur.Proof_of_equal_transitive abst_equal
R8856:8860 num_capteur Imp_capteur equal def
R8873:8882 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R8862:8867 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
prf 8948:8973 Imp_capteur for_zenon_equal_transitive
R8985:8990 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9002:9007 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9020:9025 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9028:9028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9053:9056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9112:9112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9057:9057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9082:9086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9111:9111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9087:9093 Coq.Bool.Bool <> Is_true def
R9096:9105 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9109:9109 num_capteur <> z var
R9107:9107 num_capteur <> x var
R9058:9064 Coq.Bool.Bool <> Is_true def
R9067:9076 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9080:9080 num_capteur <> z var
R9078:9078 num_capteur <> y var
R9029:9035 Coq.Bool.Bool <> Is_true def
R9038:9047 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9051:9051 num_capteur <> y var
R9049:9049 num_capteur <> x var
R9134:9137 Coq.Logic.Classical_Prop <> NNPP thm
R9188:9201 zenon <> zenon_notallex thm
R12248:12254 num_capteur <> zenon_G var
R9360:9367 zenon <> zenon_ex thm
R12236:12244 num_capteur <> zenon_H37 var
R9536:9541 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9557:9570 zenon <> zenon_notallex thm
R12224:12232 num_capteur <> zenon_H36 var
R9728:9735 zenon <> zenon_ex thm
R12212:12220 num_capteur <> zenon_H35 var
R9905:9910 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9925:9938 zenon <> zenon_notallex thm
R12200:12208 num_capteur <> zenon_H34 var
R10098:10105 zenon <> zenon_ex thm
R12188:12196 num_capteur <> zenon_H33 var
R10274:10279 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R10294:10307 zenon <> zenon_notimply thm
R12176:12184 num_capteur <> zenon_H32 var
R10340:10353 zenon <> zenon_notimply thm
R12164:12172 num_capteur <> zenon_H31 var
R10401:10409 num_capteur <> zenon_H30 var
R10430:10438 num_capteur <> zenon_H2f var
R10460:10468 num_capteur <> zenon_H2e var
R10506:10514 zenon <> zenon_and thm
R10569:10577 num_capteur <> zenon_H2d var
R10547:10555 num_capteur <> zenon_H1f var
R10557:10565 num_capteur <> zenon_H1e var
R10617:10627 zenon <> zenon_subst thm
R12105:12113 num_capteur <> zenon_H19 var
R12095:12103 num_capteur <> zenon_H18 var
R10753:10763 zenon <> zenon_subst thm
R12083:12091 num_capteur <> zenon_H1a var
R12019:12030 zenon <> zenon_notnot thm
R12035:12044 Coq.Init.Logic <> refl_equal syndef
R12047:12056 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12069:12078 num_capteur <> zenon_Tz_x var
R12058:12067 num_capteur <> zenon_Tx_u var
R10898:10909 zenon <> zenon_notand thm
R12006:12014 num_capteur <> zenon_H2b var
R11190:11198 num_capteur <> zenon_H24 var
R11218:11226 zenon <> zenon_all thm
R11992:12000 num_capteur <> zenon_H23 var
R11404:11412 zenon <> zenon_all thm
R11980:11988 num_capteur <> zenon_H22 var
R11589:11597 zenon <> zenon_all thm
R11968:11976 num_capteur <> zenon_H21 var
R11776:11786 zenon <> zenon_imply thm
R11956:11964 num_capteur <> zenon_H20 var
R11849:11859 zenon <> zenon_imply thm
R11944:11952 num_capteur <> zenon_H1d var
R11922:11930 num_capteur <> zenon_H18 var
R11932:11940 num_capteur <> zenon_H1b var
R11882:11890 num_capteur <> zenon_H1c var
R11892:11900 num_capteur <> zenon_H19 var
R11809:11817 num_capteur <> zenon_H1f var
R11819:11827 num_capteur <> zenon_H1e var
R11747:11756 num_capteur <> zenon_Tz_x var
R11613:11618 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11622:11622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11666:11669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11743:11743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11670:11670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11704:11708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11742:11742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11709:11715 Coq.Bool.Bool <> Is_true def
R11718:11727 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11740:11740 num_capteur <> z var
R11729:11738 num_capteur <> zenon_Tx_u var
R11671:11677 Coq.Bool.Bool <> Is_true def
R11680:11689 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11702:11702 num_capteur <> z var
R11691:11700 num_capteur <> zenon_Ty_v var
R11623:11629 Coq.Bool.Bool <> Is_true def
R11633:11642 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11655:11664 num_capteur <> zenon_Ty_v var
R11644:11653 num_capteur <> zenon_Tx_u var
R11599:11604 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11561:11570 num_capteur <> zenon_Ty_v var
R11428:11433 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11446:11451 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11454:11454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11488:11491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11556:11556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11492:11493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11518:11521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11555:11555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11522:11528 Coq.Bool.Bool <> Is_true def
R11531:11540 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11553:11553 num_capteur <> z var
R11542:11551 num_capteur <> zenon_Tx_u var
R11494:11500 Coq.Bool.Bool <> Is_true def
R11503:11512 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11516:11516 num_capteur <> z var
R11514:11514 num_capteur <> y var
R11455:11461 Coq.Bool.Bool <> Is_true def
R11464:11473 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11486:11486 num_capteur <> y var
R11475:11484 num_capteur <> zenon_Tx_u var
R11414:11419 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11376:11385 num_capteur <> zenon_Tx_u var
R11242:11247 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11260:11265 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11277:11282 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11285:11286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11311:11314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11370:11370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11315:11315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11340:11343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11369:11369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11344:11350 Coq.Bool.Bool <> Is_true def
R11354:11363 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11367:11367 num_capteur <> z var
R11365:11365 num_capteur <> x var
R11316:11322 Coq.Bool.Bool <> Is_true def
R11325:11334 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11338:11338 num_capteur <> z var
R11336:11336 num_capteur <> y var
R11287:11293 Coq.Bool.Bool <> Is_true def
R11296:11305 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11309:11309 num_capteur <> y var
R11307:11307 num_capteur <> x var
R11228:11233 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R10933:10941 num_capteur <> zenon_H2a var
R10992:11002 zenon <> zenon_subst thm
R11117:11125 num_capteur <> zenon_H27 var
R11107:11115 num_capteur <> zenon_H26 var
R11085:11093 num_capteur <> zenon_H29 var
R11095:11103 num_capteur <> zenon_H28 var
R11057:11066 num_capteur <> zenon_Ty_v var
R11046:11055 num_capteur <> zenon_Tx_u var
R11030:11032 Coq.Init.Logic <> :type_scope:x_'='_x not
R11022:11029 num_capteur <> zenon_Vh var
R11033:11042 num_capteur <> zenon_Tx_u var
R11133:11143 zenon <> zenon_noteq thm
R11158:11166 num_capteur <> zenon_H25 var
R11147:11156 num_capteur <> zenon_Tx_u var
R10870:10879 num_capteur <> zenon_Tx_u var
R10859:10868 num_capteur <> zenon_Ty_v var
R10783:10784 Coq.Init.Logic <> :type_scope:'~'_x not
R10855:10855 Coq.Init.Logic <> :type_scope:'~'_x not
R10785:10786 Coq.Init.Logic <> :type_scope:x_'='_x not
R10817:10821 Coq.Init.Logic <> :type_scope:x_'='_x not
R10854:10854 Coq.Init.Logic <> :type_scope:x_'='_x not
R10787:10796 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10807:10816 num_capteur <> zenon_Tz_x var
R10798:10805 num_capteur <> zenon_Vg var
R10822:10831 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10844:10853 num_capteur <> zenon_Tz_x var
R10833:10842 num_capteur <> zenon_Tx_u var
R10702:10711 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10724:10733 num_capteur <> zenon_Tz_x var
R10713:10722 num_capteur <> zenon_Tx_u var
R10667:10676 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10689:10698 num_capteur <> zenon_Tz_x var
R10678:10687 num_capteur <> zenon_Ty_v var
R10647:10653 Coq.Bool.Bool <> Is_true def
R10655:10662 num_capteur <> zenon_Vf var
R12122:12132 zenon <> zenon_noteq thm
R12147:12155 num_capteur <> zenon_H16 var
R12136:12145 num_capteur <> zenon_Tz_x var
R10121:10126 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R10130:10131 Coq.Init.Logic <> :type_scope:'~'_x not
R10254:10254 Coq.Init.Logic <> :type_scope:'~'_x not
R10132:10132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10175:10179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10252:10253 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10180:10180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10214:10217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10251:10251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10218:10224 Coq.Bool.Bool <> Is_true def
R10227:10236 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10249:10249 num_capteur <> z var
R10238:10247 num_capteur <> zenon_Tx_u var
R10181:10187 Coq.Bool.Bool <> Is_true def
R10190:10199 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10212:10212 num_capteur <> z var
R10201:10210 num_capteur <> zenon_Ty_v var
R10133:10139 Coq.Bool.Bool <> Is_true def
R10142:10151 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10164:10173 num_capteur <> zenon_Ty_v var
R10153:10162 num_capteur <> zenon_Tx_u var
R10107:10112 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9947:9952 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9956:9956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10000:10003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10077:10077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10004:10004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10038:10042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10076:10076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10043:10049 Coq.Bool.Bool <> Is_true def
R10052:10061 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10074:10074 num_capteur <> z var
R10063:10072 num_capteur <> zenon_Tx_u var
R10005:10011 Coq.Bool.Bool <> Is_true def
R10014:10023 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10036:10036 num_capteur <> z var
R10025:10034 num_capteur <> zenon_Ty_v var
R9957:9963 Coq.Bool.Bool <> Is_true def
R9967:9976 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9989:9998 num_capteur <> zenon_Ty_v var
R9978:9987 num_capteur <> zenon_Tx_u var
R9751:9756 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9760:9762 Coq.Init.Logic <> :type_scope:'~'_x not
R9884:9884 Coq.Init.Logic <> :type_scope:'~'_x not
R9772:9777 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9780:9780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9814:9817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9882:9882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9818:9818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9844:9847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9881:9881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9848:9854 Coq.Bool.Bool <> Is_true def
R9857:9866 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9879:9879 num_capteur <> z var
R9868:9877 num_capteur <> zenon_Tx_u var
R9819:9825 Coq.Bool.Bool <> Is_true def
R9829:9838 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9842:9842 num_capteur <> z var
R9840:9840 num_capteur <> y var
R9781:9787 Coq.Bool.Bool <> Is_true def
R9790:9799 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9812:9812 num_capteur <> y var
R9801:9810 num_capteur <> zenon_Tx_u var
R9737:9742 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9579:9584 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9597:9602 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9605:9605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9639:9642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9706:9706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9643:9643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9668:9671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9705:9705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9672:9678 Coq.Bool.Bool <> Is_true def
R9681:9690 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9703:9703 num_capteur <> z var
R9692:9701 num_capteur <> zenon_Tx_u var
R9644:9650 Coq.Bool.Bool <> Is_true def
R9653:9662 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9666:9666 num_capteur <> z var
R9664:9664 num_capteur <> y var
R9606:9612 Coq.Bool.Bool <> Is_true def
R9615:9624 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9637:9637 num_capteur <> y var
R9626:9635 num_capteur <> zenon_Tx_u var
R9383:9388 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9392:9393 Coq.Init.Logic <> :type_scope:'~'_x not
R9516:9516 Coq.Init.Logic <> :type_scope:'~'_x not
R9403:9408 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9421:9426 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9429:9429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9454:9457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9513:9513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9458:9458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9483:9487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9512:9512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9488:9494 Coq.Bool.Bool <> Is_true def
R9497:9506 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9510:9510 num_capteur <> z var
R9508:9508 num_capteur <> x var
R9459:9465 Coq.Bool.Bool <> Is_true def
R9468:9477 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9481:9481 num_capteur <> z var
R9479:9479 num_capteur <> y var
R9430:9436 Coq.Bool.Bool <> Is_true def
R9439:9448 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9452:9452 num_capteur <> y var
R9450:9450 num_capteur <> x var
R9369:9374 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9211:9216 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9229:9234 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9246:9251 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9254:9254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9279:9282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9337:9337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9283:9283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9308:9311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9336:9336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9312:9318 Coq.Bool.Bool <> Is_true def
R9321:9330 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9334:9334 num_capteur <> z var
R9332:9332 num_capteur <> x var
R9284:9290 Coq.Bool.Bool <> Is_true def
R9293:9302 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9306:9306 num_capteur <> z var
R9304:9304 num_capteur <> y var
R9255:9261 Coq.Bool.Bool <> Is_true def
R9264:9273 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9277:9277 num_capteur <> y var
R9275:9275 num_capteur <> x var
R12262:12273 zenon <> zenon_notall thm
R13768:13776 num_capteur <> zenon_H13 var
R12439:12444 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12460:12471 zenon <> zenon_notall thm
R13756:13764 num_capteur <> zenon_H12 var
R12637:12642 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12658:12669 zenon <> zenon_notall thm
R13744:13752 num_capteur <> zenon_H11 var
R12834:12839 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12855:12868 zenon <> zenon_notimply thm
R13732:13740 num_capteur <> zenon_H10 var
R12899:12912 zenon <> zenon_notimply thm
R13721:13728 num_capteur <> zenon_Hf var
R12943:12951 zenon <> zenon_all thm
R13697:13717 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal_transitive var
R13128:13136 zenon <> zenon_all thm
R13686:13693 num_capteur <> zenon_He var
R13311:13319 zenon <> zenon_all thm
R13675:13682 num_capteur <> zenon_Hc var
R13496:13506 zenon <> zenon_imply thm
R13664:13671 num_capteur <> zenon_H9 var
R13644:13651 num_capteur <> zenon_H3 var
R13653:13660 num_capteur <> zenon_H2 var
R13528:13539 zenon <> zenon_notand thm
R13617:13624 num_capteur <> zenon_H8 var
R13597:13604 num_capteur <> zenon_H5 var
R13606:13613 num_capteur <> zenon_H4 var
R13561:13568 num_capteur <> zenon_H7 var
R13570:13577 num_capteur <> zenon_H6 var
R13469:13478 num_capteur <> zenon_Tz_n var
R13336:13341 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13345:13345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13428:13431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13465:13465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13432:13438 Coq.Bool.Bool <> Is_true def
R13441:13450 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13463:13463 num_capteur <> z var
R13452:13461 num_capteur <> zenon_Tx_k var
R13346:13346 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13389:13392 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13427:13427 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13347:13353 Coq.Bool.Bool <> Is_true def
R13356:13365 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13378:13387 num_capteur <> zenon_Ty_l var
R13367:13376 num_capteur <> zenon_Tx_k var
R13393:13399 Coq.Bool.Bool <> Is_true def
R13403:13412 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13425:13425 num_capteur <> z var
R13414:13423 num_capteur <> zenon_Ty_l var
R13321:13326 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13284:13293 num_capteur <> zenon_Ty_l var
R13152:13157 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13170:13175 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13178:13178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13242:13245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13279:13279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13246:13252 Coq.Bool.Bool <> Is_true def
R13255:13264 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13277:13277 num_capteur <> z var
R13266:13275 num_capteur <> zenon_Tx_k var
R13179:13179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13213:13216 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13241:13241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13180:13186 Coq.Bool.Bool <> Is_true def
R13189:13198 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13211:13211 num_capteur <> y var
R13200:13209 num_capteur <> zenon_Tx_k var
R13217:13223 Coq.Bool.Bool <> Is_true def
R13226:13235 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13239:13239 num_capteur <> z var
R13237:13237 num_capteur <> y var
R13138:13143 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13101:13110 num_capteur <> zenon_Tx_k var
R12967:12972 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12985:12990 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13003:13008 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13011:13011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13066:13070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13095:13095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13071:13077 Coq.Bool.Bool <> Is_true def
R13080:13089 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13093:13093 num_capteur <> z var
R13091:13091 num_capteur <> x var
R13012:13012 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13037:13040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13065:13065 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13013:13019 Coq.Bool.Bool <> Is_true def
R13022:13031 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13035:13035 num_capteur <> y var
R13033:13033 num_capteur <> x var
R13041:13047 Coq.Bool.Bool <> Is_true def
R13050:13059 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13063:13063 num_capteur <> z var
R13061:13061 num_capteur <> y var
R12953:12958 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12685:12690 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12694:12694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12737:12740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12814:12814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12741:12741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12775:12778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12813:12813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12779:12785 Coq.Bool.Bool <> Is_true def
R12789:12798 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12811:12811 num_capteur <> z var
R12800:12809 num_capteur <> zenon_Tx_k var
R12742:12748 Coq.Bool.Bool <> Is_true def
R12751:12760 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12773:12773 num_capteur <> z var
R12762:12771 num_capteur <> zenon_Ty_l var
R12695:12701 Coq.Bool.Bool <> Is_true def
R12704:12713 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12726:12735 num_capteur <> zenon_Ty_l var
R12715:12724 num_capteur <> zenon_Tx_k var
R12671:12676 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12487:12492 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12505:12510 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12513:12513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12548:12551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12616:12616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12552:12552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12577:12580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12615:12615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12581:12587 Coq.Bool.Bool <> Is_true def
R12591:12600 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12613:12613 num_capteur <> z var
R12602:12611 num_capteur <> zenon_Tx_k var
R12553:12559 Coq.Bool.Bool <> Is_true def
R12562:12571 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12575:12575 num_capteur <> z var
R12573:12573 num_capteur <> y var
R12514:12520 Coq.Bool.Bool <> Is_true def
R12524:12533 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12546:12546 num_capteur <> y var
R12535:12544 num_capteur <> zenon_Tx_k var
R12473:12478 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12289:12294 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12307:12312 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12325:12330 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12333:12333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12358:12361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12417:12417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12362:12362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12387:12391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12416:12416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12392:12398 Coq.Bool.Bool <> Is_true def
R12401:12410 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12414:12414 num_capteur <> z var
R12412:12412 num_capteur <> x var
R12363:12369 Coq.Bool.Bool <> Is_true def
R12372:12381 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12385:12385 num_capteur <> z var
R12383:12383 num_capteur <> y var
R12334:12340 Coq.Bool.Bool <> Is_true def
R12343:12352 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12356:12356 num_capteur <> y var
R12354:12354 num_capteur <> x var
R12275:12280 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R9134:9137 Coq.Logic.Classical_Prop <> NNPP thm
R9188:9201 zenon <> zenon_notallex thm
R12248:12254 num_capteur <> zenon_G var
R9360:9367 zenon <> zenon_ex thm
R12236:12244 num_capteur <> zenon_H37 var
R9536:9541 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9557:9570 zenon <> zenon_notallex thm
R12224:12232 num_capteur <> zenon_H36 var
R9728:9735 zenon <> zenon_ex thm
R12212:12220 num_capteur <> zenon_H35 var
R9905:9910 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9925:9938 zenon <> zenon_notallex thm
R12200:12208 num_capteur <> zenon_H34 var
R10098:10105 zenon <> zenon_ex thm
R12188:12196 num_capteur <> zenon_H33 var
R10274:10279 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R10294:10307 zenon <> zenon_notimply thm
R12176:12184 num_capteur <> zenon_H32 var
R10340:10353 zenon <> zenon_notimply thm
R12164:12172 num_capteur <> zenon_H31 var
R10401:10409 num_capteur <> zenon_H30 var
R10430:10438 num_capteur <> zenon_H2f var
R10460:10468 num_capteur <> zenon_H2e var
R10506:10514 zenon <> zenon_and thm
R10569:10577 num_capteur <> zenon_H2d var
R10547:10555 num_capteur <> zenon_H1f var
R10557:10565 num_capteur <> zenon_H1e var
R10617:10627 zenon <> zenon_subst thm
R12105:12113 num_capteur <> zenon_H19 var
R12095:12103 num_capteur <> zenon_H18 var
R10753:10763 zenon <> zenon_subst thm
R12083:12091 num_capteur <> zenon_H1a var
R12019:12030 zenon <> zenon_notnot thm
R12035:12044 Coq.Init.Logic <> refl_equal syndef
R12047:12056 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12069:12078 num_capteur <> zenon_Tz_x var
R12058:12067 num_capteur <> zenon_Tx_u var
R10898:10909 zenon <> zenon_notand thm
R12006:12014 num_capteur <> zenon_H2b var
R11190:11198 num_capteur <> zenon_H24 var
R11218:11226 zenon <> zenon_all thm
R11992:12000 num_capteur <> zenon_H23 var
R11404:11412 zenon <> zenon_all thm
R11980:11988 num_capteur <> zenon_H22 var
R11589:11597 zenon <> zenon_all thm
R11968:11976 num_capteur <> zenon_H21 var
R11776:11786 zenon <> zenon_imply thm
R11956:11964 num_capteur <> zenon_H20 var
R11849:11859 zenon <> zenon_imply thm
R11944:11952 num_capteur <> zenon_H1d var
R11922:11930 num_capteur <> zenon_H18 var
R11932:11940 num_capteur <> zenon_H1b var
R11882:11890 num_capteur <> zenon_H1c var
R11892:11900 num_capteur <> zenon_H19 var
R11809:11817 num_capteur <> zenon_H1f var
R11819:11827 num_capteur <> zenon_H1e var
R11747:11756 num_capteur <> zenon_Tz_x var
R11613:11618 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11622:11622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11666:11669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11743:11743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11670:11670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11704:11708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11742:11742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11709:11715 Coq.Bool.Bool <> Is_true def
R11718:11727 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11740:11740 num_capteur <> z var
R11729:11738 num_capteur <> zenon_Tx_u var
R11671:11677 Coq.Bool.Bool <> Is_true def
R11680:11689 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11702:11702 num_capteur <> z var
R11691:11700 num_capteur <> zenon_Ty_v var
R11623:11629 Coq.Bool.Bool <> Is_true def
R11633:11642 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11655:11664 num_capteur <> zenon_Ty_v var
R11644:11653 num_capteur <> zenon_Tx_u var
R11599:11604 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11561:11570 num_capteur <> zenon_Ty_v var
R11428:11433 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11446:11451 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11454:11454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11488:11491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11556:11556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11492:11493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11518:11521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11555:11555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11522:11528 Coq.Bool.Bool <> Is_true def
R11531:11540 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11553:11553 num_capteur <> z var
R11542:11551 num_capteur <> zenon_Tx_u var
R11494:11500 Coq.Bool.Bool <> Is_true def
R11503:11512 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11516:11516 num_capteur <> z var
R11514:11514 num_capteur <> y var
R11455:11461 Coq.Bool.Bool <> Is_true def
R11464:11473 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11486:11486 num_capteur <> y var
R11475:11484 num_capteur <> zenon_Tx_u var
R11414:11419 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11376:11385 num_capteur <> zenon_Tx_u var
R11242:11247 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11260:11265 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11277:11282 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R11285:11286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11311:11314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11370:11370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11315:11315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11340:11343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11369:11369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11344:11350 Coq.Bool.Bool <> Is_true def
R11354:11363 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11367:11367 num_capteur <> z var
R11365:11365 num_capteur <> x var
R11316:11322 Coq.Bool.Bool <> Is_true def
R11325:11334 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11338:11338 num_capteur <> z var
R11336:11336 num_capteur <> y var
R11287:11293 Coq.Bool.Bool <> Is_true def
R11296:11305 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R11309:11309 num_capteur <> y var
R11307:11307 num_capteur <> x var
R11228:11233 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R10933:10941 num_capteur <> zenon_H2a var
R10992:11002 zenon <> zenon_subst thm
R11117:11125 num_capteur <> zenon_H27 var
R11107:11115 num_capteur <> zenon_H26 var
R11085:11093 num_capteur <> zenon_H29 var
R11095:11103 num_capteur <> zenon_H28 var
R11057:11066 num_capteur <> zenon_Ty_v var
R11046:11055 num_capteur <> zenon_Tx_u var
R11030:11032 Coq.Init.Logic <> :type_scope:x_'='_x not
R11022:11029 num_capteur <> zenon_Vh var
R11033:11042 num_capteur <> zenon_Tx_u var
R11133:11143 zenon <> zenon_noteq thm
R11158:11166 num_capteur <> zenon_H25 var
R11147:11156 num_capteur <> zenon_Tx_u var
R10870:10879 num_capteur <> zenon_Tx_u var
R10859:10868 num_capteur <> zenon_Ty_v var
R10783:10784 Coq.Init.Logic <> :type_scope:'~'_x not
R10855:10855 Coq.Init.Logic <> :type_scope:'~'_x not
R10785:10786 Coq.Init.Logic <> :type_scope:x_'='_x not
R10817:10821 Coq.Init.Logic <> :type_scope:x_'='_x not
R10854:10854 Coq.Init.Logic <> :type_scope:x_'='_x not
R10787:10796 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10807:10816 num_capteur <> zenon_Tz_x var
R10798:10805 num_capteur <> zenon_Vg var
R10822:10831 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10844:10853 num_capteur <> zenon_Tz_x var
R10833:10842 num_capteur <> zenon_Tx_u var
R10702:10711 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10724:10733 num_capteur <> zenon_Tz_x var
R10713:10722 num_capteur <> zenon_Tx_u var
R10667:10676 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R10689:10698 num_capteur <> zenon_Tz_x var
R10678:10687 num_capteur <> zenon_Ty_v var
R10647:10653 Coq.Bool.Bool <> Is_true def
R10655:10662 num_capteur <> zenon_Vf var
R12122:12132 zenon <> zenon_noteq thm
R12147:12155 num_capteur <> zenon_H16 var
R12136:12145 num_capteur <> zenon_Tz_x var
R10121:10126 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R10130:10131 Coq.Init.Logic <> :type_scope:'~'_x not
R10254:10254 Coq.Init.Logic <> :type_scope:'~'_x not
R10132:10132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10175:10179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10252:10253 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10180:10180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10214:10217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10251:10251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10218:10224 Coq.Bool.Bool <> Is_true def
R10227:10236 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10249:10249 num_capteur <> z var
R10238:10247 num_capteur <> zenon_Tx_u var
R10181:10187 Coq.Bool.Bool <> Is_true def
R10190:10199 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10212:10212 num_capteur <> z var
R10201:10210 num_capteur <> zenon_Ty_v var
R10133:10139 Coq.Bool.Bool <> Is_true def
R10142:10151 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10164:10173 num_capteur <> zenon_Ty_v var
R10153:10162 num_capteur <> zenon_Tx_u var
R10107:10112 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9947:9952 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9956:9956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10000:10003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10077:10077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10004:10004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10038:10042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10076:10076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10043:10049 Coq.Bool.Bool <> Is_true def
R10052:10061 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10074:10074 num_capteur <> z var
R10063:10072 num_capteur <> zenon_Tx_u var
R10005:10011 Coq.Bool.Bool <> Is_true def
R10014:10023 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R10036:10036 num_capteur <> z var
R10025:10034 num_capteur <> zenon_Ty_v var
R9957:9963 Coq.Bool.Bool <> Is_true def
R9967:9976 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9989:9998 num_capteur <> zenon_Ty_v var
R9978:9987 num_capteur <> zenon_Tx_u var
R9751:9756 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9760:9762 Coq.Init.Logic <> :type_scope:'~'_x not
R9884:9884 Coq.Init.Logic <> :type_scope:'~'_x not
R9772:9777 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9780:9780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9814:9817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9882:9882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9818:9818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9844:9847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9881:9881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9848:9854 Coq.Bool.Bool <> Is_true def
R9857:9866 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9879:9879 num_capteur <> z var
R9868:9877 num_capteur <> zenon_Tx_u var
R9819:9825 Coq.Bool.Bool <> Is_true def
R9829:9838 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9842:9842 num_capteur <> z var
R9840:9840 num_capteur <> y var
R9781:9787 Coq.Bool.Bool <> Is_true def
R9790:9799 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9812:9812 num_capteur <> y var
R9801:9810 num_capteur <> zenon_Tx_u var
R9737:9742 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9579:9584 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9597:9602 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9605:9605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9639:9642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9706:9706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9643:9643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9668:9671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9705:9705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9672:9678 Coq.Bool.Bool <> Is_true def
R9681:9690 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9703:9703 num_capteur <> z var
R9692:9701 num_capteur <> zenon_Tx_u var
R9644:9650 Coq.Bool.Bool <> Is_true def
R9653:9662 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9666:9666 num_capteur <> z var
R9664:9664 num_capteur <> y var
R9606:9612 Coq.Bool.Bool <> Is_true def
R9615:9624 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9637:9637 num_capteur <> y var
R9626:9635 num_capteur <> zenon_Tx_u var
R9383:9388 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9392:9393 Coq.Init.Logic <> :type_scope:'~'_x not
R9516:9516 Coq.Init.Logic <> :type_scope:'~'_x not
R9403:9408 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9421:9426 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9429:9429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9454:9457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9513:9513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9458:9458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9483:9487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9512:9512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9488:9494 Coq.Bool.Bool <> Is_true def
R9497:9506 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9510:9510 num_capteur <> z var
R9508:9508 num_capteur <> x var
R9459:9465 Coq.Bool.Bool <> Is_true def
R9468:9477 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9481:9481 num_capteur <> z var
R9479:9479 num_capteur <> y var
R9430:9436 Coq.Bool.Bool <> Is_true def
R9439:9448 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9452:9452 num_capteur <> y var
R9450:9450 num_capteur <> x var
R9369:9374 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9211:9216 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9229:9234 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9246:9251 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R9254:9254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9279:9282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9337:9337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9283:9283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9308:9311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9336:9336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9312:9318 Coq.Bool.Bool <> Is_true def
R9321:9330 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9334:9334 num_capteur <> z var
R9332:9332 num_capteur <> x var
R9284:9290 Coq.Bool.Bool <> Is_true def
R9293:9302 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9306:9306 num_capteur <> z var
R9304:9304 num_capteur <> y var
R9255:9261 Coq.Bool.Bool <> Is_true def
R9264:9273 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R9277:9277 num_capteur <> y var
R9275:9275 num_capteur <> x var
R12262:12273 zenon <> zenon_notall thm
R13768:13776 num_capteur <> zenon_H13 var
R12439:12444 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12460:12471 zenon <> zenon_notall thm
R13756:13764 num_capteur <> zenon_H12 var
R12637:12642 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12658:12669 zenon <> zenon_notall thm
R13744:13752 num_capteur <> zenon_H11 var
R12834:12839 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12855:12868 zenon <> zenon_notimply thm
R13732:13740 num_capteur <> zenon_H10 var
R12899:12912 zenon <> zenon_notimply thm
R13721:13728 num_capteur <> zenon_Hf var
R12943:12951 zenon <> zenon_all thm
R13697:13717 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal_transitive var
R13128:13136 zenon <> zenon_all thm
R13686:13693 num_capteur <> zenon_He var
R13311:13319 zenon <> zenon_all thm
R13675:13682 num_capteur <> zenon_Hc var
R13496:13506 zenon <> zenon_imply thm
R13664:13671 num_capteur <> zenon_H9 var
R13644:13651 num_capteur <> zenon_H3 var
R13653:13660 num_capteur <> zenon_H2 var
R13528:13539 zenon <> zenon_notand thm
R13617:13624 num_capteur <> zenon_H8 var
R13597:13604 num_capteur <> zenon_H5 var
R13606:13613 num_capteur <> zenon_H4 var
R13561:13568 num_capteur <> zenon_H7 var
R13570:13577 num_capteur <> zenon_H6 var
R13469:13478 num_capteur <> zenon_Tz_n var
R13336:13341 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13345:13345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13428:13431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13465:13465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13432:13438 Coq.Bool.Bool <> Is_true def
R13441:13450 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13463:13463 num_capteur <> z var
R13452:13461 num_capteur <> zenon_Tx_k var
R13346:13346 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13389:13392 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13427:13427 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13347:13353 Coq.Bool.Bool <> Is_true def
R13356:13365 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13378:13387 num_capteur <> zenon_Ty_l var
R13367:13376 num_capteur <> zenon_Tx_k var
R13393:13399 Coq.Bool.Bool <> Is_true def
R13403:13412 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13425:13425 num_capteur <> z var
R13414:13423 num_capteur <> zenon_Ty_l var
R13321:13326 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13284:13293 num_capteur <> zenon_Ty_l var
R13152:13157 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13170:13175 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13178:13178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13242:13245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13279:13279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13246:13252 Coq.Bool.Bool <> Is_true def
R13255:13264 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13277:13277 num_capteur <> z var
R13266:13275 num_capteur <> zenon_Tx_k var
R13179:13179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13213:13216 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13241:13241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13180:13186 Coq.Bool.Bool <> Is_true def
R13189:13198 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13211:13211 num_capteur <> y var
R13200:13209 num_capteur <> zenon_Tx_k var
R13217:13223 Coq.Bool.Bool <> Is_true def
R13226:13235 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13239:13239 num_capteur <> z var
R13237:13237 num_capteur <> y var
R13138:13143 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13101:13110 num_capteur <> zenon_Tx_k var
R12967:12972 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12985:12990 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13003:13008 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R13011:13011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13066:13070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13095:13095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13071:13077 Coq.Bool.Bool <> Is_true def
R13080:13089 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13093:13093 num_capteur <> z var
R13091:13091 num_capteur <> x var
R13012:13012 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13037:13040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13065:13065 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13013:13019 Coq.Bool.Bool <> Is_true def
R13022:13031 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13035:13035 num_capteur <> y var
R13033:13033 num_capteur <> x var
R13041:13047 Coq.Bool.Bool <> Is_true def
R13050:13059 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R13063:13063 num_capteur <> z var
R13061:13061 num_capteur <> y var
R12953:12958 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12685:12690 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12694:12694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12737:12740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12814:12814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12741:12741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12775:12778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12813:12813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12779:12785 Coq.Bool.Bool <> Is_true def
R12789:12798 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12811:12811 num_capteur <> z var
R12800:12809 num_capteur <> zenon_Tx_k var
R12742:12748 Coq.Bool.Bool <> Is_true def
R12751:12760 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12773:12773 num_capteur <> z var
R12762:12771 num_capteur <> zenon_Ty_l var
R12695:12701 Coq.Bool.Bool <> Is_true def
R12704:12713 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12726:12735 num_capteur <> zenon_Ty_l var
R12715:12724 num_capteur <> zenon_Tx_k var
R12671:12676 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12487:12492 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12505:12510 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12513:12513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12548:12551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12616:12616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12552:12552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12577:12580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12615:12615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12581:12587 Coq.Bool.Bool <> Is_true def
R12591:12600 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12613:12613 num_capteur <> z var
R12602:12611 num_capteur <> zenon_Tx_k var
R12553:12559 Coq.Bool.Bool <> Is_true def
R12562:12571 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12575:12575 num_capteur <> z var
R12573:12573 num_capteur <> y var
R12514:12520 Coq.Bool.Bool <> Is_true def
R12524:12533 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12546:12546 num_capteur <> y var
R12535:12544 num_capteur <> zenon_Tx_k var
R12473:12478 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12289:12294 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12307:12312 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12325:12330 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R12333:12333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12358:12361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12417:12417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12362:12362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12387:12391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12416:12416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12392:12398 Coq.Bool.Bool <> Is_true def
R12401:12410 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12414:12414 num_capteur <> z var
R12412:12412 num_capteur <> x var
R12363:12369 Coq.Bool.Bool <> Is_true def
R12372:12381 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12385:12385 num_capteur <> z var
R12383:12383 num_capteur <> y var
R12334:12340 Coq.Bool.Bool <> Is_true def
R12343:12352 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R12356:12356 num_capteur <> y var
R12354:12354 num_capteur <> x var
R12275:12280 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
prf 13855:13891 Imp_capteur for_zenon_abstracted_equal_transitive
R13918:13923 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R13960:13973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14000:14003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14004:14010 Coq.Bool.Bool <> Is_true def
R14014:14023 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R14027:14027 num_capteur <> z var
R14025:14025 num_capteur <> x var
R13974:13980 Coq.Bool.Bool <> Is_true def
R13984:13993 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R13997:13997 num_capteur <> z var
R13995:13995 num_capteur <> y var
R13934:13940 Coq.Bool.Bool <> Is_true def
R13944:13953 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R13957:13957 num_capteur <> y var
R13955:13955 num_capteur <> x var
R14065:14070 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R14065:14070 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_T var
R14112:14121 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R14112:14121 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal var
R14174:14194 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal_transitive var
R14174:14194 num_capteur <> Imp_capteur.Proof_of_equal_transitive._p_P_equal_transitive var
R14232:14237 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R14232:14237 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_T var
R14279:14288 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R14279:14288 num_capteur <> Imp_capteur.Proof_of_equal_transitive.abst_equal var
R14302:14327 num_capteur Imp_capteur for_zenon_equal_transitive thm
R14302:14327 num_capteur Imp_capteur for_zenon_equal_transitive thm
R14357:14381 num_capteur Imp_capteur.Proof_of_equal_transitive <> sec
prf 14397:14412 Imp_capteur equal_transitive
R14454:14457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14464:14467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14468:14481 basics <> bool__t def
R14458:14463 num_capteur <> _p_P_T var
R14448:14453 num_capteur <> _p_P_T var
R14530:14535 num_capteur <> _p_P_T var
R14544:14544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14601:14613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14614:14620 Coq.Bool.Bool <> Is_true def
R14624:14633 num_capteur <> _p_P_equal var
R14637:14637 num_capteur <> z var
R14635:14635 num_capteur <> x var
R14571:14574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14545:14551 Coq.Bool.Bool <> Is_true def
R14555:14564 num_capteur <> _p_P_equal var
R14568:14568 num_capteur <> y var
R14566:14566 num_capteur <> x var
R14575:14581 Coq.Bool.Bool <> Is_true def
R14585:14594 num_capteur <> _p_P_equal var
R14598:14598 num_capteur <> z var
R14596:14596 num_capteur <> y var
R14657:14662 num_capteur <> _p_P_T var
R14680:14684 num_capteur Imp_capteur equal def
R14693:14702 num_capteur <> _p_P_equal var
R14686:14691 num_capteur <> _p_P_T var
R14727:14732 num_capteur <> abst_T var
R14767:14778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14805:14808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14809:14815 Coq.Bool.Bool <> Is_true def
R14819:14828 num_capteur <> abst_equal var
R14832:14832 num_capteur <> z var
R14830:14830 num_capteur <> x var
R14779:14785 Coq.Bool.Bool <> Is_true def
R14789:14798 num_capteur <> abst_equal var
R14802:14802 num_capteur <> z var
R14800:14800 num_capteur <> y var
R14741:14747 Coq.Bool.Bool <> Is_true def
R14751:14760 num_capteur <> abst_equal var
R14764:14764 num_capteur <> y var
R14762:14762 num_capteur <> x var
R14845:14881 num_capteur Imp_capteur for_zenon_abstracted_equal_transitive thm
R14845:14881 num_capteur Imp_capteur for_zenon_abstracted_equal_transitive thm
sec 15022:15053 Imp_capteur Proof_of_all_field_different_0_1
var 15069:15074 Imp_capteur.Proof_of_all_field_different_0_1 _p_P_T
var 15096:15105 Imp_capteur.Proof_of_all_field_different_0_1 _p_P_equal
R15115:15118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15125:15128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15129:15142 basics <> bool__t def
R15119:15124 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15109:15114 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15158:15163 Imp_capteur.Proof_of_all_field_different_0_1 _p_P_s
R15173:15176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15177:15182 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15167:15172 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15198:15206 Imp_capteur.Proof_of_all_field_different_0_1 _p_P_zero
R15210:15215 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15231:15256 Imp_capteur.Proof_of_all_field_different_0_1 _p_P_zero_is_not_successor
R15277:15282 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15285:15285 Coq.Init.Logic <> :type_scope:'~'_x not
R15286:15292 Coq.Bool.Bool <> Is_true def
R15296:15305 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R15318:15323 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R15325:15325 num_capteur <> x var
R15307:15315 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
var 15339:15344 Imp_capteur.Proof_of_all_field_different_0_1 abst_T
R15349:15354 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15365:15375 Imp_capteur.Proof_of_all_field_different_0_1 abst_capt_1
R15380:15385 num_capteur Imp_capteur capt_1 def
R15394:15402 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15387:15392 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15413:15422 Imp_capteur.Proof_of_all_field_different_0_1 abst_equal
R15427:15431 num_capteur Imp_capteur equal def
R15440:15449 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R15433:15438 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
var 15460:15470 Imp_capteur.Proof_of_all_field_different_0_1 abst_capt_2
R15475:15480 num_capteur Imp_capteur capt_2 def
R15500:15510 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15489:15494 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R15482:15487 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
prf 15595:15627 Imp_capteur for_zenon_all_field_different_0_1
R15630:15631 Coq.Init.Logic <> :type_scope:'~'_x not
R15676:15676 Coq.Init.Logic <> :type_scope:'~'_x not
R15632:15638 Coq.Bool.Bool <> Is_true def
R15641:15650 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_equal var
R15664:15674 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R15652:15662 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15763:15764 Coq.Init.Logic <> :type_scope:'~'_x not
R15788:15788 Coq.Init.Logic <> :type_scope:'~'_x not
R15776:15778 Coq.Init.Logic <> :type_scope:x_'='_x not
R15765:15775 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15779:15787 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15807:15814 num_capteur <> zenon_H2 var
R15821:15831 zenon <> zenon_noteq thm
R15845:15852 num_capteur <> zenon_H3 var
R15835:15843 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15709:15709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15736:15738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15739:15743 Coq.Init.Logic <> False ind
R15710:15711 Coq.Init.Logic <> :type_scope:'~'_x not
R15735:15735 Coq.Init.Logic <> :type_scope:'~'_x not
R15723:15725 Coq.Init.Logic <> :type_scope:x_'='_x not
R15712:15722 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15726:15734 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15860:15863 Coq.Logic.Classical_Prop <> NNPP thm
R15882:15888 num_capteur <> zenon_G var
R15920:15927 num_capteur <> zenon_H9 var
R15933:15941 zenon <> zenon_all thm
R16847:16872 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero_is_not_successor var
R16040:16050 zenon <> zenon_subst thm
R16836:16843 num_capteur <> zenon_H5 var
R16827:16834 num_capteur <> zenon_H4 var
R16185:16195 zenon <> zenon_subst thm
R16816:16823 num_capteur <> zenon_H6 var
R16359:16369 zenon <> zenon_subst thm
R16744:16755 zenon <> zenon_notnot thm
R16760:16769 Coq.Init.Logic <> refl_equal syndef
R16772:16781 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16794:16799 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16801:16809 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16783:16791 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16532:16539 num_capteur <> zenon_H8 var
R16546:16556 zenon <> zenon_subst thm
R16730:16737 num_capteur <> zenon_H7 var
R16682:16693 zenon <> zenon_notnot thm
R16698:16707 Coq.Init.Logic <> refl_equal syndef
R16710:16715 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16717:16725 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16659:16667 num_capteur <> zenon_L1_ var
R16669:16676 num_capteur <> zenon_H2 var
R16633:16641 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16621:16631 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16576:16577 Coq.Init.Logic <> :type_scope:'~'_x not
R16616:16616 Coq.Init.Logic <> :type_scope:'~'_x not
R16578:16578 Coq.Init.Logic <> :type_scope:x_'='_x not
R16594:16598 Coq.Init.Logic <> :type_scope:x_'='_x not
R16615:16615 Coq.Init.Logic <> :type_scope:x_'='_x not
R16579:16584 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16586:16593 num_capteur <> zenon_Vh var
R16599:16604 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16606:16614 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16484:16489 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16491:16499 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16470:16480 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16389:16390 Coq.Init.Logic <> :type_scope:'~'_x not
R16466:16466 Coq.Init.Logic <> :type_scope:'~'_x not
R16391:16391 Coq.Init.Logic <> :type_scope:x_'='_x not
R16421:16425 Coq.Init.Logic <> :type_scope:x_'='_x not
R16465:16465 Coq.Init.Logic <> :type_scope:x_'='_x not
R16392:16401 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16413:16420 num_capteur <> zenon_Vg var
R16403:16411 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16426:16435 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16448:16453 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16455:16463 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16437:16445 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16337:16345 num_capteur <> zenon_L1_ var
R16347:16354 num_capteur <> zenon_H2 var
R16311:16319 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16299:16309 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16215:16216 Coq.Init.Logic <> :type_scope:'~'_x not
R16295:16295 Coq.Init.Logic <> :type_scope:'~'_x not
R16217:16217 Coq.Init.Logic <> :type_scope:x_'='_x not
R16249:16253 Coq.Init.Logic <> :type_scope:x_'='_x not
R16294:16294 Coq.Init.Logic <> :type_scope:x_'='_x not
R16218:16227 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16238:16248 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16229:16236 num_capteur <> zenon_Vi var
R16254:16263 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16277:16282 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16284:16292 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16265:16273 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16128:16137 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16150:16155 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16157:16165 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16139:16147 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16091:16100 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16114:16124 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16102:16112 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16071:16077 Coq.Bool.Bool <> Is_true def
R16079:16086 num_capteur <> zenon_Vf var
R16014:16022 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15957:15962 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15966:15967 Coq.Init.Logic <> :type_scope:'~'_x not
R16010:16010 Coq.Init.Logic <> :type_scope:'~'_x not
R15968:15974 Coq.Bool.Bool <> Is_true def
R15977:15986 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16000:16005 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16007:16007 num_capteur <> x var
R15988:15996 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15943:15948 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15763:15764 Coq.Init.Logic <> :type_scope:'~'_x not
R15788:15788 Coq.Init.Logic <> :type_scope:'~'_x not
R15776:15778 Coq.Init.Logic <> :type_scope:x_'='_x not
R15765:15775 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15779:15787 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15807:15814 num_capteur <> zenon_H2 var
R15821:15831 zenon <> zenon_noteq thm
R15845:15852 num_capteur <> zenon_H3 var
R15835:15843 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15709:15709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15736:15738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15739:15743 Coq.Init.Logic <> False ind
R15710:15711 Coq.Init.Logic <> :type_scope:'~'_x not
R15735:15735 Coq.Init.Logic <> :type_scope:'~'_x not
R15723:15725 Coq.Init.Logic <> :type_scope:x_'='_x not
R15712:15722 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R15726:15734 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15860:15863 Coq.Logic.Classical_Prop <> NNPP thm
R15882:15888 num_capteur <> zenon_G var
R15920:15927 num_capteur <> zenon_H9 var
R15933:15941 zenon <> zenon_all thm
R16847:16872 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero_is_not_successor var
R16040:16050 zenon <> zenon_subst thm
R16836:16843 num_capteur <> zenon_H5 var
R16827:16834 num_capteur <> zenon_H4 var
R16185:16195 zenon <> zenon_subst thm
R16816:16823 num_capteur <> zenon_H6 var
R16359:16369 zenon <> zenon_subst thm
R16744:16755 zenon <> zenon_notnot thm
R16760:16769 Coq.Init.Logic <> refl_equal syndef
R16772:16781 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16794:16799 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16801:16809 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16783:16791 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16532:16539 num_capteur <> zenon_H8 var
R16546:16556 zenon <> zenon_subst thm
R16730:16737 num_capteur <> zenon_H7 var
R16682:16693 zenon <> zenon_notnot thm
R16698:16707 Coq.Init.Logic <> refl_equal syndef
R16710:16715 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16717:16725 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16659:16667 num_capteur <> zenon_L1_ var
R16669:16676 num_capteur <> zenon_H2 var
R16633:16641 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16621:16631 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16576:16577 Coq.Init.Logic <> :type_scope:'~'_x not
R16616:16616 Coq.Init.Logic <> :type_scope:'~'_x not
R16578:16578 Coq.Init.Logic <> :type_scope:x_'='_x not
R16594:16598 Coq.Init.Logic <> :type_scope:x_'='_x not
R16615:16615 Coq.Init.Logic <> :type_scope:x_'='_x not
R16579:16584 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16586:16593 num_capteur <> zenon_Vh var
R16599:16604 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16606:16614 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16484:16489 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16491:16499 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16470:16480 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16389:16390 Coq.Init.Logic <> :type_scope:'~'_x not
R16466:16466 Coq.Init.Logic <> :type_scope:'~'_x not
R16391:16391 Coq.Init.Logic <> :type_scope:x_'='_x not
R16421:16425 Coq.Init.Logic <> :type_scope:x_'='_x not
R16465:16465 Coq.Init.Logic <> :type_scope:x_'='_x not
R16392:16401 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16413:16420 num_capteur <> zenon_Vg var
R16403:16411 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16426:16435 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16448:16453 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16455:16463 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16437:16445 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16337:16345 num_capteur <> zenon_L1_ var
R16347:16354 num_capteur <> zenon_H2 var
R16311:16319 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16299:16309 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16215:16216 Coq.Init.Logic <> :type_scope:'~'_x not
R16295:16295 Coq.Init.Logic <> :type_scope:'~'_x not
R16217:16217 Coq.Init.Logic <> :type_scope:x_'='_x not
R16249:16253 Coq.Init.Logic <> :type_scope:x_'='_x not
R16294:16294 Coq.Init.Logic <> :type_scope:x_'='_x not
R16218:16227 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16238:16248 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16229:16236 num_capteur <> zenon_Vi var
R16254:16263 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16277:16282 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16284:16292 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16265:16273 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16128:16137 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16150:16155 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16157:16165 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16139:16147 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R16091:16100 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16114:16124 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R16102:16112 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R16071:16077 Coq.Bool.Bool <> Is_true def
R16079:16086 num_capteur <> zenon_Vf var
R16014:16022 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15957:15962 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R15966:15967 Coq.Init.Logic <> :type_scope:'~'_x not
R16010:16010 Coq.Init.Logic <> :type_scope:'~'_x not
R15968:15974 Coq.Bool.Bool <> Is_true def
R15977:15986 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R16000:16005 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R16007:16007 num_capteur <> x var
R15988:15996 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R15943:15948 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
prf 16953:16996 Imp_capteur for_zenon_abstracted_all_field_different_0_1
R17006:17006 Coq.Init.Logic <> :type_scope:'~'_x not
R17007:17013 Coq.Bool.Bool <> Is_true def
R17018:17027 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_equal var
R17041:17051 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R17029:17039 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R17090:17095 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R17090:17095 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_T var
R17137:17146 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R17137:17146 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_equal var
R17184:17189 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R17184:17189 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_s var
R17230:17238 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R17230:17238 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero var
R17302:17327 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero_is_not_successor var
R17302:17327 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1._p_P_zero_is_not_successor var
R17365:17370 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_T var
R17365:17370 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_T var
R17413:17423 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R17413:17423 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_1 var
R17465:17474 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_equal var
R17465:17474 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_equal var
R17517:17527 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R17517:17527 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_1.abst_capt_2 var
R17541:17573 num_capteur Imp_capteur for_zenon_all_field_different_0_1 thm
R17541:17573 num_capteur Imp_capteur for_zenon_all_field_different_0_1 thm
R17603:17634 num_capteur Imp_capteur.Proof_of_all_field_different_0_1 <> sec
prf 17650:17672 Imp_capteur all_field_different_0_1
R17714:17717 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17724:17727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17728:17741 basics <> bool__t def
R17718:17723 num_capteur <> _p_P_T var
R17708:17713 num_capteur <> _p_P_T var
R17760:17763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17764:17769 num_capteur <> _p_P_T var
R17754:17759 num_capteur <> _p_P_T var
R17789:17794 num_capteur <> _p_P_T var
R17842:17847 num_capteur <> _p_P_T var
R17850:17850 Coq.Init.Logic <> :type_scope:'~'_x not
R17851:17857 Coq.Bool.Bool <> Is_true def
R17861:17870 num_capteur <> _p_P_equal var
R17883:17888 num_capteur <> _p_P_s var
R17890:17890 num_capteur <> x var
R17872:17880 num_capteur <> _p_P_zero var
R17911:17916 num_capteur <> _p_P_T var
R17935:17940 num_capteur Imp_capteur capt_1 def
R17949:17957 num_capteur <> _p_P_zero var
R17942:17947 num_capteur <> _p_P_T var
R17979:17983 num_capteur Imp_capteur equal def
R17992:18001 num_capteur <> _p_P_equal var
R17985:17990 num_capteur <> _p_P_T var
R18020:18025 num_capteur Imp_capteur capt_2 def
R18045:18055 num_capteur <> abst_capt_1 var
R18038:18043 num_capteur <> _p_P_s var
R18027:18032 num_capteur <> _p_P_T var
R18059:18059 Coq.Init.Logic <> :type_scope:'~'_x not
R18060:18066 Coq.Bool.Bool <> Is_true def
R18071:18080 num_capteur <> abst_equal var
R18094:18104 num_capteur <> abst_capt_2 var
R18082:18092 num_capteur <> abst_capt_1 var
R18118:18161 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_0_1 thm
R18118:18161 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_0_1 thm
def 18192:18197 Imp_capteur capt_3
R18230:18233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18234:18239 num_capteur <> _p_P_T var
R18224:18229 num_capteur <> _p_P_T var
R18257:18262 num_capteur <> _p_P_T var
R18280:18285 num_capteur <> abst_T var
R18290:18295 num_capteur <> abst_T var
R18305:18310 num_capteur <> _p_P_s var
R18312:18322 num_capteur <> abst_capt_2 var
sec 18449:18480 Imp_capteur Proof_of_all_field_different_0_2
var 18496:18501 Imp_capteur.Proof_of_all_field_different_0_2 _p_P_T
var 18523:18532 Imp_capteur.Proof_of_all_field_different_0_2 _p_P_equal
R18542:18545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18552:18555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18556:18569 basics <> bool__t def
R18546:18551 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R18536:18541 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18585:18590 Imp_capteur.Proof_of_all_field_different_0_2 _p_P_s
R18600:18603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18604:18609 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R18594:18599 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18625:18633 Imp_capteur.Proof_of_all_field_different_0_2 _p_P_zero
R18637:18642 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18658:18683 Imp_capteur.Proof_of_all_field_different_0_2 _p_P_zero_is_not_successor
R18704:18709 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R18712:18712 Coq.Init.Logic <> :type_scope:'~'_x not
R18713:18719 Coq.Bool.Bool <> Is_true def
R18723:18732 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R18745:18750 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R18752:18752 num_capteur <> x var
R18734:18742 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
var 18766:18771 Imp_capteur.Proof_of_all_field_different_0_2 abst_T
R18776:18781 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18792:18802 Imp_capteur.Proof_of_all_field_different_0_2 abst_capt_1
R18807:18812 num_capteur Imp_capteur capt_1 def
R18821:18829 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R18814:18819 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18840:18849 Imp_capteur.Proof_of_all_field_different_0_2 abst_equal
R18854:18858 num_capteur Imp_capteur equal def
R18871:18880 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R18860:18865 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
var 18896:18906 Imp_capteur.Proof_of_all_field_different_0_2 abst_capt_2
R18910:18915 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_T var
var 18926:18936 Imp_capteur.Proof_of_all_field_different_0_2 abst_capt_3
R18941:18946 num_capteur Imp_capteur capt_3 def
R18966:18976 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R18955:18960 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R18948:18953 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
prf 19061:19093 Imp_capteur for_zenon_all_field_different_0_2
R19096:19097 Coq.Init.Logic <> :type_scope:'~'_x not
R19142:19142 Coq.Init.Logic <> :type_scope:'~'_x not
R19098:19104 Coq.Bool.Bool <> Is_true def
R19107:19116 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_equal var
R19130:19140 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19118:19128 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R19161:19164 Coq.Logic.Classical_Prop <> NNPP thm
R19183:19189 num_capteur <> zenon_G var
R19221:19228 num_capteur <> zenon_H9 var
R19234:19242 zenon <> zenon_all thm
R20051:20076 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero_is_not_successor var
R19343:19353 zenon <> zenon_subst thm
R20040:20047 num_capteur <> zenon_H3 var
R20031:20038 num_capteur <> zenon_H2 var
R19490:19500 zenon <> zenon_subst thm
R20020:20027 num_capteur <> zenon_H4 var
R19708:19718 zenon <> zenon_subst thm
R19946:19957 zenon <> zenon_notnot thm
R19962:19971 Coq.Init.Logic <> refl_equal syndef
R19974:19983 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19996:20001 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R20003:20013 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19985:19993 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19885:19892 num_capteur <> zenon_H6 var
R19898:19908 zenon <> zenon_noteq thm
R19933:19940 num_capteur <> zenon_H5 var
R19913:19918 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19920:19930 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19834:19839 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19841:19851 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19821:19831 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19738:19739 Coq.Init.Logic <> :type_scope:'~'_x not
R19817:19817 Coq.Init.Logic <> :type_scope:'~'_x not
R19740:19740 Coq.Init.Logic <> :type_scope:x_'='_x not
R19770:19774 Coq.Init.Logic <> :type_scope:x_'='_x not
R19816:19816 Coq.Init.Logic <> :type_scope:x_'='_x not
R19741:19750 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19762:19769 num_capteur <> zenon_Vg var
R19752:19760 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19775:19784 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19797:19802 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19804:19814 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19786:19794 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19658:19665 num_capteur <> zenon_H8 var
R19671:19681 zenon <> zenon_noteq thm
R19695:19702 num_capteur <> zenon_H7 var
R19685:19693 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19618:19626 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19606:19616 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R19520:19521 Coq.Init.Logic <> :type_scope:'~'_x not
R19602:19602 Coq.Init.Logic <> :type_scope:'~'_x not
R19522:19522 Coq.Init.Logic <> :type_scope:x_'='_x not
R19554:19558 Coq.Init.Logic <> :type_scope:x_'='_x not
R19601:19601 Coq.Init.Logic <> :type_scope:x_'='_x not
R19523:19532 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19543:19553 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19534:19541 num_capteur <> zenon_Vh var
R19559:19568 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19582:19587 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19589:19599 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19570:19578 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19431:19440 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19453:19458 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19460:19470 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19442:19450 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19394:19403 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19417:19427 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19405:19415 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R19374:19380 Coq.Bool.Bool <> Is_true def
R19382:19389 num_capteur <> zenon_Vf var
R19315:19325 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19258:19263 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R19267:19268 Coq.Init.Logic <> :type_scope:'~'_x not
R19311:19311 Coq.Init.Logic <> :type_scope:'~'_x not
R19269:19275 Coq.Bool.Bool <> Is_true def
R19278:19287 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19301:19306 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19308:19308 num_capteur <> x var
R19289:19297 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19244:19249 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R19161:19164 Coq.Logic.Classical_Prop <> NNPP thm
R19183:19189 num_capteur <> zenon_G var
R19221:19228 num_capteur <> zenon_H9 var
R19234:19242 zenon <> zenon_all thm
R20051:20076 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero_is_not_successor var
R19343:19353 zenon <> zenon_subst thm
R20040:20047 num_capteur <> zenon_H3 var
R20031:20038 num_capteur <> zenon_H2 var
R19490:19500 zenon <> zenon_subst thm
R20020:20027 num_capteur <> zenon_H4 var
R19708:19718 zenon <> zenon_subst thm
R19946:19957 zenon <> zenon_notnot thm
R19962:19971 Coq.Init.Logic <> refl_equal syndef
R19974:19983 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19996:20001 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R20003:20013 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19985:19993 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19885:19892 num_capteur <> zenon_H6 var
R19898:19908 zenon <> zenon_noteq thm
R19933:19940 num_capteur <> zenon_H5 var
R19913:19918 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19920:19930 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19834:19839 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19841:19851 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19821:19831 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19738:19739 Coq.Init.Logic <> :type_scope:'~'_x not
R19817:19817 Coq.Init.Logic <> :type_scope:'~'_x not
R19740:19740 Coq.Init.Logic <> :type_scope:x_'='_x not
R19770:19774 Coq.Init.Logic <> :type_scope:x_'='_x not
R19816:19816 Coq.Init.Logic <> :type_scope:x_'='_x not
R19741:19750 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19762:19769 num_capteur <> zenon_Vg var
R19752:19760 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19775:19784 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19797:19802 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19804:19814 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19786:19794 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19658:19665 num_capteur <> zenon_H8 var
R19671:19681 zenon <> zenon_noteq thm
R19695:19702 num_capteur <> zenon_H7 var
R19685:19693 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19618:19626 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19606:19616 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R19520:19521 Coq.Init.Logic <> :type_scope:'~'_x not
R19602:19602 Coq.Init.Logic <> :type_scope:'~'_x not
R19522:19522 Coq.Init.Logic <> :type_scope:x_'='_x not
R19554:19558 Coq.Init.Logic <> :type_scope:x_'='_x not
R19601:19601 Coq.Init.Logic <> :type_scope:x_'='_x not
R19523:19532 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19543:19553 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19534:19541 num_capteur <> zenon_Vh var
R19559:19568 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19582:19587 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19589:19599 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19570:19578 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19431:19440 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19453:19458 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19460:19470 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19442:19450 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19394:19403 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19417:19427 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R19405:19415 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R19374:19380 Coq.Bool.Bool <> Is_true def
R19382:19389 num_capteur <> zenon_Vf var
R19315:19325 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R19258:19263 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R19267:19268 Coq.Init.Logic <> :type_scope:'~'_x not
R19311:19311 Coq.Init.Logic <> :type_scope:'~'_x not
R19269:19275 Coq.Bool.Bool <> Is_true def
R19278:19287 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R19301:19306 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R19308:19308 num_capteur <> x var
R19289:19297 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R19244:19249 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
prf 20157:20200 Imp_capteur for_zenon_abstracted_all_field_different_0_2
R20210:20210 Coq.Init.Logic <> :type_scope:'~'_x not
R20211:20217 Coq.Bool.Bool <> Is_true def
R20222:20231 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_equal var
R20245:20255 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R20233:20243 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R20294:20299 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R20294:20299 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_T var
R20341:20350 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R20341:20350 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_equal var
R20388:20393 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R20388:20393 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_s var
R20434:20442 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R20434:20442 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero var
R20506:20531 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero_is_not_successor var
R20506:20531 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2._p_P_zero_is_not_successor var
R20569:20574 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_T var
R20569:20574 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_T var
R20617:20627 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R20617:20627 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_1 var
R20669:20678 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_equal var
R20669:20678 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_equal var
R20721:20731 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R20721:20731 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_2 var
R20774:20784 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R20774:20784 num_capteur <> Imp_capteur.Proof_of_all_field_different_0_2.abst_capt_3 var
R20798:20830 num_capteur Imp_capteur for_zenon_all_field_different_0_2 thm
R20798:20830 num_capteur Imp_capteur for_zenon_all_field_different_0_2 thm
R20860:20891 num_capteur Imp_capteur.Proof_of_all_field_different_0_2 <> sec
prf 20907:20929 Imp_capteur all_field_different_0_2
R20971:20974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20981:20984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20985:20998 basics <> bool__t def
R20975:20980 num_capteur <> _p_P_T var
R20965:20970 num_capteur <> _p_P_T var
R21017:21020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21021:21026 num_capteur <> _p_P_T var
R21011:21016 num_capteur <> _p_P_T var
R21046:21051 num_capteur <> _p_P_T var
R21099:21104 num_capteur <> _p_P_T var
R21107:21107 Coq.Init.Logic <> :type_scope:'~'_x not
R21108:21114 Coq.Bool.Bool <> Is_true def
R21118:21127 num_capteur <> _p_P_equal var
R21140:21145 num_capteur <> _p_P_s var
R21147:21147 num_capteur <> x var
R21129:21137 num_capteur <> _p_P_zero var
R21168:21173 num_capteur <> _p_P_T var
R21192:21197 num_capteur Imp_capteur capt_1 def
R21206:21214 num_capteur <> _p_P_zero var
R21199:21204 num_capteur <> _p_P_T var
R21236:21240 num_capteur Imp_capteur equal def
R21249:21258 num_capteur <> _p_P_equal var
R21242:21247 num_capteur <> _p_P_T var
R21276:21281 num_capteur <> abst_T var
R21304:21309 num_capteur Imp_capteur capt_3 def
R21325:21335 num_capteur <> abst_capt_2 var
R21318:21323 num_capteur <> _p_P_s var
R21311:21316 num_capteur <> _p_P_T var
R21343:21343 Coq.Init.Logic <> :type_scope:'~'_x not
R21344:21350 Coq.Bool.Bool <> Is_true def
R21355:21364 num_capteur <> abst_equal var
R21378:21388 num_capteur <> abst_capt_3 var
R21366:21376 num_capteur <> abst_capt_1 var
R21402:21445 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_0_2 thm
R21402:21445 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_0_2 thm
sec 21586:21617 Imp_capteur Proof_of_all_field_different_1_2
var 21633:21638 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_T
var 21660:21669 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_equal
R21679:21682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21689:21692 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21693:21706 basics <> bool__t def
R21683:21688 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R21673:21678 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 21722:21727 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_s
R21737:21740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21741:21746 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R21731:21736 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 21762:21770 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_zero
R21774:21779 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 21795:21819 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_succ_is_an_injection
R21843:21848 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R21903:21916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21917:21923 Coq.Bool.Bool <> Is_true def
R21927:21936 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R21940:21940 num_capteur <> y var
R21938:21938 num_capteur <> x var
R21859:21865 Coq.Bool.Bool <> Is_true def
R21869:21878 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R21892:21897 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R21899:21899 num_capteur <> y var
R21881:21886 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R21888:21888 num_capteur <> x var
var 21958:21983 Imp_capteur.Proof_of_all_field_different_1_2 _p_P_zero_is_not_successor
R22004:22009 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R22012:22012 Coq.Init.Logic <> :type_scope:'~'_x not
R22013:22019 Coq.Bool.Bool <> Is_true def
R22023:22032 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R22045:22050 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22052:22052 num_capteur <> x var
R22034:22042 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
var 22066:22071 Imp_capteur.Proof_of_all_field_different_1_2 abst_T
R22076:22081 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 22092:22102 Imp_capteur.Proof_of_all_field_different_1_2 abst_capt_1
R22107:22112 num_capteur Imp_capteur capt_1 def
R22121:22129 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22114:22119 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 22140:22149 Imp_capteur.Proof_of_all_field_different_1_2 abst_equal
R22154:22158 num_capteur Imp_capteur equal def
R22167:22176 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R22160:22165 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 22187:22197 Imp_capteur.Proof_of_all_field_different_1_2 abst_capt_2
R22202:22207 num_capteur Imp_capteur capt_2 def
R22223:22233 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22216:22221 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22209:22214 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
var 22244:22254 Imp_capteur.Proof_of_all_field_different_1_2 abst_capt_3
R22259:22264 num_capteur Imp_capteur capt_3 def
R22284:22294 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R22273:22278 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22266:22271 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
prf 22379:22411 Imp_capteur for_zenon_all_field_different_1_2
R22414:22415 Coq.Init.Logic <> :type_scope:'~'_x not
R22460:22460 Coq.Init.Logic <> :type_scope:'~'_x not
R22416:22422 Coq.Bool.Bool <> Is_true def
R22425:22434 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_equal var
R22448:22458 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R22436:22446 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R22565:22566 Coq.Init.Logic <> :type_scope:'~'_x not
R22608:22608 Coq.Init.Logic <> :type_scope:'~'_x not
R22567:22567 Coq.Init.Logic <> :type_scope:x_'='_x not
R22586:22590 Coq.Init.Logic <> :type_scope:x_'='_x not
R22607:22607 Coq.Init.Logic <> :type_scope:x_'='_x not
R22568:22573 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22575:22585 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22591:22596 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22598:22606 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22614:22624 zenon <> zenon_subst thm
R22840:22847 num_capteur <> zenon_H3 var
R22792:22803 zenon <> zenon_notnot thm
R22808:22817 Coq.Init.Logic <> refl_equal syndef
R22820:22825 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22827:22835 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22741:22748 num_capteur <> zenon_H5 var
R22755:22765 zenon <> zenon_noteq thm
R22779:22786 num_capteur <> zenon_H4 var
R22769:22777 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22701:22709 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22689:22699 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22644:22645 Coq.Init.Logic <> :type_scope:'~'_x not
R22684:22684 Coq.Init.Logic <> :type_scope:'~'_x not
R22646:22646 Coq.Init.Logic <> :type_scope:x_'='_x not
R22662:22666 Coq.Init.Logic <> :type_scope:x_'='_x not
R22683:22683 Coq.Init.Logic <> :type_scope:x_'='_x not
R22647:22652 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22654:22661 num_capteur <> zenon_Vf var
R22667:22672 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22674:22682 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22493:22493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22538:22540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22541:22545 Coq.Init.Logic <> False ind
R22494:22495 Coq.Init.Logic <> :type_scope:'~'_x not
R22537:22537 Coq.Init.Logic <> :type_scope:'~'_x not
R22496:22496 Coq.Init.Logic <> :type_scope:x_'='_x not
R22515:22519 Coq.Init.Logic <> :type_scope:x_'='_x not
R22536:22536 Coq.Init.Logic <> :type_scope:x_'='_x not
R22497:22502 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22504:22514 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22520:22525 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22527:22535 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22942:22943 Coq.Init.Logic <> :type_scope:'~'_x not
R22987:22987 Coq.Init.Logic <> :type_scope:'~'_x not
R22955:22958 Coq.Init.Logic <> :type_scope:x_'='_x not
R22986:22986 Coq.Init.Logic <> :type_scope:x_'='_x not
R22944:22954 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R22959:22964 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22967:22972 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22974:22984 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23006:23013 num_capteur <> zenon_H6 var
R23019:23029 zenon <> zenon_subst thm
R23289:23296 num_capteur <> zenon_H7 var
R23230:23241 zenon <> zenon_notnot thm
R23246:23255 Coq.Init.Logic <> refl_equal syndef
R23258:23263 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23266:23271 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23273:23283 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23169:23176 num_capteur <> zenon_H9 var
R23182:23192 zenon <> zenon_noteq thm
R23217:23224 num_capteur <> zenon_H8 var
R23197:23202 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23204:23214 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23118:23123 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23125:23135 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23105:23115 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R23049:23050 Coq.Init.Logic <> :type_scope:'~'_x not
R23101:23101 Coq.Init.Logic <> :type_scope:'~'_x not
R23051:23051 Coq.Init.Logic <> :type_scope:x_'='_x not
R23067:23072 Coq.Init.Logic <> :type_scope:x_'='_x not
R23100:23100 Coq.Init.Logic <> :type_scope:x_'='_x not
R23052:23057 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23059:23066 num_capteur <> zenon_Vg var
R23073:23078 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23081:23086 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23088:23098 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22868:22868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22915:22917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22918:22922 Coq.Init.Logic <> False ind
R22869:22870 Coq.Init.Logic <> :type_scope:'~'_x not
R22914:22914 Coq.Init.Logic <> :type_scope:'~'_x not
R22882:22885 Coq.Init.Logic <> :type_scope:x_'='_x not
R22913:22913 Coq.Init.Logic <> :type_scope:x_'='_x not
R22871:22881 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R22886:22891 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22894:22899 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22901:22911 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23304:23307 Coq.Logic.Classical_Prop <> NNPP thm
R23326:23332 num_capteur <> zenon_G var
R23365:23373 num_capteur <> zenon_H13 var
R23379:23387 zenon <> zenon_all thm
R25091:25116 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero_is_not_successor var
R23486:23494 zenon <> zenon_all thm
R25063:25087 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_succ_is_an_injection var
R23641:23649 zenon <> zenon_all thm
R25051:25059 num_capteur <> zenon_H12 var
R23803:23813 zenon <> zenon_imply thm
R25039:25047 num_capteur <> zenon_H11 var
R24595:24605 zenon <> zenon_subst thm
R25028:25035 num_capteur <> zenon_Hb var
R25019:25026 num_capteur <> zenon_Ha var
R24747:24757 zenon <> zenon_subst thm
R25008:25015 num_capteur <> zenon_Hc var
R24937:24948 zenon <> zenon_notnot thm
R24953:24962 Coq.Init.Logic <> refl_equal syndef
R24965:24974 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24987:24992 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24994:25002 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24976:24984 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24914:24922 num_capteur <> zenon_L1_ var
R24924:24931 num_capteur <> zenon_H3 var
R24880:24885 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24887:24895 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24859:24864 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24866:24876 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24777:24778 Coq.Init.Logic <> :type_scope:'~'_x not
R24854:24854 Coq.Init.Logic <> :type_scope:'~'_x not
R24779:24779 Coq.Init.Logic <> :type_scope:x_'='_x not
R24809:24813 Coq.Init.Logic <> :type_scope:x_'='_x not
R24853:24853 Coq.Init.Logic <> :type_scope:x_'='_x not
R24780:24789 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24801:24808 num_capteur <> zenon_Vi var
R24791:24799 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24814:24823 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24836:24841 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24843:24851 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24825:24833 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24690:24699 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24712:24717 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24719:24727 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24701:24709 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24645:24654 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24668:24673 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24675:24685 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24656:24664 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24625:24631 Coq.Bool.Bool <> Is_true def
R24633:24640 num_capteur <> zenon_Vh var
R23835:23845 zenon <> zenon_subst thm
R24567:24574 num_capteur <> zenon_He var
R24558:24565 num_capteur <> zenon_Hd var
R24000:24010 zenon <> zenon_subst thm
R24547:24554 num_capteur <> zenon_Hf var
R24232:24242 zenon <> zenon_subst thm
R24454:24465 zenon <> zenon_notnot thm
R24470:24479 Coq.Init.Logic <> refl_equal syndef
R24482:24491 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24513:24518 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24522:24527 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24529:24539 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24494:24499 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24501:24509 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24431:24439 num_capteur <> zenon_L2_ var
R24441:24448 num_capteur <> zenon_H6 var
R24386:24391 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24394:24399 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24401:24411 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24373:24383 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R24262:24263 Coq.Init.Logic <> :type_scope:'~'_x not
R24369:24369 Coq.Init.Logic <> :type_scope:'~'_x not
R24264:24264 Coq.Init.Logic <> :type_scope:x_'='_x not
R24303:24307 Coq.Init.Logic <> :type_scope:x_'='_x not
R24368:24368 Coq.Init.Logic <> :type_scope:x_'='_x not
R24265:24274 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24295:24302 num_capteur <> zenon_Vk var
R24277:24282 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24284:24292 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24308:24317 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24340:24345 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24348:24353 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24355:24365 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24321:24326 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24328:24336 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24195:24203 num_capteur <> zenon_H10 var
R24209:24217 num_capteur <> zenon_L1_ var
R24219:24226 num_capteur <> zenon_H3 var
R24146:24151 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24153:24161 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24133:24143 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R24030:24031 Coq.Init.Logic <> :type_scope:'~'_x not
R24129:24129 Coq.Init.Logic <> :type_scope:'~'_x not
R24032:24032 Coq.Init.Logic <> :type_scope:x_'='_x not
R24064:24068 Coq.Init.Logic <> :type_scope:x_'='_x not
R24128:24128 Coq.Init.Logic <> :type_scope:x_'='_x not
R24033:24042 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24053:24063 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R24044:24051 num_capteur <> zenon_Vl var
R24069:24078 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24100:24105 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24108:24113 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24115:24125 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24081:24086 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24088:24096 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23923:23932 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23954:23959 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23962:23967 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23969:23979 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23935:23940 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23942:23950 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23885:23894 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23908:23918 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R23896:23906 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R23865:23871 Coq.Bool.Bool <> Is_true def
R23873:23880 num_capteur <> zenon_Vj var
R23766:23771 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23773:23783 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23665:23670 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23674:23674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23725:23728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23761:23761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23729:23735 Coq.Bool.Bool <> Is_true def
R23738:23747 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23759:23759 num_capteur <> y var
R23749:23757 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23675:23681 Coq.Bool.Bool <> Is_true def
R23684:23693 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23715:23720 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23722:23722 num_capteur <> y var
R23696:23701 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23703:23711 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23651:23656 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23614:23622 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23510:23515 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23529:23534 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23537:23537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23580:23584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23609:23609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23585:23591 Coq.Bool.Bool <> Is_true def
R23594:23603 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23607:23607 num_capteur <> y var
R23605:23605 num_capteur <> x var
R23538:23544 Coq.Bool.Bool <> Is_true def
R23547:23556 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23570:23575 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23577:23577 num_capteur <> y var
R23559:23564 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23566:23566 num_capteur <> x var
R23496:23501 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23460:23468 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23403:23408 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23412:23413 Coq.Init.Logic <> :type_scope:'~'_x not
R23456:23456 Coq.Init.Logic <> :type_scope:'~'_x not
R23414:23420 Coq.Bool.Bool <> Is_true def
R23423:23432 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23446:23451 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23453:23453 num_capteur <> x var
R23434:23442 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23389:23394 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R22565:22566 Coq.Init.Logic <> :type_scope:'~'_x not
R22608:22608 Coq.Init.Logic <> :type_scope:'~'_x not
R22567:22567 Coq.Init.Logic <> :type_scope:x_'='_x not
R22586:22590 Coq.Init.Logic <> :type_scope:x_'='_x not
R22607:22607 Coq.Init.Logic <> :type_scope:x_'='_x not
R22568:22573 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22575:22585 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22591:22596 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22598:22606 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22614:22624 zenon <> zenon_subst thm
R22840:22847 num_capteur <> zenon_H3 var
R22792:22803 zenon <> zenon_notnot thm
R22808:22817 Coq.Init.Logic <> refl_equal syndef
R22820:22825 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22827:22835 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22741:22748 num_capteur <> zenon_H5 var
R22755:22765 zenon <> zenon_noteq thm
R22779:22786 num_capteur <> zenon_H4 var
R22769:22777 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22701:22709 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22689:22699 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22644:22645 Coq.Init.Logic <> :type_scope:'~'_x not
R22684:22684 Coq.Init.Logic <> :type_scope:'~'_x not
R22646:22646 Coq.Init.Logic <> :type_scope:x_'='_x not
R22662:22666 Coq.Init.Logic <> :type_scope:x_'='_x not
R22683:22683 Coq.Init.Logic <> :type_scope:x_'='_x not
R22647:22652 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22654:22661 num_capteur <> zenon_Vf var
R22667:22672 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22674:22682 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22493:22493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22538:22540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22541:22545 Coq.Init.Logic <> False ind
R22494:22495 Coq.Init.Logic <> :type_scope:'~'_x not
R22537:22537 Coq.Init.Logic <> :type_scope:'~'_x not
R22496:22496 Coq.Init.Logic <> :type_scope:x_'='_x not
R22515:22519 Coq.Init.Logic <> :type_scope:x_'='_x not
R22536:22536 Coq.Init.Logic <> :type_scope:x_'='_x not
R22497:22502 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22504:22514 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22520:22525 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22527:22535 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R22942:22943 Coq.Init.Logic <> :type_scope:'~'_x not
R22987:22987 Coq.Init.Logic <> :type_scope:'~'_x not
R22955:22958 Coq.Init.Logic <> :type_scope:x_'='_x not
R22986:22986 Coq.Init.Logic <> :type_scope:x_'='_x not
R22944:22954 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R22959:22964 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22967:22972 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22974:22984 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23006:23013 num_capteur <> zenon_H6 var
R23019:23029 zenon <> zenon_subst thm
R23289:23296 num_capteur <> zenon_H7 var
R23230:23241 zenon <> zenon_notnot thm
R23246:23255 Coq.Init.Logic <> refl_equal syndef
R23258:23263 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23266:23271 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23273:23283 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23169:23176 num_capteur <> zenon_H9 var
R23182:23192 zenon <> zenon_noteq thm
R23217:23224 num_capteur <> zenon_H8 var
R23197:23202 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23204:23214 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23118:23123 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23125:23135 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23105:23115 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R23049:23050 Coq.Init.Logic <> :type_scope:'~'_x not
R23101:23101 Coq.Init.Logic <> :type_scope:'~'_x not
R23051:23051 Coq.Init.Logic <> :type_scope:x_'='_x not
R23067:23072 Coq.Init.Logic <> :type_scope:x_'='_x not
R23100:23100 Coq.Init.Logic <> :type_scope:x_'='_x not
R23052:23057 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23059:23066 num_capteur <> zenon_Vg var
R23073:23078 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23081:23086 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23088:23098 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R22868:22868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22915:22917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22918:22922 Coq.Init.Logic <> False ind
R22869:22870 Coq.Init.Logic <> :type_scope:'~'_x not
R22914:22914 Coq.Init.Logic <> :type_scope:'~'_x not
R22882:22885 Coq.Init.Logic <> :type_scope:x_'='_x not
R22913:22913 Coq.Init.Logic <> :type_scope:x_'='_x not
R22871:22881 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R22886:22891 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22894:22899 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R22901:22911 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23304:23307 Coq.Logic.Classical_Prop <> NNPP thm
R23326:23332 num_capteur <> zenon_G var
R23365:23373 num_capteur <> zenon_H13 var
R23379:23387 zenon <> zenon_all thm
R25091:25116 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero_is_not_successor var
R23486:23494 zenon <> zenon_all thm
R25063:25087 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_succ_is_an_injection var
R23641:23649 zenon <> zenon_all thm
R25051:25059 num_capteur <> zenon_H12 var
R23803:23813 zenon <> zenon_imply thm
R25039:25047 num_capteur <> zenon_H11 var
R24595:24605 zenon <> zenon_subst thm
R25028:25035 num_capteur <> zenon_Hb var
R25019:25026 num_capteur <> zenon_Ha var
R24747:24757 zenon <> zenon_subst thm
R25008:25015 num_capteur <> zenon_Hc var
R24937:24948 zenon <> zenon_notnot thm
R24953:24962 Coq.Init.Logic <> refl_equal syndef
R24965:24974 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24987:24992 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24994:25002 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24976:24984 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24914:24922 num_capteur <> zenon_L1_ var
R24924:24931 num_capteur <> zenon_H3 var
R24880:24885 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24887:24895 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24859:24864 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24866:24876 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24777:24778 Coq.Init.Logic <> :type_scope:'~'_x not
R24854:24854 Coq.Init.Logic <> :type_scope:'~'_x not
R24779:24779 Coq.Init.Logic <> :type_scope:x_'='_x not
R24809:24813 Coq.Init.Logic <> :type_scope:x_'='_x not
R24853:24853 Coq.Init.Logic <> :type_scope:x_'='_x not
R24780:24789 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24801:24808 num_capteur <> zenon_Vi var
R24791:24799 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24814:24823 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24836:24841 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24843:24851 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24825:24833 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24690:24699 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24712:24717 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24719:24727 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24701:24709 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24645:24654 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24668:24673 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24675:24685 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24656:24664 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24625:24631 Coq.Bool.Bool <> Is_true def
R24633:24640 num_capteur <> zenon_Vh var
R23835:23845 zenon <> zenon_subst thm
R24567:24574 num_capteur <> zenon_He var
R24558:24565 num_capteur <> zenon_Hd var
R24000:24010 zenon <> zenon_subst thm
R24547:24554 num_capteur <> zenon_Hf var
R24232:24242 zenon <> zenon_subst thm
R24454:24465 zenon <> zenon_notnot thm
R24470:24479 Coq.Init.Logic <> refl_equal syndef
R24482:24491 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24513:24518 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24522:24527 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24529:24539 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24494:24499 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24501:24509 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24431:24439 num_capteur <> zenon_L2_ var
R24441:24448 num_capteur <> zenon_H6 var
R24386:24391 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24394:24399 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24401:24411 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24373:24383 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R24262:24263 Coq.Init.Logic <> :type_scope:'~'_x not
R24369:24369 Coq.Init.Logic <> :type_scope:'~'_x not
R24264:24264 Coq.Init.Logic <> :type_scope:x_'='_x not
R24303:24307 Coq.Init.Logic <> :type_scope:x_'='_x not
R24368:24368 Coq.Init.Logic <> :type_scope:x_'='_x not
R24265:24274 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24295:24302 num_capteur <> zenon_Vk var
R24277:24282 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24284:24292 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24308:24317 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24340:24345 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24348:24353 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24355:24365 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24321:24326 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24328:24336 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24195:24203 num_capteur <> zenon_H10 var
R24209:24217 num_capteur <> zenon_L1_ var
R24219:24226 num_capteur <> zenon_H3 var
R24146:24151 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24153:24161 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R24133:24143 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R24030:24031 Coq.Init.Logic <> :type_scope:'~'_x not
R24129:24129 Coq.Init.Logic <> :type_scope:'~'_x not
R24032:24032 Coq.Init.Logic <> :type_scope:x_'='_x not
R24064:24068 Coq.Init.Logic <> :type_scope:x_'='_x not
R24128:24128 Coq.Init.Logic <> :type_scope:x_'='_x not
R24033:24042 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24053:24063 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R24044:24051 num_capteur <> zenon_Vl var
R24069:24078 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R24100:24105 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24108:24113 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24115:24125 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R24081:24086 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R24088:24096 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23923:23932 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23954:23959 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23962:23967 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23969:23979 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23935:23940 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23942:23950 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23885:23894 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23908:23918 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R23896:23906 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R23865:23871 Coq.Bool.Bool <> Is_true def
R23873:23880 num_capteur <> zenon_Vj var
R23766:23771 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23773:23783 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R23665:23670 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23674:23674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23725:23728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23761:23761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23729:23735 Coq.Bool.Bool <> Is_true def
R23738:23747 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23759:23759 num_capteur <> y var
R23749:23757 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23675:23681 Coq.Bool.Bool <> Is_true def
R23684:23693 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23715:23720 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23722:23722 num_capteur <> y var
R23696:23701 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23703:23711 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23651:23656 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23614:23622 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23510:23515 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23529:23534 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23537:23537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23580:23584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23609:23609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23585:23591 Coq.Bool.Bool <> Is_true def
R23594:23603 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23607:23607 num_capteur <> y var
R23605:23605 num_capteur <> x var
R23538:23544 Coq.Bool.Bool <> Is_true def
R23547:23556 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23570:23575 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23577:23577 num_capteur <> y var
R23559:23564 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23566:23566 num_capteur <> x var
R23496:23501 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23460:23468 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23403:23408 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R23412:23413 Coq.Init.Logic <> :type_scope:'~'_x not
R23456:23456 Coq.Init.Logic <> :type_scope:'~'_x not
R23414:23420 Coq.Bool.Bool <> Is_true def
R23423:23432 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R23446:23451 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R23453:23453 num_capteur <> x var
R23434:23442 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R23389:23394 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
prf 25197:25240 Imp_capteur for_zenon_abstracted_all_field_different_1_2
R25250:25250 Coq.Init.Logic <> :type_scope:'~'_x not
R25251:25257 Coq.Bool.Bool <> Is_true def
R25262:25271 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_equal var
R25285:25295 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R25273:25283 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R25334:25339 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R25334:25339 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_T var
R25381:25390 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R25381:25390 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_equal var
R25428:25433 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R25428:25433 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_s var
R25474:25482 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R25474:25482 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero var
R25545:25569 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_succ_is_an_injection var
R25545:25569 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_succ_is_an_injection var
R25633:25658 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero_is_not_successor var
R25633:25658 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2._p_P_zero_is_not_successor var
R25696:25701 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_T var
R25696:25701 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_T var
R25744:25754 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R25744:25754 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_1 var
R25796:25805 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_equal var
R25796:25805 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_equal var
R25848:25858 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R25848:25858 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_2 var
R25901:25911 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R25901:25911 num_capteur <> Imp_capteur.Proof_of_all_field_different_1_2.abst_capt_3 var
R25925:25957 num_capteur Imp_capteur for_zenon_all_field_different_1_2 thm
R25925:25957 num_capteur Imp_capteur for_zenon_all_field_different_1_2 thm
R25987:26018 num_capteur Imp_capteur.Proof_of_all_field_different_1_2 <> sec
prf 26034:26056 Imp_capteur all_field_different_1_2
R26098:26101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26108:26111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26112:26125 basics <> bool__t def
R26102:26107 num_capteur <> _p_P_T var
R26092:26097 num_capteur <> _p_P_T var
R26144:26147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26148:26153 num_capteur <> _p_P_T var
R26138:26143 num_capteur <> _p_P_T var
R26173:26178 num_capteur <> _p_P_T var
R26228:26233 num_capteur <> _p_P_T var
R26286:26297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26298:26304 Coq.Bool.Bool <> Is_true def
R26308:26317 num_capteur <> _p_P_equal var
R26321:26321 num_capteur <> y var
R26319:26319 num_capteur <> x var
R26242:26248 Coq.Bool.Bool <> Is_true def
R26252:26261 num_capteur <> _p_P_equal var
R26275:26280 num_capteur <> _p_P_s var
R26282:26282 num_capteur <> y var
R26264:26269 num_capteur <> _p_P_s var
R26271:26271 num_capteur <> x var
R26375:26380 num_capteur <> _p_P_T var
R26383:26383 Coq.Init.Logic <> :type_scope:'~'_x not
R26384:26390 Coq.Bool.Bool <> Is_true def
R26394:26403 num_capteur <> _p_P_equal var
R26416:26421 num_capteur <> _p_P_s var
R26423:26423 num_capteur <> x var
R26405:26413 num_capteur <> _p_P_zero var
R26444:26449 num_capteur <> _p_P_T var
R26468:26473 num_capteur Imp_capteur capt_1 def
R26482:26490 num_capteur <> _p_P_zero var
R26475:26480 num_capteur <> _p_P_T var
R26512:26516 num_capteur Imp_capteur equal def
R26525:26534 num_capteur <> _p_P_equal var
R26518:26523 num_capteur <> _p_P_T var
R26553:26558 num_capteur Imp_capteur capt_2 def
R26578:26588 num_capteur <> abst_capt_1 var
R26571:26576 num_capteur <> _p_P_s var
R26560:26565 num_capteur <> _p_P_T var
R26607:26612 num_capteur Imp_capteur capt_3 def
R26628:26638 num_capteur <> abst_capt_2 var
R26621:26626 num_capteur <> _p_P_s var
R26614:26619 num_capteur <> _p_P_T var
R26646:26646 Coq.Init.Logic <> :type_scope:'~'_x not
R26647:26653 Coq.Bool.Bool <> Is_true def
R26658:26667 num_capteur <> abst_equal var
R26681:26691 num_capteur <> abst_capt_3 var
R26669:26679 num_capteur <> abst_capt_2 var
R26705:26748 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_1_2 thm
R26705:26748 num_capteur Imp_capteur for_zenon_abstracted_all_field_different_1_2 thm
prf 26825:26833 Imp_capteur all_value
R26881:26886 num_capteur <> abst_T var
R26913:26916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26923:26926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26927:26940 basics <> bool__t def
R26917:26922 num_capteur <> abst_T var
R26907:26912 num_capteur <> abst_T var
R26958:26963 num_capteur <> abst_T var
R26985:26990 num_capteur <> abst_T var
R27009:27014 num_capteur <> abst_T var
R27059:27070 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27023:27029 Coq.Bool.Bool <> Is_true def
R27033:27042 num_capteur <> abst_equal var
R27046:27056 num_capteur <> abst_capt_1 var
R27044:27044 num_capteur <> e var
R27107:27120 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27071:27077 Coq.Bool.Bool <> Is_true def
R27081:27090 num_capteur <> abst_equal var
R27094:27104 num_capteur <> abst_capt_2 var
R27092:27092 num_capteur <> e var
R27121:27127 Coq.Bool.Bool <> Is_true def
R27131:27140 num_capteur <> abst_equal var
R27144:27154 num_capteur <> abst_capt_3 var
R27142:27142 num_capteur <> e var
R27204:27227 coq_builtins <> magic_prove prfax
R27204:27227 coq_builtins <> magic_prove prfax
def 27250:27254 Imp_capteur print
R27301:27306 num_capteur <> abst_T var
R27333:27336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27343:27346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27347:27360 basics <> bool__t def
R27337:27342 num_capteur <> abst_T var
R27327:27332 num_capteur <> abst_T var
R27378:27383 num_capteur <> abst_T var
R27405:27410 num_capteur <> abst_T var
R27418:27423 num_capteur <> abst_T var
R27428:27443 basics <> string__t def
R27457:27466 num_capteur <> abst_equal var
R27470:27480 num_capteur <> abst_capt_1 var
R27468:27468 num_capteur <> x var
R27520:27529 num_capteur <> abst_equal var
R27533:27543 num_capteur <> abst_capt_2 var
R27531:27531 num_capteur <> x var
R27590:27599 num_capteur <> abst_equal var
R27603:27613 num_capteur <> abst_capt_3 var
R27601:27601 num_capteur <> x var
def 27774:27790 Imp_capteur collection_create
R27984:27989 num_capteur <> _p_P_T var
R28066:28071 num_capteur Imp_capteur capt_1 def
R28080:28088 num_capteur <> _p_P_zero var
R28073:28078 num_capteur <> _p_P_T var
R28164:28168 num_capteur Imp_capteur equal def
R28177:28186 num_capteur <> _p_P_equal var
R28170:28175 num_capteur <> _p_P_T var
R28258:28282 basics Basic_object parse def
R28284:28292 num_capteur <> local_rep var
R28369:28374 num_capteur Imp_capteur capt_2 def
R28390:28401 num_capteur <> local_capt_1 var
R28383:28388 num_capteur <> _p_P_s var
R28376:28381 num_capteur <> _p_P_T var
R28479:28485 num_capteur Imp_capteur element def
R28504:28515 num_capteur <> local_capt_1 var
R28494:28502 num_capteur <> local_rep var
R28487:28492 num_capteur <> _p_P_T var
R28583:28603 sets Setoid different def
R28615:28625 num_capteur <> local_equal var
R28605:28613 num_capteur <> local_rep var
R28711:28725 num_capteur Imp_capteur equal_reflexive thm
R28751:28770 num_capteur <> _p_P_equal_reflexive var
R28734:28743 num_capteur <> _p_P_equal var
R28727:28732 num_capteur <> _p_P_T var
R28856:28870 num_capteur Imp_capteur equal_symmetric thm
R28896:28915 num_capteur <> _p_P_equal_symmetric var
R28879:28888 num_capteur <> _p_P_equal var
R28872:28877 num_capteur <> _p_P_T var
R29002:29017 num_capteur Imp_capteur equal_transitive thm
R29043:29063 num_capteur <> _p_P_equal_transitive var
R29026:29035 num_capteur <> _p_P_equal var
R29019:29024 num_capteur <> _p_P_T var
R29157:29179 num_capteur Imp_capteur all_field_different_0_1 thm
R29222:29247 num_capteur <> _p_P_zero_is_not_successor var
R29212:29220 num_capteur <> _p_P_zero var
R29205:29210 num_capteur <> _p_P_s var
R29194:29203 num_capteur <> _p_P_equal var
R29181:29186 num_capteur <> _p_P_T var
R29324:29329 num_capteur Imp_capteur capt_3 def
R29345:29356 num_capteur <> local_capt_2 var
R29338:29343 num_capteur <> _p_P_s var
R29331:29336 num_capteur <> _p_P_T var
R29436:29468 sets Setoid same_is_not_different thm
R29486:29496 num_capteur <> local_equal var
R29476:29484 num_capteur <> local_rep var
R29590:29612 num_capteur Imp_capteur all_field_different_0_2 thm
R29682:29693 num_capteur <> local_capt_2 var
R29655:29680 num_capteur <> _p_P_zero_is_not_successor var
R29645:29653 num_capteur <> _p_P_zero var
R29638:29643 num_capteur <> _p_P_s var
R29627:29636 num_capteur <> _p_P_equal var
R29614:29619 num_capteur <> _p_P_T var
R29787:29809 num_capteur Imp_capteur all_field_different_1_2 thm
R29884:29909 num_capteur <> _p_P_zero_is_not_successor var
R29852:29876 num_capteur <> _p_P_succ_is_an_injection var
R29842:29850 num_capteur <> _p_P_zero var
R29835:29840 num_capteur <> _p_P_s var
R29824:29833 num_capteur <> _p_P_equal var
R29811:29816 num_capteur <> _p_P_T var
R29989:29997 num_capteur Imp_capteur all_value thm
R30060:30071 num_capteur <> local_capt_3 var
R30047:30058 num_capteur <> local_capt_2 var
R30035:30045 num_capteur <> local_equal var
R30016:30027 num_capteur <> local_capt_1 var
R30006:30014 num_capteur <> local_rep var
R29999:30004 num_capteur <> _p_P_T var
R30147:30151 num_capteur Imp_capteur print def
R30214:30225 num_capteur <> local_capt_3 var
R30201:30212 num_capteur <> local_capt_2 var
R30183:30193 num_capteur <> local_equal var
R30170:30181 num_capteur <> local_capt_1 var
R30160:30168 num_capteur <> local_rep var
R30153:30158 num_capteur <> _p_P_T var
R30305:30337 sets Setoid different_is_complete thm
R30462:30488 num_capteur <> local_same_is_not_different var
R30433:30454 num_capteur <> local_equal_transitive var
R30411:30431 num_capteur <> local_equal_symmetric var
R30383:30403 num_capteur <> local_equal_reflexive var
R30367:30381 num_capteur <> local_different var
R30355:30365 num_capteur <> local_equal var
R30345:30353 num_capteur <> local_rep var
R30577:30612 sets Setoid different_is_irreflexive thm
R30680:30706 num_capteur <> local_same_is_not_different var
R30658:30678 num_capteur <> local_equal_reflexive var
R30642:30656 num_capteur <> local_different var
R30624:30634 num_capteur <> local_equal var
R30614:30622 num_capteur <> local_rep var
R30787:30820 sets Setoid different_is_symmetric thm
R30894:30920 num_capteur <> local_same_is_not_different var
R30866:30886 num_capteur <> local_equal_symmetric var
R30850:30864 num_capteur <> local_different var
R30838:30848 num_capteur <> local_equal var
R30828:30836 num_capteur <> local_rep var
R30929:30937 num_capteur Imp_capteur mk_record constr
R31353:31380 num_capteur <> local_different_is_symmetric var
R31322:31351 num_capteur <> local_different_is_irreflexive var
R31290:31316 num_capteur <> local_different_is_complete var
R31278:31288 num_capteur <> local_print var
R31262:31276 num_capteur <> local_all_value var
R31228:31256 num_capteur <> local_all_field_different_1_2 var
R31198:31226 num_capteur <> local_all_field_different_0_2 var
R31166:31192 num_capteur <> local_same_is_not_different var
R31153:31164 num_capteur <> local_capt_3 var
R31123:31151 num_capteur <> local_all_field_different_0_1 var
R31096:31117 num_capteur <> local_equal_transitive var
R31074:31094 num_capteur <> local_equal_symmetric var
R31048:31068 num_capteur <> local_equal_reflexive var
R31032:31046 num_capteur <> local_different var
R31018:31030 num_capteur <> local_element var
R31005:31016 num_capteur <> local_capt_2 var
R30989:30999 num_capteur <> local_parse var
R30977:30987 num_capteur <> local_equal var
R30964:30975 num_capteur <> local_capt_1 var
R30954:30962 num_capteur <> local_rep var
R30940:30945 num_capteur <> _p_P_T var
R31390:31400 num_capteur Imp_capteur <> mod
mod 31411:31422 <> Coll_capteur
var 31431:31450 Coll_capteur effective_collection
R31455:31483 num_capteur Imp_capteur collection_create def
R31738:31775 peano Coll_peano zero_is_not_successor def
R31696:31732 peano Coll_peano succ_is_an_injection def
R31658:31690 peano Coll_peano equal_transitive def
R31625:31656 peano Coll_peano equal_symmetric def
R31588:31619 peano Coll_peano equal_reflexive def
R31566:31586 peano Coll_peano zero def
R31543:31560 peano Coll_peano s def
R31520:31541 peano Coll_peano equal def
R31489:31518 peano Coll_peano me_as_carrier def
def 31846:31858 Coll_capteur me_as_carrier
R31863:31892 peano Coll_peano me_as_carrier def
def 31908:31913 Coll_capteur capt_1
R31940:31960 num_capteur Imp_capteur rf_capt_1 proj
R31918:31937 num_capteur Coll_capteur effective_collection def
def 31979:31983 Coll_capteur equal
R32010:32029 num_capteur Imp_capteur rf_equal proj
R31988:32007 num_capteur Coll_capteur effective_collection def
def 32048:32052 Coll_capteur parse
R32079:32098 num_capteur Imp_capteur rf_parse proj
R32057:32076 num_capteur Coll_capteur effective_collection def
def 32117:32122 Coll_capteur capt_2
R32149:32169 num_capteur Imp_capteur rf_capt_2 proj
R32127:32146 num_capteur Coll_capteur effective_collection def
def 32188:32194 Coll_capteur element
R32221:32242 num_capteur Imp_capteur rf_element proj
R32199:32218 num_capteur Coll_capteur effective_collection def
def 32261:32269 Coll_capteur different
R32296:32319 num_capteur Imp_capteur rf_different proj
R32274:32293 num_capteur Coll_capteur effective_collection def
def 32338:32352 Coll_capteur equal_reflexive
R32383:32412 num_capteur Imp_capteur rf_equal_reflexive proj
R32361:32380 num_capteur Coll_capteur effective_collection def
def 32431:32445 Coll_capteur equal_symmetric
R32476:32505 num_capteur Imp_capteur rf_equal_symmetric proj
R32454:32473 num_capteur Coll_capteur effective_collection def
def 32524:32539 Coll_capteur equal_transitive
R32570:32600 num_capteur Imp_capteur rf_equal_transitive proj
R32548:32567 num_capteur Coll_capteur effective_collection def
def 32619:32641 Coll_capteur all_field_different_0_1
R32672:32709 num_capteur Imp_capteur rf_all_field_different_0_1 proj
R32650:32669 num_capteur Coll_capteur effective_collection def
def 32728:32733 Coll_capteur capt_3
R32760:32780 num_capteur Imp_capteur rf_capt_3 proj
R32738:32757 num_capteur Coll_capteur effective_collection def
def 32799:32819 Coll_capteur same_is_not_different
R32850:32885 num_capteur Imp_capteur rf_same_is_not_different proj
R32828:32847 num_capteur Coll_capteur effective_collection def
def 32904:32926 Coll_capteur all_field_different_0_2
R32957:32994 num_capteur Imp_capteur rf_all_field_different_0_2 proj
R32935:32954 num_capteur Coll_capteur effective_collection def
def 33013:33035 Coll_capteur all_field_different_1_2
R33066:33103 num_capteur Imp_capteur rf_all_field_different_1_2 proj
R33044:33063 num_capteur Coll_capteur effective_collection def
def 33122:33130 Coll_capteur all_value
R33157:33180 num_capteur Imp_capteur rf_all_value proj
R33135:33154 num_capteur Coll_capteur effective_collection def
def 33199:33203 Coll_capteur print
R33230:33249 num_capteur Imp_capteur rf_print proj
R33208:33227 num_capteur Coll_capteur effective_collection def
def 33268:33288 Coll_capteur different_is_complete
R33319:33354 num_capteur Imp_capteur rf_different_is_complete proj
R33297:33316 num_capteur Coll_capteur effective_collection def
def 33373:33396 Coll_capteur different_is_irreflexive
R33427:33465 num_capteur Imp_capteur rf_different_is_irreflexive proj
R33405:33424 num_capteur Coll_capteur effective_collection def
def 33484:33505 Coll_capteur different_is_symmetric
R33536:33572 num_capteur Imp_capteur rf_different_is_symmetric proj
R33514:33533 num_capteur Coll_capteur effective_collection def
R33585:33596 num_capteur Coll_capteur <> mod
