"basic_type.ml" 31 992 998 "basic_type.ml" 31 992 1005
type(
  int
)
ident(
  def element "basic_type.ml" 32 1010 1012 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 31 992 1008 "basic_type.ml" 31 992 1009
type(
  int
)
"basic_type.ml" 32 1010 1016 "basic_type.ml" 32 1010 1021
type(
  'abst_T -> 'abst_T -> bool
)
ident(
  def equal "basic_type.ml" 33 1081 1083 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 32 1010 1023 "basic_type.ml" 32 1010 1024
type(
  'abst_T
)
ident(
  def x "basic_type.ml" 32 1010 1036 "basic_type.ml" 32 1010 1080
)
"basic_type.ml" 32 1010 1037 "basic_type.ml" 32 1010 1038
type(
  'abst_T
)
ident(
  def y "basic_type.ml" 32 1010 1052 "basic_type.ml" 32 1010 1080
)
"basic_type.ml" 32 1010 1053 "basic_type.ml" 32 1010 1075
type(
  'abst_T -> 'abst_T -> bool
)
ident(
  ext_ref Basics.syntactic_equal
)
"basic_type.ml" 32 1010 1076 "basic_type.ml" 32 1010 1077
type(
  'abst_T
)
ident(
  int_ref x "basic_type.ml" 32 1010 1023 "basic_type.ml" 32 1010 1024
)
"basic_type.ml" 32 1010 1078 "basic_type.ml" 32 1010 1079
type(
  'abst_T
)
ident(
  int_ref y "basic_type.ml" 32 1010 1037 "basic_type.ml" 32 1010 1038
)
"basic_type.ml" 32 1010 1052 "basic_type.ml" 32 1010 1080
call(
  tail
)
type(
  bool
)
"basic_type.ml" 33 1081 1087 "basic_type.ml" 33 1081 1090
type(
  int -> int -> bool
)
ident(
  def geq "basic_type.ml" 34 1150 1152 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 33 1081 1092 "basic_type.ml" 33 1081 1094
type(
  int
)
ident(
  def n1 "basic_type.ml" 33 1081 1106 "basic_type.ml" 33 1081 1149
)
"basic_type.ml" 33 1081 1107 "basic_type.ml" 33 1081 1109
type(
  int
)
ident(
  def n2 "basic_type.ml" 33 1081 1123 "basic_type.ml" 33 1081 1149
)
"basic_type.ml" 33 1081 1124 "basic_type.ml" 33 1081 1142
type(
  int -> int -> bool
)
ident(
  ext_ref Basics._gt__equal_
)
"basic_type.ml" 33 1081 1143 "basic_type.ml" 33 1081 1145
type(
  int
)
ident(
  int_ref n1 "basic_type.ml" 33 1081 1092 "basic_type.ml" 33 1081 1094
)
"basic_type.ml" 33 1081 1146 "basic_type.ml" 33 1081 1148
type(
  int
)
ident(
  int_ref n2 "basic_type.ml" 33 1081 1107 "basic_type.ml" 33 1081 1109
)
"basic_type.ml" 33 1081 1123 "basic_type.ml" 33 1081 1149
call(
  tail
)
type(
  bool
)
"basic_type.ml" 34 1150 1156 "basic_type.ml" 34 1150 1162
type(
  Basics._focty_int -> Basics._focty_int
)
ident(
  def of_int "basic_type.ml" 35 1191 1193 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 34 1150 1164 "basic_type.ml" 34 1150 1165
type(
  Basics._focty_int
)
ident(
  def n "basic_type.ml" 34 1150 1189 "basic_type.ml" 34 1150 1190
)
"basic_type.ml" 34 1150 1189 "basic_type.ml" 34 1150 1190
type(
  Basics._focty_int
)
ident(
  int_ref n "basic_type.ml" 34 1150 1164 "basic_type.ml" 34 1150 1165
)
"basic_type.ml" 35 1191 1197 "basic_type.ml" 35 1191 1202
type(
  Basics._focty_string -> int
)
ident(
  def parse "basic_type.ml" 36 1257 1259 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 35 1191 1204 "basic_type.ml" 35 1191 1205
type(
  Basics._focty_string
)
ident(
  def x "basic_type.ml" 35 1191 1232 "basic_type.ml" 35 1191 1256
)
"basic_type.ml" 35 1191 1233 "basic_type.ml" 35 1191 1253
type(
  Basics._focty_string -> int
)
ident(
  ext_ref Basics.int_of_string
)
"basic_type.ml" 35 1191 1254 "basic_type.ml" 35 1191 1255
type(
  Basics._focty_string
)
ident(
  int_ref x "basic_type.ml" 35 1191 1204 "basic_type.ml" 35 1191 1205
)
"basic_type.ml" 35 1191 1232 "basic_type.ml" 35 1191 1256
call(
  tail
)
type(
  int
)
"basic_type.ml" 36 1257 1263 "basic_type.ml" 36 1257 1267
type(
  int -> int -> int
)
ident(
  def plus "basic_type.ml" 37 1322 1324 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 36 1257 1269 "basic_type.ml" 36 1257 1271
type(
  int
)
ident(
  def n1 "basic_type.ml" 36 1257 1283 "basic_type.ml" 36 1257 1321
)
"basic_type.ml" 36 1257 1284 "basic_type.ml" 36 1257 1286
type(
  int
)
ident(
  def n2 "basic_type.ml" 36 1257 1300 "basic_type.ml" 36 1257 1321
)
"basic_type.ml" 36 1257 1301 "basic_type.ml" 36 1257 1314
type(
  int -> int -> int
)
ident(
  ext_ref Basics._plus_
)
"basic_type.ml" 36 1257 1315 "basic_type.ml" 36 1257 1317
type(
  int
)
ident(
  int_ref n1 "basic_type.ml" 36 1257 1269 "basic_type.ml" 36 1257 1271
)
"basic_type.ml" 36 1257 1318 "basic_type.ml" 36 1257 1320
type(
  int
)
ident(
  int_ref n2 "basic_type.ml" 36 1257 1284 "basic_type.ml" 36 1257 1286
)
"basic_type.ml" 36 1257 1300 "basic_type.ml" 36 1257 1321
call(
  tail
)
type(
  int
)
"basic_type.ml" 37 1322 1328 "basic_type.ml" 37 1322 1331
type(
  int -> bool
)
ident(
  def pos "basic_type.ml" 38 1366 1368 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 37 1322 1333 "basic_type.ml" 37 1322 1334
type(
  int
)
ident(
  def n "basic_type.ml" 37 1322 1348 "basic_type.ml" 37 1322 1365
)
"basic_type.ml" 37 1322 1349 "basic_type.ml" 37 1322 1360
type(
  int -> int -> bool
)
ident(
  ext_ref Basics._gt_
)
"basic_type.ml" 37 1322 1361 "basic_type.ml" 37 1322 1362
type(
  int
)
ident(
  int_ref n "basic_type.ml" 37 1322 1333 "basic_type.ml" 37 1322 1334
)
"basic_type.ml" 37 1322 1363 "basic_type.ml" 37 1322 1364
type(
  int
)
"basic_type.ml" 37 1322 1348 "basic_type.ml" 37 1322 1365
call(
  tail
)
type(
  bool
)
"basic_type.ml" 38 1366 1372 "basic_type.ml" 38 1366 1377
type(
  int -> string
)
ident(
  def print "basic_type.ml" 40 1485 1487 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 38 1366 1379 "basic_type.ml" 38 1366 1380
type(
  int
)
ident(
  def x "basic_type.ml" 38 1366 1394 "basic_type.ml" 38 1366 1418
)
"basic_type.ml" 38 1366 1395 "basic_type.ml" 38 1366 1415
type(
  int -> string
)
ident(
  ext_ref Basics.string_of_int
)
"basic_type.ml" 38 1366 1416 "basic_type.ml" 38 1366 1417
type(
  int
)
ident(
  int_ref x "basic_type.ml" 38 1366 1379 "basic_type.ml" 38 1366 1380
)
"basic_type.ml" 38 1366 1394 "basic_type.ml" 38 1366 1418
call(
  tail
)
type(
  string
)
"basic_type.ml" 40 1485 1491 "basic_type.ml" 40 1485 1508
type(
  unit -> Basics._focty_int me_as_species
)
ident(
  def collection_create "basic_type.ml" 68 2500 2508 "basic_type.ml" 70 2514 2519
)
"basic_type.ml" 40 1485 1509 "basic_type.ml" 40 1485 1511
type(
  unit
)
"basic_type.ml" 42 1559 1567 "basic_type.ml" 42 1559 1580
type(
  int
)
ident(
  def local_element "basic_type.ml" 44 1639 1643 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 42 1559 1583 "basic_type.ml" 42 1559 1590
type(
  int
)
ident(
  int_ref element "basic_type.ml" 31 992 998 "basic_type.ml" 31 992 1005
)
"basic_type.ml" 44 1639 1647 "basic_type.ml" 44 1639 1658
type(
  'a -> 'a -> bool
)
ident(
  def local_equal "basic_type.ml" 46 1715 1719 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 44 1639 1661 "basic_type.ml" 44 1639 1666
type(
  'a -> 'a -> bool
)
ident(
  int_ref equal "basic_type.ml" 32 1010 1016 "basic_type.ml" 32 1010 1021
)
"basic_type.ml" 46 1715 1723 "basic_type.ml" 46 1715 1732
type(
  int -> int -> bool
)
ident(
  def local_geq "basic_type.ml" 48 1787 1791 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 46 1715 1735 "basic_type.ml" 46 1715 1738
type(
  int -> int -> bool
)
ident(
  int_ref geq "basic_type.ml" 33 1081 1087 "basic_type.ml" 33 1081 1090
)
"basic_type.ml" 48 1787 1795 "basic_type.ml" 48 1787 1807
type(
  Basics._focty_int -> Basics._focty_int
)
ident(
  def local_of_int "basic_type.ml" 50 1865 1869 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 48 1787 1810 "basic_type.ml" 48 1787 1816
type(
  Basics._focty_int -> Basics._focty_int
)
ident(
  int_ref of_int "basic_type.ml" 34 1150 1156 "basic_type.ml" 34 1150 1162
)
"basic_type.ml" 50 1865 1873 "basic_type.ml" 50 1865 1884
type(
  Basics._focty_string -> int
)
ident(
  def local_parse "basic_type.ml" 52 1941 1945 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 50 1865 1887 "basic_type.ml" 50 1865 1892
type(
  Basics._focty_string -> int
)
ident(
  int_ref parse "basic_type.ml" 35 1191 1197 "basic_type.ml" 35 1191 1202
)
"basic_type.ml" 52 1941 1949 "basic_type.ml" 52 1941 1959
type(
  int -> int -> int
)
ident(
  def local_plus "basic_type.ml" 54 2015 2019 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 52 1941 1962 "basic_type.ml" 52 1941 1966
type(
  int -> int -> int
)
ident(
  int_ref plus "basic_type.ml" 36 1257 1263 "basic_type.ml" 36 1257 1267
)
"basic_type.ml" 54 2015 2023 "basic_type.ml" 54 2015 2032
type(
  int -> bool
)
ident(
  def local_pos "basic_type.ml" 56 2087 2091 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 54 2015 2035 "basic_type.ml" 54 2015 2038
type(
  int -> bool
)
ident(
  int_ref pos "basic_type.ml" 37 1322 1328 "basic_type.ml" 37 1322 1331
)
"basic_type.ml" 56 2087 2095 "basic_type.ml" 56 2087 2106
type(
  int -> string
)
ident(
  def local_print "basic_type.ml" 58 2154 2158 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 56 2087 2109 "basic_type.ml" 56 2087 2114
type(
  int -> string
)
ident(
  int_ref print "basic_type.ml" 38 1366 1372 "basic_type.ml" 38 1366 1377
)
"basic_type.ml" 58 2154 2162 "basic_type.ml" 58 2154 2177
type(
  Basics._focty_int -> Basics._focty_int -> bool
)
ident(
  def local_different "basic_type.ml" 59 2217 2221 "basic_type.ml" 68 2500 2508
)
"basic_type.ml" 58 2154 2180 "basic_type.ml" 58 2154 2201
type(
  (Basics._focty_int -> Basics._focty_int -> bool) ->
  Basics._focty_int -> Basics._focty_int -> bool
)
ident(
  ext_ref Sets.Setoid.different
)
"basic_type.ml" 58 2154 2202 "basic_type.ml" 58 2154 2213
type(
  Basics._focty_int -> Basics._focty_int -> bool
)
ident(
  int_ref local_equal "basic_type.ml" 44 1639 1647 "basic_type.ml" 44 1639 1658
)
"basic_type.ml" 58 2154 2180 "basic_type.ml" 58 2154 2213
call(
  stack
)
type(
  Basics._focty_int -> Basics._focty_int -> bool
)
"basic_type.ml" 59 2217 2236 "basic_type.ml" 59 2217 2249
type(
  Basics._focty_int
)
ident(
  int_ref local_element "basic_type.ml" 42 1559 1567 "basic_type.ml" 42 1559 1580
)
"basic_type.ml" 60 2252 2269 "basic_type.ml" 60 2252 2280
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  int_ref local_equal "basic_type.ml" 44 1639 1647 "basic_type.ml" 44 1639 1658
)
"basic_type.ml" 61 2283 2298 "basic_type.ml" 61 2283 2307
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  int_ref local_geq "basic_type.ml" 46 1715 1723 "basic_type.ml" 46 1715 1732
)
"basic_type.ml" 62 2310 2328 "basic_type.ml" 62 2310 2340
type(
  Basics._focty_int -> Basics._focty_int
)
ident(
  int_ref local_of_int "basic_type.ml" 48 1787 1795 "basic_type.ml" 48 1787 1807
)
"basic_type.ml" 63 2343 2360 "basic_type.ml" 63 2343 2371
type(
  Basics._focty_string -> Basics._focty_int
)
ident(
  int_ref local_parse "basic_type.ml" 50 1865 1873 "basic_type.ml" 50 1865 1884
)
"basic_type.ml" 64 2374 2390 "basic_type.ml" 64 2374 2400
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_int
)
ident(
  int_ref local_plus "basic_type.ml" 52 1941 1949 "basic_type.ml" 52 1941 1959
)
"basic_type.ml" 65 2403 2418 "basic_type.ml" 65 2403 2427
type(
  Basics._focty_int -> Basics._focty_bool
)
ident(
  int_ref local_pos "basic_type.ml" 54 2015 2023 "basic_type.ml" 54 2015 2032
)
"basic_type.ml" 66 2430 2447 "basic_type.ml" 66 2430 2458
type(
  Basics._focty_int -> Basics._focty_string
)
ident(
  int_ref local_print "basic_type.ml" 56 2087 2095 "basic_type.ml" 56 2087 2106
)
"basic_type.ml" 67 2461 2482 "basic_type.ml" 67 2461 2497
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  int_ref local_different "basic_type.ml" 58 2154 2162 "basic_type.ml" 58 2154 2177
)
"basic_type.ml" 59 2217 2221 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 58 2154 2158 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 56 2087 2091 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 54 2015 2019 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 52 1941 1945 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 50 1865 1869 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 48 1787 1791 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 46 1715 1719 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 44 1639 1643 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 42 1559 1563 "basic_type.ml" 68 2500 2508
type(
  Basics._focty_int me_as_species
)
"basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  def effective_collection "basic_type.ml" 100 3675 3677 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 99 3640 3644 "basic_type.ml" 99 3640 3671
type(
  unit -> Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref Int_value.collection_create "basic_type.ml" 40 1485 1491 "basic_type.ml" 40 1485 1508
)
"basic_type.ml" 99 3640 3672 "basic_type.ml" 99 3640 3674
type(
  unit
)
"basic_type.ml" 99 3640 3644 "basic_type.ml" 99 3640 3674
call(
  stack
)
type(
  Basics._focty_int Int_value.me_as_species
)
"basic_type.ml" 100 3675 3681 "basic_type.ml" 100 3675 3688
type(
  Basics._focty_int
)
ident(
  def element "basic_type.ml" 101 3733 3735 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 100 3675 3691 "basic_type.ml" 100 3675 3711
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 100 3675 3691 "basic_type.ml" 100 3675 3732
type(
  Basics._focty_int
)
"basic_type.ml" 101 3733 3739 "basic_type.ml" 101 3733 3744
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  def equal "basic_type.ml" 102 3787 3789 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 101 3733 3747 "basic_type.ml" 101 3733 3767
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 101 3733 3747 "basic_type.ml" 101 3733 3786
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
"basic_type.ml" 102 3787 3793 "basic_type.ml" 102 3787 3796
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  def geq "basic_type.ml" 103 3837 3839 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 102 3787 3799 "basic_type.ml" 102 3787 3819
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 102 3787 3799 "basic_type.ml" 102 3787 3836
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
"basic_type.ml" 103 3837 3843 "basic_type.ml" 103 3837 3849
type(
  Basics._focty_int -> Basics._focty_int
)
ident(
  def of_int "basic_type.ml" 104 3893 3895 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 103 3837 3852 "basic_type.ml" 103 3837 3872
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 103 3837 3852 "basic_type.ml" 103 3837 3892
type(
  Basics._focty_int -> Basics._focty_int
)
"basic_type.ml" 104 3893 3899 "basic_type.ml" 104 3893 3904
type(
  Basics._focty_string -> Basics._focty_int
)
ident(
  def parse "basic_type.ml" 105 3947 3949 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 104 3893 3907 "basic_type.ml" 104 3893 3927
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 104 3893 3907 "basic_type.ml" 104 3893 3946
type(
  Basics._focty_string -> Basics._focty_int
)
"basic_type.ml" 105 3947 3953 "basic_type.ml" 105 3947 3957
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_int
)
ident(
  def plus "basic_type.ml" 106 3999 4001 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 105 3947 3960 "basic_type.ml" 105 3947 3980
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 105 3947 3960 "basic_type.ml" 105 3947 3998
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_int
)
"basic_type.ml" 106 3999 4005 "basic_type.ml" 106 3999 4008
type(
  Basics._focty_int -> Basics._focty_bool
)
ident(
  def pos "basic_type.ml" 107 4049 4051 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 106 3999 4011 "basic_type.ml" 106 3999 4031
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 106 3999 4011 "basic_type.ml" 106 3999 4048
type(
  Basics._focty_int -> Basics._focty_bool
)
"basic_type.ml" 107 4049 4055 "basic_type.ml" 107 4049 4060
type(
  Basics._focty_int -> Basics._focty_string
)
ident(
  def print "basic_type.ml" 108 4103 4105 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 107 4049 4063 "basic_type.ml" 107 4049 4083
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 107 4049 4063 "basic_type.ml" 107 4049 4102
type(
  Basics._focty_int -> Basics._focty_string
)
"basic_type.ml" 108 4103 4109 "basic_type.ml" 108 4103 4118
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
ident(
  def different "basic_type.ml" 108 4103 4164 "basic_type.ml" 109 4165 4170
)
"basic_type.ml" 108 4103 4121 "basic_type.ml" 108 4103 4141
type(
  Basics._focty_int Int_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 98 3611 3617 "basic_type.ml" 98 3611 3637
)
"basic_type.ml" 108 4103 4121 "basic_type.ml" 108 4103 4164
type(
  Basics._focty_int -> Basics._focty_int -> Basics._focty_bool
)
"basic_type.ml" 127 4803 4809 "basic_type.ml" 127 4803 4816
type(
  bool
)
ident(
  def element "basic_type.ml" 128 4824 4826 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 127 4803 4819 "basic_type.ml" 127 4803 4823
type(
  bool
)
"basic_type.ml" 128 4824 4830 "basic_type.ml" 128 4824 4835
type(
  'abst_T -> 'abst_T -> bool
)
ident(
  def equal "basic_type.ml" 129 4895 4897 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 128 4824 4837 "basic_type.ml" 128 4824 4838
type(
  'abst_T
)
ident(
  def x "basic_type.ml" 128 4824 4850 "basic_type.ml" 128 4824 4894
)
"basic_type.ml" 128 4824 4851 "basic_type.ml" 128 4824 4852
type(
  'abst_T
)
ident(
  def y "basic_type.ml" 128 4824 4866 "basic_type.ml" 128 4824 4894
)
"basic_type.ml" 128 4824 4867 "basic_type.ml" 128 4824 4889
type(
  'abst_T -> 'abst_T -> bool
)
ident(
  ext_ref Basics.syntactic_equal
)
"basic_type.ml" 128 4824 4890 "basic_type.ml" 128 4824 4891
type(
  'abst_T
)
ident(
  int_ref x "basic_type.ml" 128 4824 4837 "basic_type.ml" 128 4824 4838
)
"basic_type.ml" 128 4824 4892 "basic_type.ml" 128 4824 4893
type(
  'abst_T
)
ident(
  int_ref y "basic_type.ml" 128 4824 4851 "basic_type.ml" 128 4824 4852
)
"basic_type.ml" 128 4824 4866 "basic_type.ml" 128 4824 4894
call(
  tail
)
type(
  bool
)
"basic_type.ml" 129 4895 4901 "basic_type.ml" 129 4895 4908
type(
  Basics._focty_bool -> Basics._focty_bool
)
ident(
  def of_bool "basic_type.ml" 130 4938 4940 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 129 4895 4910 "basic_type.ml" 129 4895 4911
type(
  Basics._focty_bool
)
ident(
  def b "basic_type.ml" 129 4895 4936 "basic_type.ml" 129 4895 4937
)
"basic_type.ml" 129 4895 4936 "basic_type.ml" 129 4895 4937
type(
  Basics._focty_bool
)
ident(
  int_ref b "basic_type.ml" 129 4895 4910 "basic_type.ml" 129 4895 4911
)
"basic_type.ml" 130 4938 4944 "basic_type.ml" 130 4938 4949
type(
  Basics._focty_string -> bool
)
ident(
  def parse "basic_type.ml" 132 5041 5043 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 130 4938 4951 "basic_type.ml" 130 4938 4952
type(
  Basics._focty_string
)
ident(
  def x "basic_type.ml" 131 4979 4983 "basic_type.ml" 131 4979 5040
)
"basic_type.ml" 131 4979 4987 "basic_type.ml" 131 4979 5009
type(
  Basics._focty_string -> Basics._focty_string -> bool
)
ident(
  ext_ref Basics.syntactic_equal
)
"basic_type.ml" 131 4979 5010 "basic_type.ml" 131 4979 5011
type(
  Basics._focty_string
)
ident(
  int_ref x "basic_type.ml" 130 4938 4951 "basic_type.ml" 130 4938 4952
)
"basic_type.ml" 131 4979 5012 "basic_type.ml" 131 4979 5018
type(
  Basics._focty_string
)
"basic_type.ml" 131 4979 4986 "basic_type.ml" 131 4979 5019
call(
  stack
)
type(
  bool
)
"basic_type.ml" 131 4979 5025 "basic_type.ml" 131 4979 5029
type(
  bool
)
"basic_type.ml" 131 4979 5035 "basic_type.ml" 131 4979 5040
type(
  bool
)
"basic_type.ml" 131 4979 4983 "basic_type.ml" 131 4979 5040
type(
  bool
)
"basic_type.ml" 132 5041 5047 "basic_type.ml" 132 5041 5052
type(
  ('abst_T0 -> bool -> bool) -> 'abst_T0 -> string
)
ident(
  def print "basic_type.ml" 135 5199 5201 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 132 5041 5053 "basic_type.ml" 132 5041 5063
type(
  'abst_T0 -> bool -> bool
)
ident(
  def abst_equal "basic_type.ml" 132 5041 5064 "basic_type.ml" 133 5080 5131
)
"basic_type.ml" 132 5041 5065 "basic_type.ml" 132 5041 5066
type(
  'abst_T0
)
ident(
  def x "basic_type.ml" 133 5080 5084 "basic_type.ml" 133 5080 5131
)
"basic_type.ml" 133 5080 5088 "basic_type.ml" 133 5080 5098
type(
  'abst_T0 -> bool -> bool
)
ident(
  int_ref abst_equal "basic_type.ml" 132 5041 5053 "basic_type.ml" 132 5041 5063
)
"basic_type.ml" 133 5080 5099 "basic_type.ml" 133 5080 5100
type(
  'abst_T0
)
ident(
  int_ref x "basic_type.ml" 132 5041 5065 "basic_type.ml" 132 5041 5066
)
"basic_type.ml" 133 5080 5101 "basic_type.ml" 133 5080 5105
type(
  bool
)
"basic_type.ml" 133 5080 5087 "basic_type.ml" 133 5080 5106
call(
  stack
)
type(
  bool
)
"basic_type.ml" 133 5080 5112 "basic_type.ml" 133 5080 5118
type(
  string
)
"basic_type.ml" 133 5080 5124 "basic_type.ml" 133 5080 5131
type(
  string
)
"basic_type.ml" 133 5080 5084 "basic_type.ml" 133 5080 5131
type(
  string
)
"basic_type.ml" 135 5199 5205 "basic_type.ml" 135 5199 5222
type(
  unit -> Basics._focty_bool me_as_species
)
ident(
  def collection_create "basic_type.ml" 154 5934 5942 "basic_type.ml" 156 5948 5953
)
"basic_type.ml" 135 5199 5223 "basic_type.ml" 135 5199 5225
type(
  unit
)
"basic_type.ml" 137 5274 5282 "basic_type.ml" 137 5274 5295
type(
  bool
)
ident(
  def local_element "basic_type.ml" 139 5355 5359 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 137 5274 5298 "basic_type.ml" 137 5274 5305
type(
  bool
)
ident(
  int_ref element "basic_type.ml" 127 4803 4809 "basic_type.ml" 127 4803 4816
)
"basic_type.ml" 139 5355 5363 "basic_type.ml" 139 5355 5374
type(
  'a -> 'a -> bool
)
ident(
  def local_equal "basic_type.ml" 141 5432 5436 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 139 5355 5377 "basic_type.ml" 139 5355 5382
type(
  'a -> 'a -> bool
)
ident(
  int_ref equal "basic_type.ml" 128 4824 4830 "basic_type.ml" 128 4824 4835
)
"basic_type.ml" 141 5432 5440 "basic_type.ml" 141 5432 5453
type(
  Basics._focty_bool -> Basics._focty_bool
)
ident(
  def local_of_bool "basic_type.ml" 143 5513 5517 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 141 5432 5456 "basic_type.ml" 141 5432 5463
type(
  Basics._focty_bool -> Basics._focty_bool
)
ident(
  int_ref of_bool "basic_type.ml" 129 4895 4901 "basic_type.ml" 129 4895 4908
)
"basic_type.ml" 143 5513 5521 "basic_type.ml" 143 5513 5532
type(
  Basics._focty_string -> bool
)
ident(
  def local_parse "basic_type.ml" 145 5580 5584 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 143 5513 5535 "basic_type.ml" 143 5513 5540
type(
  Basics._focty_string -> bool
)
ident(
  int_ref parse "basic_type.ml" 130 4938 4944 "basic_type.ml" 130 4938 4949
)
"basic_type.ml" 145 5580 5588 "basic_type.ml" 145 5580 5603
type(
  Basics._focty_bool -> Basics._focty_bool -> bool
)
ident(
  def local_different "basic_type.ml" 147 5689 5693 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 145 5580 5606 "basic_type.ml" 145 5580 5627
type(
  (Basics._focty_bool -> Basics._focty_bool -> bool) ->
  Basics._focty_bool -> Basics._focty_bool -> bool
)
ident(
  ext_ref Sets.Setoid.different
)
"basic_type.ml" 145 5580 5628 "basic_type.ml" 145 5580 5639
type(
  Basics._focty_bool -> Basics._focty_bool -> bool
)
ident(
  int_ref local_equal "basic_type.ml" 139 5355 5363 "basic_type.ml" 139 5355 5374
)
"basic_type.ml" 145 5580 5606 "basic_type.ml" 145 5580 5639
call(
  stack
)
type(
  Basics._focty_bool -> Basics._focty_bool -> bool
)
"basic_type.ml" 147 5689 5697 "basic_type.ml" 147 5689 5708
type(
  bool -> string
)
ident(
  def local_print "basic_type.ml" 148 5732 5736 "basic_type.ml" 154 5934 5942
)
"basic_type.ml" 147 5689 5711 "basic_type.ml" 147 5689 5716
type(
  (bool -> bool -> bool) -> bool -> string
)
ident(
  int_ref print "basic_type.ml" 132 5041 5047 "basic_type.ml" 132 5041 5052
)
"basic_type.ml" 147 5689 5717 "basic_type.ml" 147 5689 5728
type(
  bool -> bool -> bool
)
ident(
  int_ref local_equal "basic_type.ml" 139 5355 5363 "basic_type.ml" 139 5355 5374
)
"basic_type.ml" 147 5689 5711 "basic_type.ml" 147 5689 5728
call(
  stack
)
type(
  bool -> string
)
"basic_type.ml" 148 5732 5751 "basic_type.ml" 148 5732 5764
type(
  Basics._focty_bool
)
ident(
  int_ref local_element "basic_type.ml" 137 5274 5282 "basic_type.ml" 137 5274 5295
)
"basic_type.ml" 149 5767 5784 "basic_type.ml" 149 5767 5795
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
ident(
  int_ref local_equal "basic_type.ml" 139 5355 5363 "basic_type.ml" 139 5355 5374
)
"basic_type.ml" 150 5798 5817 "basic_type.ml" 150 5798 5830
type(
  Basics._focty_bool -> Basics._focty_bool
)
ident(
  int_ref local_of_bool "basic_type.ml" 141 5432 5440 "basic_type.ml" 141 5432 5453
)
"basic_type.ml" 151 5833 5850 "basic_type.ml" 151 5833 5861
type(
  Basics._focty_string -> Basics._focty_bool
)
ident(
  int_ref local_parse "basic_type.ml" 143 5513 5521 "basic_type.ml" 143 5513 5532
)
"basic_type.ml" 152 5864 5885 "basic_type.ml" 152 5864 5900
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
ident(
  int_ref local_different "basic_type.ml" 145 5580 5588 "basic_type.ml" 145 5580 5603
)
"basic_type.ml" 153 5903 5920 "basic_type.ml" 153 5903 5931
type(
  Basics._focty_bool -> Basics._focty_string
)
ident(
  int_ref local_print "basic_type.ml" 147 5689 5697 "basic_type.ml" 147 5689 5708
)
"basic_type.ml" 148 5732 5736 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 147 5689 5693 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 145 5580 5584 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 143 5513 5517 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 141 5432 5436 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 139 5355 5359 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 137 5274 5278 "basic_type.ml" 154 5934 5942
type(
  Basics._focty_bool me_as_species
)
"basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  def effective_collection "basic_type.ml" 180 6818 6820 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 179 6782 6786 "basic_type.ml" 179 6782 6814
type(
  unit -> Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref Bool_value.collection_create "basic_type.ml" 135 5199 5205 "basic_type.ml" 135 5199 5222
)
"basic_type.ml" 179 6782 6815 "basic_type.ml" 179 6782 6817
type(
  unit
)
"basic_type.ml" 179 6782 6786 "basic_type.ml" 179 6782 6817
call(
  stack
)
type(
  Basics._focty_bool Bool_value.me_as_species
)
"basic_type.ml" 180 6818 6824 "basic_type.ml" 180 6818 6831
type(
  Basics._focty_bool
)
ident(
  def element "basic_type.ml" 181 6877 6879 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 180 6818 6834 "basic_type.ml" 180 6818 6854
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 180 6818 6834 "basic_type.ml" 180 6818 6876
type(
  Basics._focty_bool
)
"basic_type.ml" 181 6877 6883 "basic_type.ml" 181 6877 6888
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
ident(
  def equal "basic_type.ml" 182 6932 6934 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 181 6877 6891 "basic_type.ml" 181 6877 6911
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 181 6877 6891 "basic_type.ml" 181 6877 6931
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
"basic_type.ml" 182 6932 6938 "basic_type.ml" 182 6932 6945
type(
  Basics._focty_bool -> Basics._focty_bool
)
ident(
  def of_bool "basic_type.ml" 183 6991 6993 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 182 6932 6948 "basic_type.ml" 182 6932 6968
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 182 6932 6948 "basic_type.ml" 182 6932 6990
type(
  Basics._focty_bool -> Basics._focty_bool
)
"basic_type.ml" 183 6991 6997 "basic_type.ml" 183 6991 7002
type(
  Basics._focty_string -> Basics._focty_bool
)
ident(
  def parse "basic_type.ml" 184 7046 7048 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 183 6991 7005 "basic_type.ml" 183 6991 7025
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 183 6991 7005 "basic_type.ml" 183 6991 7045
type(
  Basics._focty_string -> Basics._focty_bool
)
"basic_type.ml" 184 7046 7052 "basic_type.ml" 184 7046 7061
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
ident(
  def different "basic_type.ml" 185 7109 7111 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 184 7046 7064 "basic_type.ml" 184 7046 7084
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 184 7046 7064 "basic_type.ml" 184 7046 7108
type(
  Basics._focty_bool -> Basics._focty_bool -> Basics._focty_bool
)
"basic_type.ml" 185 7109 7115 "basic_type.ml" 185 7109 7120
type(
  Basics._focty_bool -> Basics._focty_string
)
ident(
  def print "basic_type.ml" 185 7109 7163 "basic_type.ml" 186 7164 7169
)
"basic_type.ml" 185 7109 7123 "basic_type.ml" 185 7109 7143
type(
  Basics._focty_bool Bool_value.me_as_species
)
ident(
  int_ref effective_collection "basic_type.ml" 178 6753 6759 "basic_type.ml" 178 6753 6779
)
"basic_type.ml" 185 7109 7123 "basic_type.ml" 185 7109 7163
type(
  Basics._focty_bool -> Basics._focty_string
)
