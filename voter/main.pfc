46
This is a proof cache file generated by zvtov.
35
zvtov version 0.6.0 [32] 2009-12-03
2097
zenon -x focal -q -short -max-time 5m -x induct
zenon version 0.8.0 [a263] 2014-10-21
$Id: 8d3e74063353abcfefb6c4de625febcd0a10705c $
$Id: 0bb7ad8565ca1ee59ff5edffa7ed2b2d882c4f93 $
$Id: 8e2e984e1f30ddc3be6823ddc9ccf8f6877e7be1 $
$Id: e9a1445bc3b916bc344e12b5e1465a20b7569e8a $
$Id: 3543f411fd78f652dbf8224d7fe56e5a2c83df42 $
$Id: c483db8583b833b9d90ee5c1b90af4da4befefcf $
$Id: e962f33dc5753e15a88c3aef2170d1c552a80be7 $
$Id: 239c76ade6485f65b50499d4af616ed6394f9892 $
$Id: 960020f638c3d1f11c58184ba83acf7a567f497e $
$Id: 0d2f93a609978187340ccdc540d8b4709e3e3626 $
$Id: 0bba51e302cc27e4dcf7dd8783da6e6517e1ca2e $
$Id: 123bd672b267fe3d464ae13f9c8b98e7475c12b6 $
$Id: c891513dc0a7214f92f52e8c6f59be0c3a6bdc75 $
$Id: d674fd7fb29144c5978cd8f2421c4147c86781c8 $
$Id: 75e59fa998ba43be0fae0fc16452e5c75f01a317 $
$Id: lexcoq.mll,v 1.16 2012-04-11 18:27:26 doligez Exp $
$Id: parsecoq.mly,v 1.34 2012-04-11 18:27:26 doligez Exp $
$Id: lextptp.mll,v 1.7 2012-04-24 17:32:04 doligez Exp $
$Id: parsetptp.mly,v 1.9 2012-04-24 17:32:04 doligez Exp $
$Id: lexzen.mll,v 1.13 2012-04-11 18:27:26 doligez Exp $
$Id: parsezen.mly,v 1.16 2012-04-11 18:27:26 doligez Exp $
$Id: feacf069839a8c95e03ad2e3dbb03601a3a6607d $
$Id: 200c027cd2683053eb227e68a492c4961e2a5784 $
$Id: 9f00cd3d0af0bdd28d17b64ab051f9594255e67e $
$Id: 52308a30d82a014cf1f8efa2799df8b300a0c678 $
$Id: caed5ca44e929aef76195d58649e867d28c61885 $
$Id: 8bef787c38724f2923554c6d72f7b8d9c6f4ab2b $
$Id: 799ea945a49520c4ac8520bb6c232fbe8b53bed8 $
$Id: 8cdb504db763cd885675be46e2a542d5ec676e25 $
$Id: f21acd58472bbe06f2040f6b4df14b9bcece4be1 $
$Id: 71c3ed8bb8ff5d2866be86682d871a07f130b74f $
$Id: 4da3a63d30c663a2457badcc920df654f154b47b $
$Id: d0534a6a0c9a349b8289a70cb8f84297d3678ef6 $
$Id: f64f126ba41a6797d6643ecfd2290bdc3bcd7c08 $
$Id: 03e455e19c9d3e35e5edbd6eee048f53fb55908f $
$Id: af6004ec6e3900adb00b13aa1e67da873f9dd706 $
$Id: 81e748142c40d6382b9ceac00a08d35207607f19 $
$Id: cd90a6b20441b688fbac060141ef245237cb7320 $
$Id: 7449d985db563f705bdded478f605f03b7111602 $
$Id: 34c58a3afac083cc607b116f4d95546502fbd4b7 $
source checksum: 20927 1

term

begin
900

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_reflexive
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value_tol!consistency_rule_reflexive". *)
    Parameter value.Coll_int_imp_value_tol.consistency_rule_reflexive :
      forall a : value.Coll_int_imp_value_tol.me_as_carrier,
        Is_true ((value.Coll_int_imp_value_tol.consistency_rule a a)).
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value_tol!consistency_rule". *)
    Parameter value.Coll_int_imp_value_tol.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_reflexive :
    forall v1 : value.Coll_int_imp_value_tol.me_as_carrier,
      Is_true ((value.Coll_int_imp_value_tol.consistency_rule v1 v1)).
%%end-auto-proof
0
aa91d6caa1a93d6e95c03d0d46a716cf
proof
278
Theorem for_zenon_consistency_rule_is_reflexive:(forall a
:value.Coll_int_imp_value_tol.me_as_carrier,(Is_true (
value.Coll_int_imp_value_tol.consistency_rule a a))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_int_imp_value_tol.consistency_rule_reflexive)))).
Qed.

0
490e8020ff7678b564cce5972d114efc
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
1057

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_symmetric
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value_tol!consistency_rule_symmetric". *)
    Parameter value.Coll_int_imp_value_tol.consistency_rule_symmetric :
      forall a  b : value.Coll_int_imp_value_tol.me_as_carrier,
        Is_true ((value.Coll_int_imp_value_tol.consistency_rule a b)) ->
          Is_true ((value.Coll_int_imp_value_tol.consistency_rule b a)).
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value_tol!consistency_rule". *)
    Parameter value.Coll_int_imp_value_tol.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_symmetric :
    forall v1  v2 : value.Coll_int_imp_value_tol.me_as_carrier,
      Is_true ((value.Coll_int_imp_value_tol.consistency_rule v1 v2)) ->
        Is_true ((value.Coll_int_imp_value_tol.consistency_rule v2 v1)).
%%end-auto-proof
0
34804e8e30675d789eb426dcce983f52
proof
399
Theorem for_zenon_consistency_rule_is_symmetric:(forall a
:value.Coll_int_imp_value_tol.me_as_carrier,(forall b
:value.Coll_int_imp_value_tol.me_as_carrier,((Is_true (
value.Coll_int_imp_value_tol.consistency_rule a b))->(Is_true (
value.Coll_int_imp_value_tol.consistency_rule b a))))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_int_imp_value_tol.consistency_rule_symmetric)))).
Qed.

0
2c140d5f36f125ec8cb71286c94a525a
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
868

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_reflexive
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value!consistency_rule_reflexive". *)
    Parameter value.Coll_int_imp_value.consistency_rule_reflexive :
      forall a : value.Coll_int_imp_value.me_as_carrier,
        Is_true ((value.Coll_int_imp_value.consistency_rule a a)).
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value!consistency_rule". *)
    Parameter value.Coll_int_imp_value.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_reflexive :
    forall v1 : value.Coll_int_imp_value.me_as_carrier,
      Is_true ((value.Coll_int_imp_value.consistency_rule v1 v1)).
%%end-auto-proof
0
6fd04ad473b00079460f9a5667b538fc
proof
266
Theorem for_zenon_consistency_rule_is_reflexive:(forall a
:value.Coll_int_imp_value.me_as_carrier,(Is_true (
value.Coll_int_imp_value.consistency_rule a a))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_int_imp_value.consistency_rule_reflexive)))).
Qed.

0
fe6d5b6df2ff75660b7d3d8ffca94d3d
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
1017

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_symmetric
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value!consistency_rule_symmetric". *)
    Parameter value.Coll_int_imp_value.consistency_rule_symmetric :
      forall a  b : value.Coll_int_imp_value.me_as_carrier,
        Is_true ((value.Coll_int_imp_value.consistency_rule a b)) ->
          Is_true ((value.Coll_int_imp_value.consistency_rule b a)).
    (* For toplevel collection's method used via "by property value#Coll_int_imp_value!consistency_rule". *)
    Parameter value.Coll_int_imp_value.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_symmetric :
    forall v1  v2 : value.Coll_int_imp_value.me_as_carrier,
      Is_true ((value.Coll_int_imp_value.consistency_rule v1 v2)) ->
        Is_true ((value.Coll_int_imp_value.consistency_rule v2 v1)).
%%end-auto-proof
0
5e733470e27e51630704820064dede3e
proof
379
Theorem for_zenon_consistency_rule_is_symmetric:(forall a
:value.Coll_int_imp_value.me_as_carrier,(forall b
:value.Coll_int_imp_value.me_as_carrier,((Is_true (
value.Coll_int_imp_value.consistency_rule a b))->(Is_true (
value.Coll_int_imp_value.consistency_rule b a))))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_int_imp_value.consistency_rule_symmetric)))).
Qed.

0
33e4e136698871fa8e8da71b035b3eac
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
876

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_reflexive
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_bool_imp_value!consistency_rule_reflexive". *)
    Parameter value.Coll_bool_imp_value.consistency_rule_reflexive :
      forall a : value.Coll_bool_imp_value.me_as_carrier,
        Is_true ((value.Coll_bool_imp_value.consistency_rule a a)).
    (* For toplevel collection's method used via "by property value#Coll_bool_imp_value!consistency_rule". *)
    Parameter value.Coll_bool_imp_value.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_reflexive :
    forall v1 : value.Coll_bool_imp_value.me_as_carrier,
      Is_true ((value.Coll_bool_imp_value.consistency_rule v1 v1)).
%%end-auto-proof
0
ded9f35ec14c60b138ef9c275d2b9158
proof
269
Theorem for_zenon_consistency_rule_is_reflexive:(forall a
:value.Coll_bool_imp_value.me_as_carrier,(Is_true (
value.Coll_bool_imp_value.consistency_rule a a))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_bool_imp_value.consistency_rule_reflexive)))).
Qed.

0
2cc5d2f8165bc126900064cfebbbb02b
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
1027

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_symmetric
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value#Coll_bool_imp_value!consistency_rule_symmetric". *)
    Parameter value.Coll_bool_imp_value.consistency_rule_symmetric :
      forall a  b : value.Coll_bool_imp_value.me_as_carrier,
        Is_true ((value.Coll_bool_imp_value.consistency_rule a b)) ->
          Is_true ((value.Coll_bool_imp_value.consistency_rule b a)).
    (* For toplevel collection's method used via "by property value#Coll_bool_imp_value!consistency_rule". *)
    Parameter value.Coll_bool_imp_value.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_symmetric :
    forall v1  v2 : value.Coll_bool_imp_value.me_as_carrier,
      Is_true ((value.Coll_bool_imp_value.consistency_rule v1 v2)) ->
        Is_true ((value.Coll_bool_imp_value.consistency_rule v2 v1)).
%%end-auto-proof
0
094d6cfeb92704ed3c26ff77e48280d5
proof
384
Theorem for_zenon_consistency_rule_is_symmetric:(forall a
:value.Coll_bool_imp_value.me_as_carrier,(forall b
:value.Coll_bool_imp_value.me_as_carrier,((Is_true (
value.Coll_bool_imp_value.consistency_rule a b))->(Is_true (
value.Coll_bool_imp_value.consistency_rule b a))))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value.Coll_bool_imp_value.consistency_rule_symmetric)))).
Qed.

0
abea9b56e64c847ddd57f77554330150
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
1048

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_reflexive
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value_with_valid#Coll_int_value_with_valid!consistency_rule_reflexive". *)
    Parameter value_with_valid.Coll_int_value_with_valid.consistency_rule_reflexive :
      forall a : value_with_valid.Coll_int_value_with_valid.me_as_carrier,
        Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                   a a)).
    (* For toplevel collection's method used via "by property value_with_valid#Coll_int_value_with_valid!consistency_rule". *)
    Parameter value_with_valid.Coll_int_value_with_valid.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_reflexive :
    forall v1 : value_with_valid.Coll_int_value_with_valid.me_as_carrier,
      Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                 v1 v1)).
%%end-auto-proof
0
3311dcf8b0f12d146c445d736d790ca4
proof
321
Theorem for_zenon_consistency_rule_is_reflexive:(forall a
:value_with_valid.Coll_int_value_with_valid.me_as_carrier,(Is_true (
value_with_valid.Coll_int_value_with_valid.consistency_rule a a))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value_with_valid.Coll_int_value_with_valid.consistency_rule_reflexive)))
).
Qed.

0
5621d5048b0bb5189ec1465520588b80
err
0
d41d8cd98f00b204e9800998ecf8427e
end
begin
1273

%%begin-auto-proof
%%name: for_zenon_consistency_rule_is_symmetric
    
    
    
    (* Methods to use for automated proof. *)
    (* For toplevel collection's method used via "by property value_with_valid#Coll_int_value_with_valid!consistency_rule_symmetric". *)
    Parameter value_with_valid.Coll_int_value_with_valid.consistency_rule_symmetric :
      forall a  b : value_with_valid.Coll_int_value_with_valid.me_as_carrier,
        Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                   a b)) ->
          Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                     b a)).
    (* For toplevel collection's method used via "by property value_with_valid#Coll_int_value_with_valid!consistency_rule". *)
    Parameter value_with_valid.Coll_int_value_with_valid.consistency_rule :
      abst_T -> abst_T -> basics.bool__t.
    (* Theorem's body. *)
    Theorem for_zenon_consistency_rule_is_symmetric :
    forall v1  v2 : value_with_valid.Coll_int_value_with_valid.me_as_carrier,
      Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                 v1 v2)) ->
        Is_true ((value_with_valid.Coll_int_value_with_valid.consistency_rule
                   v2 v1)).
%%end-auto-proof
0
4d4122450d13b55ab309cfdc4d676491
proof
470
Theorem for_zenon_consistency_rule_is_symmetric:(forall a
:value_with_valid.Coll_int_value_with_valid.me_as_carrier,(forall b
:value_with_valid.Coll_int_value_with_valid.me_as_carrier,((Is_true (
value_with_valid.Coll_int_value_with_valid.consistency_rule a b))->(
Is_true (value_with_valid.Coll_int_value_with_valid.consistency_rule b
a))))).
Proof.
exact(
(NNPP _ (fun zenon_G=>(zenon_G
value_with_valid.Coll_int_value_with_valid.consistency_rule_symmetric)))
).
Qed.

0
06a9f8dec6b26b1c641243d500fb8afd
err
0
d41d8cd98f00b204e9800998ecf8427e
end
