open "basics";;
open "sets";;

open "Finite_Set_S";;
open "Un_Bureau_de_vote_S";;
open "Un_Scrutin_S";;
open "Un_Senateur_S";;
open "Un_Territoire_francais_S";;
open "Une_Origine_S";;
open "Une_Race_S";;
open "Une_Religion_S";;
open "Un_Parlementaire_subtype_S";;
--
-- InH:  Un_Depute           Un_Senateur
-- InH:      \                  /
-- InH:       v                v
-- InH:        Un_Parlementaire   Le_President_de_la_republique Un_Elu_europeen Un_Elu_regional Un_Elu_cantonalUn_Elu_municipal  
-- InH:                |
-- InH:                v
-- InH:             Un_Elu
-- InH:                |
-- InH:                v
-- InH:        Un_Citoyen_electeur
-- InH:                |
-- InH:                v
-- InH:           Un_Francais
-- InH:                |
-- InH:                v
-- InH:         Un_Etre_humain_S

species Un_Senateur_subtype (
  URac is Une_Race_S,
  UOri is Une_Origine_S,
  URel is Une_Religion_S,
  UTfr is Un_Territoire_francais_S,
  UScr is Un_Scrutin_S,
  UBvo is Un_Bureau_de_vote_S (UTfr),
  Sub is Un_Senateur_S (URac, UOri, URel, UTfr, UScr, UBvo),
  Sub_set is Finite_Set_S(Sub),
  Super is Un_Senateur_S (URac, UOri, URel, UTfr, UScr, UBvo),
  Super_set is Finite_Set_S(Super)
) =
    
  inherit Un_Parlementaire_subtype_S (URac, UOri, URel, UTfr, UScr, UBvo, Sub, Sub_set, Super, Super_set);

  let un_senateur (sub : Sub) =
    to_super (sub);
  
end;;

