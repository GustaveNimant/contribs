<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- document automatically generated from a FoCaL program. Note that focdoc has also both a DTD 'focdoc.dtd' and a RELAX NG schema 'focdoc.rnc'.  To validate a focdoc file with focdoc.dtd, please product the focdoc file with the '-focalize-doc' option of focalizecc. But whereas an XML document can associate itself with a DTD using a DOCTYPE declaration, RELAX NG does not define a way for an XML document to associate itself with a RELAX NG pattern. -->

<foc:focdoc xsi:schemaLocation="focal focdoc.xsd mathml2 http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mml="mathml2" xmlns:foc="http://focal.inria.fr/site/index">
  <foc:fcl-name>Un_Bloc_S</foc:fcl-name>
  <foc:general-informations>
    </foc:general-informations>
  
  <foc:directive><foc:dir-open>basics</foc:dir-open></foc:directive>
  <foc:directive><foc:dir-open>strict_orders</foc:dir-open></foc:directive>
  <foc:directive><foc:dir-open>Un_Contrat_intelligent_S</foc:dir-open></foc:directive>
  <foc:directive><foc:dir-open>Une_Phrase_d_un_paragraphe_S</foc:dir-open></foc:directive>
  <foc:species>
    <foc:fcl-name>Un_Bloc_S</foc:fcl-name>
    <foc:informations>
      </foc:informations>
    <foc:spe-param>
      <foc:fcl-name>UPpa</foc:fcl-name>
      <foc:spe-param-kind>
      <foc:spe-param-kind-collection>
      <foc:spe-expr>
        <foc:spe-expr-atom infile="Une_Phrase_d_un_paragraphe_S">
          <foc:fcl-name>Une_Phrase_d_un_paragraphe_S</foc:fcl-name>
          </foc:spe-expr-atom>
        </foc:spe-expr>
      </foc:spe-param-kind-collection>
      </foc:spe-param-kind>
      <foc:informations>
        </foc:informations>
      </foc:spe-param>
    <foc:spe-param>
      <foc:fcl-name>UCin</foc:fcl-name>
      <foc:spe-param-kind>
      <foc:spe-param-kind-collection>
      <foc:spe-expr>
        <foc:spe-expr-atom infile="Un_Contrat_intelligent_S">
          <foc:fcl-name>Un_Contrat_intelligent_S</foc:fcl-name>
          </foc:spe-expr-atom>
        </foc:spe-expr>
      </foc:spe-param-kind-collection>
      </foc:spe-param-kind>
      <foc:informations>
        </foc:informations>
      </foc:spe-param>
    <foc:spe-inherits>
      <foc:spe-expr>
        <foc:spe-expr-atom infile="strict_orders">
          <foc:fcl-name>Strict_order</foc:fcl-name>
          </foc:spe-expr-atom>
        </foc:spe-expr>
      </foc:spe-inherits>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>clef_de_hachage_du_bloc_precedent</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>string</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>clef_de_publique_du_citoyen_emetteur</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>string</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>element</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>horodatage_de_la_creation</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>string</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>l_ordinal</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>int</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>le_contrat_intelligent</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-species-rep>
                <foc:identifier infile="Un_Bloc_S">
                  <foc:fcl-name>UCin</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-species-rep>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>le_texte</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-species-rep>
                <foc:identifier infile="Un_Bloc_S">
                  <foc:fcl-name>UPpa</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-species-rep>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-signature>
        <foc:fcl-name>lt</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-fun>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:type-expr>
                  <foc:ty-cstr>
                    <foc:identifier infile="basics">
                      <foc:fcl-name>bool</foc:fcl-name>
                      </foc:identifier>
                    </foc:ty-cstr>
                  </foc:type-expr>
                </foc:ty-fun>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        </foc:meth-signature>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>different</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>x</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        <foc:fcl-name>y</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-fun>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:type-expr>
                  <foc:ty-cstr>
                    <foc:identifier infile="basics">
                      <foc:fcl-name>bool</foc:fcl-name>
                      </foc:identifier>
                    </foc:ty-cstr>
                  </foc:type-expr>
                </foc:ty-fun>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>||</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>lt</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>x</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>y</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>lt</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>y</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>x</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>gt</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>x</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        <foc:fcl-name>y</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-fun>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:type-expr>
                  <foc:ty-cstr>
                    <foc:identifier infile="basics">
                      <foc:fcl-name>bool</foc:fcl-name>
                      </foc:identifier>
                    </foc:ty-cstr>
                  </foc:type-expr>
                </foc:ty-fun>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="">
                <foc:fcl-name>lt</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:identifier infile="">
                <foc:fcl-name>y</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:identifier infile="">
                <foc:fcl-name>x</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>l_ordinal_est_non_negatif</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>blo</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>bool</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>&gt;=</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>l_ordinal</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>blo</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            <foc:expr>
              <foc:expr-cst>
                <foc:cst-int val="0"></foc:cst-int>
                </foc:expr-cst>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>l_ordinal_est_positif</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="Un_Bloc_S">Un_Bloc_S</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>blo</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>bool</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>&gt;</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>l_ordinal</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>blo</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            <foc:expr>
              <foc:expr-cst>
                <foc:cst-int val="0"></foc:cst-int>
                </foc:expr-cst>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>leq</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>x</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        <foc:fcl-name>y</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-fun>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:type-expr>
                  <foc:ty-cstr>
                    <foc:identifier infile="basics">
                      <foc:fcl-name>bool</foc:fcl-name>
                      </foc:identifier>
                    </foc:ty-cstr>
                  </foc:type-expr>
                </foc:ty-fun>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>||</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>lt</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>x</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>y</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            <foc:expr>
              <foc:expr-app>
                <foc:expr>
                  <foc:identifier infile="basics">
                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>x</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                <foc:expr>
                  <foc:identifier infile="">
                    <foc:fcl-name>y</foc:fcl-name>
                    </foc:identifier>
                  </foc:expr>
                </foc:expr-app>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-property>
        <foc:fcl-name>lt_is_irreflexive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr>
              <foc:logexpr-not>
                <foc:logexpr>
                  <foc:logexpr-expr>
                    <foc:expr>
                      <foc:expr-paren>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>lt</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:expr-paren>
                      </foc:expr>
                    </foc:logexpr-expr>
                  </foc:logexpr>
                </foc:logexpr-not>
              </foc:logexpr>
            </foc:logexpr-all>
          </foc:logexpr>
        </foc:meth-property>
      </foc:method>
    <foc:method>
      <foc:meth-property>
        <foc:fcl-name>lt_is_transitive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr-all>
                <foc:var><foc:fcl-name>z</foc:fcl-name></foc:var>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:logexpr>
                  <foc:logexpr-implies>
                    <foc:logexpr>
                      <foc:logexpr-expr>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>lt</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>y</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:logexpr-expr>
                      </foc:logexpr>
                    <foc:logexpr>
                      <foc:logexpr-implies>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>lt</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>y</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>lt</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>x</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        </foc:logexpr-implies>
                      </foc:logexpr>
                    </foc:logexpr-implies>
                  </foc:logexpr>
                </foc:logexpr-all>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        </foc:meth-property>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>parse</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="basics">Basic_object</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>_x</foc:fcl-name>
        <foc:type-expr>
          <foc:ty-cstr>
            <foc:identifier infile="basics">
              <foc:fcl-name>string</foc:fcl-name>
              </foc:identifier>
            </foc:ty-cstr>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>string</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>focalize_error</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-cst>
                <foc:cst-string val="not parsable"></foc:cst-string>
                </foc:expr-cst>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>print</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="basics">Basic_object</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>_x</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-cstr>
                <foc:identifier infile="basics">
                  <foc:fcl-name>string</foc:fcl-name>
                  </foc:identifier>
                </foc:ty-cstr>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-cst>
            <foc:cst-string val="&lt;abst&gt;"></foc:cst-string>
            </foc:expr-cst>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-property>
        <foc:fcl-name>different_is_complete</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr-all>
                <foc:var><foc:fcl-name>z</foc:fcl-name></foc:var>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:logexpr>
                  <foc:logexpr-implies>
                    <foc:logexpr>
                      <foc:logexpr-expr>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>different</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>y</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:logexpr-expr>
                      </foc:logexpr>
                    <foc:logexpr>
                      <foc:logexpr-paren>
                        <foc:logexpr>
                          <foc:logexpr-or>
                            <foc:logexpr>
                              <foc:logexpr-expr>
                                <foc:expr>
                                  <foc:expr-app>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>different</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>x</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>z</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    </foc:expr-app>
                                  </foc:expr>
                                </foc:logexpr-expr>
                              </foc:logexpr>
                            <foc:logexpr>
                              <foc:logexpr-expr>
                                <foc:expr>
                                  <foc:expr-app>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>different</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>y</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    <foc:expr>
                                      <foc:identifier infile="">
                                        <foc:fcl-name>z</foc:fcl-name>
                                        </foc:identifier>
                                      </foc:expr>
                                    </foc:expr-app>
                                  </foc:expr>
                                </foc:logexpr-expr>
                              </foc:logexpr>
                            </foc:logexpr-or>
                          </foc:logexpr>
                        </foc:logexpr-paren>
                      </foc:logexpr>
                    </foc:logexpr-implies>
                  </foc:logexpr>
                </foc:logexpr-all>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        </foc:meth-property>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>different_is_symmetric</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-implies>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>different</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>different</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  </foc:logexpr-implies>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>different</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-let>
        <foc:fcl-name>equal</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:binding-param>
        <foc:fcl-name>x</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        <foc:fcl-name>y</foc:fcl-name>
        <foc:type-expr>
          <foc:self/>
          </foc:type-expr>
        </foc:binding-param>
        <foc:type-expr>
          <foc:ty-fun>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:type-expr>
              <foc:ty-fun>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:type-expr>
                  <foc:ty-cstr>
                    <foc:identifier infile="basics">
                      <foc:fcl-name>bool</foc:fcl-name>
                      </foc:identifier>
                    </foc:ty-cstr>
                  </foc:type-expr>
                </foc:ty-fun>
              </foc:type-expr>
            </foc:ty-fun>
          </foc:type-expr>
        <foc:let-body><foc:let-body-kind><foc:let-bkind-comp/></foc:let-body-kind>
        <foc:expr>
          <foc:expr-app>
            <foc:expr>
              <foc:identifier infile="basics">
                <foc:fcl-name>~~</foc:fcl-name>
                </foc:identifier>
              </foc:expr>
            <foc:expr>
              <foc:expr-paren>
                <foc:expr>
                  <foc:expr-app>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>different</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>x</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>y</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    </foc:expr-app>
                  </foc:expr>
                </foc:expr-paren>
              </foc:expr>
            </foc:expr-app>
          </foc:expr>
        </foc:let-body>
        </foc:meth-let>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>gt_is_lt</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-equiv>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>gt</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>lt</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  </foc:logexpr-equiv>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>gt</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>leq_reflexive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr>
              <foc:logexpr-expr>
                <foc:expr>
                  <foc:expr-app>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>leq</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>x</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>x</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    </foc:expr-app>
                  </foc:expr>
                </foc:logexpr-expr>
              </foc:logexpr>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>leq</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>lt_refines_leq</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-implies>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>lt</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>leq</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  </foc:logexpr-implies>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>leq</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>different_is_irreflexive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr>
              <foc:logexpr-not>
                <foc:logexpr>
                  <foc:logexpr-expr>
                    <foc:expr>
                      <foc:expr-paren>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>different</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:expr-paren>
                      </foc:expr>
                    </foc:logexpr-expr>
                  </foc:logexpr>
                </foc:logexpr-not>
              </foc:logexpr>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>lt_is_irreflexive</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>different</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>lt_is_asymetric</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-implies>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>lt</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-not>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-paren>
                              <foc:expr>
                                <foc:expr-app>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>lt</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>y</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>x</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  </foc:expr-app>
                                </foc:expr>
                              </foc:expr-paren>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:logexpr-not>
                    </foc:logexpr>
                  </foc:logexpr-implies>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-nodes>
            <foc:pr-node-sub>
              <foc:node-label num="1" name="1"></foc:node-label>
              <foc:statement>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>x</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>y</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-hyp>
                  <foc:fcl-name>H</foc:fcl-name><foc:logexpr>
                                                  <foc:logexpr-expr>
                                                    <foc:expr>
                                                      <foc:expr-app>
                                                        <foc:expr>
                                                          <foc:identifier infile="">
                                                            <foc:fcl-name>lt</foc:fcl-name>
                                                            </foc:identifier>
                                                          </foc:expr>
                                                        <foc:expr>
                                                          <foc:identifier infile="">
                                                            <foc:fcl-name>x</foc:fcl-name>
                                                            </foc:identifier>
                                                          </foc:expr>
                                                        <foc:expr>
                                                          <foc:identifier infile="">
                                                            <foc:fcl-name>y</foc:fcl-name>
                                                            </foc:identifier>
                                                          </foc:expr>
                                                        </foc:expr-app>
                                                      </foc:expr>
                                                    </foc:logexpr-expr>
                                                  </foc:logexpr>
                  </foc:stmt-hyp-hyp>
                <foc:logexpr>
                  <foc:logexpr-not>
                    <foc:logexpr>
                      <foc:logexpr-expr>
                        <foc:expr>
                          <foc:expr-paren>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>lt</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>y</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>x</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:expr-paren>
                          </foc:expr>
                        </foc:logexpr-expr>
                      </foc:logexpr>
                    </foc:logexpr-not>
                  </foc:logexpr>
                </foc:statement>
              <foc:proof>
                <foc:pr-nodes>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="1"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>F</foc:fcl-name><foc:logexpr>
                                                        <foc:logexpr-expr>
                                                          <foc:expr>
                                                            <foc:expr-app>
                                                              <foc:expr>
                                                                <foc:identifier infile="">
                                                                  <foc:fcl-name>lt</foc:fcl-name>
                                                                  </foc:identifier>
                                                                </foc:expr>
                                                              <foc:expr>
                                                                <foc:identifier infile="">
                                                                  <foc:fcl-name>y</foc:fcl-name>
                                                                  </foc:identifier>
                                                                </foc:expr>
                                                              <foc:expr>
                                                                <foc:identifier infile="">
                                                                  <foc:fcl-name>x</foc:fcl-name>
                                                                  </foc:identifier>
                                                                </foc:expr>
                                                              </foc:expr-app>
                                                            </foc:expr>
                                                          </foc:logexpr-expr>
                                                        </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>lt</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>H</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-hyp><foc:fcl-name>F</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>lt_is_transitive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-qed>
                    <foc:node-label num="2" name="f"></foc:node-label>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-node>
                          <foc:node-label num="2" name="1"></foc:node-label>
                          </foc:fact-node>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>lt_is_irreflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-qed>
                  </foc:pr-nodes>
                </foc:proof>
              </foc:pr-node-sub>
            <foc:pr-node-qed>
              <foc:node-label num="1" name="f"></foc:node-label>
              <foc:proof>
                <foc:pr-auto>
                  </foc:pr-auto>
                </foc:proof>
              </foc:pr-node-qed>
            </foc:pr-nodes>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>different_is_not_same</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-equiv>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>equal</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-not>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-paren>
                              <foc:expr>
                                <foc:expr-app>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>different</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>x</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  <foc:expr>
                                    <foc:identifier infile="">
                                      <foc:fcl-name>y</foc:fcl-name>
                                      </foc:identifier>
                                    </foc:expr>
                                  </foc:expr-app>
                                </foc:expr>
                              </foc:expr-paren>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:logexpr-not>
                    </foc:logexpr>
                  </foc:logexpr-equiv>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-def>
              <foc:identifier infile="">
                <foc:fcl-name>equal</foc:fcl-name>
                </foc:identifier>
              </foc:fact-def>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>gt_is_irreflexive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr>
              <foc:logexpr-not>
                <foc:logexpr>
                  <foc:logexpr-expr>
                    <foc:expr>
                      <foc:expr-paren>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>gt</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:expr-paren>
                      </foc:expr>
                    </foc:logexpr-expr>
                  </foc:logexpr>
                </foc:logexpr-not>
              </foc:logexpr>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>gt_is_lt</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>lt_is_irreflexive</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>equal_reflexive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr>
              <foc:logexpr-expr>
                <foc:expr>
                  <foc:expr-app>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>equal</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>x</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    <foc:expr>
                      <foc:identifier infile="">
                        <foc:fcl-name>x</foc:fcl-name>
                        </foc:identifier>
                      </foc:expr>
                    </foc:expr-app>
                  </foc:expr>
                </foc:logexpr-expr>
              </foc:logexpr>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_not_same</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_irreflexive</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>equal_symmetric</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-implies>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>equal</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>equal</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  </foc:logexpr-implies>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_symmetric</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_not_same</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>equal_transitive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="sets">Anti_setoid</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr-all>
                <foc:var><foc:fcl-name>z</foc:fcl-name></foc:var>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:logexpr>
                  <foc:logexpr-implies>
                    <foc:logexpr>
                      <foc:logexpr-expr>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>equal</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>y</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:logexpr-expr>
                      </foc:logexpr>
                    <foc:logexpr>
                      <foc:logexpr-implies>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>equal</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>y</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>equal</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>x</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        </foc:logexpr-implies>
                      </foc:logexpr>
                    </foc:logexpr-implies>
                  </foc:logexpr>
                </foc:logexpr-all>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-auto>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_complete</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_symmetric</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_irreflexive</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            <foc:fact-prop>
              <foc:identifier infile="">
                <foc:fcl-name>different_is_not_same</foc:fcl-name>
                </foc:identifier>
              </foc:fact-prop>
            </foc:pr-auto>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>leq_antisymmetric</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr>
                <foc:logexpr-implies>
                  <foc:logexpr>
                    <foc:logexpr-expr>
                      <foc:expr>
                        <foc:expr-app>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>leq</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>x</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          <foc:expr>
                            <foc:identifier infile="">
                              <foc:fcl-name>y</foc:fcl-name>
                              </foc:identifier>
                            </foc:expr>
                          </foc:expr-app>
                        </foc:expr>
                      </foc:logexpr-expr>
                    </foc:logexpr>
                  <foc:logexpr>
                    <foc:logexpr-implies>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>leq</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:logexpr-implies>
                    </foc:logexpr>
                  </foc:logexpr-implies>
                </foc:logexpr>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-nodes>
            <foc:pr-node-sub>
              <foc:node-label num="1" name="1"></foc:node-label>
              <foc:statement>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>x</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>y</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-hyp>
                  <foc:fcl-name>H_xy</foc:fcl-name><foc:logexpr>
                                                     <foc:logexpr-expr>
                                                       <foc:expr>
                                                         <foc:expr-app>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>leq</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>x</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>y</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           </foc:expr-app>
                                                         </foc:expr>
                                                       </foc:logexpr-expr>
                                                     </foc:logexpr>
                  </foc:stmt-hyp-hyp>
                <foc:stmt-hyp-hyp>
                  <foc:fcl-name>H_yx</foc:fcl-name><foc:logexpr>
                                                     <foc:logexpr-expr>
                                                       <foc:expr>
                                                         <foc:expr-app>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>leq</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>y</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>x</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           </foc:expr-app>
                                                         </foc:expr>
                                                       </foc:logexpr-expr>
                                                     </foc:logexpr>
                  </foc:stmt-hyp-hyp>
                <foc:logexpr>
                  <foc:logexpr-expr>
                    <foc:expr>
                      <foc:expr-app>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>x</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>y</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        </foc:expr-app>
                      </foc:expr>
                    </foc:logexpr-expr>
                  </foc:logexpr>
                </foc:statement>
              <foc:proof>
                <foc:pr-nodes>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="1"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>HH_xy</foc:fcl-name><foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>HH_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>lt_is_transitive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>lt_is_irreflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="2"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>HH_xy</foc:fcl-name><foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>HH_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_reflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_symmetric</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="3"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>HH_xy</foc:fcl-name><foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>HH_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_reflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="4"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>HH_xy</foc:fcl-name><foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>y</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>HH_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_reflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-qed>
                    <foc:node-label num="2" name="5"></foc:node-label>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-node>
                          <foc:node-label num="2" name="1"></foc:node-label>
                          <foc:node-label num="2" name="2"></foc:node-label>
                          <foc:node-label num="2" name="3"></foc:node-label>
                          <foc:node-label num="2" name="4"></foc:node-label>
                          </foc:fact-node>
                        <foc:fact-hyp><foc:fcl-name>H_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-hyp><foc:fcl-name>H_yx</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-def>
                          <foc:identifier infile="">
                            <foc:fcl-name>leq</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-def>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-qed>
                  </foc:pr-nodes>
                </foc:proof>
              </foc:pr-node-sub>
            <foc:pr-node-qed>
              <foc:node-label num="1" name="f"></foc:node-label>
              <foc:proof>
                <foc:pr-auto>
                  </foc:pr-auto>
                </foc:proof>
              </foc:pr-node-qed>
            </foc:pr-nodes>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    <foc:method>
      <foc:meth-theorem>
        <foc:fcl-name>leq_transitive</foc:fcl-name>
        <foc:history>
          <foc:initial-apparition infile="strict_orders">Strict_partial_order</foc:initial-apparition>
          <foc:comes-from infile="Un_Bloc_S">Un_Bloc_S</foc:comes-from>
          </foc:history>
        <foc:informations>
          </foc:informations>
        <foc:logexpr>
          <foc:logexpr-all>
            <foc:var><foc:fcl-name>x</foc:fcl-name></foc:var>
            <foc:type-expr>
              <foc:self/>
              </foc:type-expr>
            <foc:logexpr-all>
              <foc:var><foc:fcl-name>y</foc:fcl-name></foc:var>
              <foc:type-expr>
                <foc:self/>
                </foc:type-expr>
              <foc:logexpr-all>
                <foc:var><foc:fcl-name>z</foc:fcl-name></foc:var>
                <foc:type-expr>
                  <foc:self/>
                  </foc:type-expr>
                <foc:logexpr>
                  <foc:logexpr-implies>
                    <foc:logexpr>
                      <foc:logexpr-expr>
                        <foc:expr>
                          <foc:expr-app>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>leq</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>x</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            <foc:expr>
                              <foc:identifier infile="">
                                <foc:fcl-name>y</foc:fcl-name>
                                </foc:identifier>
                              </foc:expr>
                            </foc:expr-app>
                          </foc:expr>
                        </foc:logexpr-expr>
                      </foc:logexpr>
                    <foc:logexpr>
                      <foc:logexpr-implies>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>leq</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>y</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        <foc:logexpr>
                          <foc:logexpr-expr>
                            <foc:expr>
                              <foc:expr-app>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>leq</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>x</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                <foc:expr>
                                  <foc:identifier infile="">
                                    <foc:fcl-name>z</foc:fcl-name>
                                    </foc:identifier>
                                  </foc:expr>
                                </foc:expr-app>
                              </foc:expr>
                            </foc:logexpr-expr>
                          </foc:logexpr>
                        </foc:logexpr-implies>
                      </foc:logexpr>
                    </foc:logexpr-implies>
                  </foc:logexpr>
                </foc:logexpr-all>
              </foc:logexpr-all>
            </foc:logexpr-all>
          </foc:logexpr>
        <foc:proof>
          <foc:pr-nodes>
            <foc:pr-node-sub>
              <foc:node-label num="1" name="1"></foc:node-label>
              <foc:statement>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>x</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>y</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-var>
                  <foc:fcl-name>z</foc:fcl-name><foc:type-expr>
                                                  <foc:self/>
                                                  </foc:type-expr>
                  </foc:stmt-hyp-var>
                <foc:stmt-hyp-hyp>
                  <foc:fcl-name>H_xy</foc:fcl-name><foc:logexpr>
                                                     <foc:logexpr-expr>
                                                       <foc:expr>
                                                         <foc:expr-app>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>leq</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>x</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>y</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           </foc:expr-app>
                                                         </foc:expr>
                                                       </foc:logexpr-expr>
                                                     </foc:logexpr>
                  </foc:stmt-hyp-hyp>
                <foc:stmt-hyp-hyp>
                  <foc:fcl-name>H_yz</foc:fcl-name><foc:logexpr>
                                                     <foc:logexpr-expr>
                                                       <foc:expr>
                                                         <foc:expr-app>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>leq</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>y</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           <foc:expr>
                                                             <foc:identifier infile="">
                                                               <foc:fcl-name>z</foc:fcl-name>
                                                               </foc:identifier>
                                                             </foc:expr>
                                                           </foc:expr-app>
                                                         </foc:expr>
                                                       </foc:logexpr-expr>
                                                     </foc:logexpr>
                  </foc:stmt-hyp-hyp>
                <foc:logexpr>
                  <foc:logexpr-expr>
                    <foc:expr>
                      <foc:expr-app>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>leq</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>x</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        <foc:expr>
                          <foc:identifier infile="">
                            <foc:fcl-name>z</foc:fcl-name>
                            </foc:identifier>
                          </foc:expr>
                        </foc:expr-app>
                      </foc:expr>
                    </foc:logexpr-expr>
                  </foc:logexpr>
                </foc:statement>
              <foc:proof>
                <foc:pr-nodes>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="1"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>H</foc:fcl-name><foc:logexpr>
                                                        <foc:logexpr-paren>
                                                          <foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>z</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                                                          </foc:logexpr-paren>
                                                        </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>lt</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>z</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>H</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>lt_is_transitive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="2"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>H</foc:fcl-name><foc:logexpr>
                                                        <foc:logexpr-paren>
                                                          <foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>z</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                                                          </foc:logexpr-paren>
                                                        </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>lt</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>z</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>H</foc:fcl-name></foc:fact-hyp>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="3"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>H</foc:fcl-name><foc:logexpr>
                                                        <foc:logexpr-paren>
                                                          <foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>lt</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>z</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                                                          </foc:logexpr-paren>
                                                        </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>lt</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>z</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>H</foc:fcl-name></foc:fact-hyp>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-sub>
                    <foc:node-label num="2" name="4"></foc:node-label>
                    <foc:statement>
                      <foc:stmt-hyp-hyp>
                        <foc:fcl-name>H</foc:fcl-name><foc:logexpr>
                                                        <foc:logexpr-paren>
                                                          <foc:logexpr>
                                                            <foc:logexpr-and>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>x</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              <foc:logexpr>
                                                                <foc:logexpr-expr>
                                                                  <foc:expr>
                                                                    <foc:expr-app>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="basics">
                                                                    <foc:fcl-name>syntactic_equal</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>y</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    <foc:expr>
                                                                    <foc:identifier infile="">
                                                                    <foc:fcl-name>z</foc:fcl-name>
                                                                    </foc:identifier>
                                                                    </foc:expr>
                                                                    </foc:expr-app>
                                                                    </foc:expr>
                                                                  </foc:logexpr-expr>
                                                                </foc:logexpr>
                                                              </foc:logexpr-and>
                                                            </foc:logexpr>
                                                          </foc:logexpr-paren>
                                                        </foc:logexpr>
                        </foc:stmt-hyp-hyp>
                      <foc:logexpr>
                        <foc:logexpr-expr>
                          <foc:expr>
                            <foc:expr-app>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>equal</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>x</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              <foc:expr>
                                <foc:identifier infile="">
                                  <foc:fcl-name>z</foc:fcl-name>
                                  </foc:identifier>
                                </foc:expr>
                              </foc:expr-app>
                            </foc:expr>
                          </foc:logexpr-expr>
                        </foc:logexpr>
                      </foc:statement>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-hyp><foc:fcl-name>H</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_transitive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        <foc:fact-prop>
                          <foc:identifier infile="">
                            <foc:fcl-name>equal_reflexive</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-prop>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-sub>
                  <foc:pr-node-qed>
                    <foc:node-label num="2" name="f"></foc:node-label>
                    <foc:proof>
                      <foc:pr-auto>
                        <foc:fact-node>
                          <foc:node-label num="2" name="1"></foc:node-label>
                          <foc:node-label num="2" name="2"></foc:node-label>
                          <foc:node-label num="2" name="3"></foc:node-label>
                          <foc:node-label num="2" name="4"></foc:node-label>
                          </foc:fact-node>
                        <foc:fact-hyp><foc:fcl-name>H_xy</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-hyp><foc:fcl-name>H_yz</foc:fcl-name></foc:fact-hyp>
                        <foc:fact-def>
                          <foc:identifier infile="">
                            <foc:fcl-name>leq</foc:fcl-name>
                            </foc:identifier>
                          </foc:fact-def>
                        </foc:pr-auto>
                      </foc:proof>
                    </foc:pr-node-qed>
                  </foc:pr-nodes>
                </foc:proof>
              </foc:pr-node-sub>
            <foc:pr-node-qed>
              <foc:node-label num="1" name="f"></foc:node-label>
              <foc:proof>
                <foc:pr-auto>
                  </foc:pr-auto>
                </foc:proof>
              </foc:pr-node-qed>
            </foc:pr-nodes>
          </foc:proof>
        </foc:meth-theorem>
      </foc:method>
    </foc:species>
  
  </foc:focdoc>
