open "basics";;
open "sets";;
open "Finite_Set_S";;
open "Une_Assertion_constitutionnelle_S";;
open "Une_Assertion_S";;
open "Un_Texte_S";;

species Subtype (Sub is Setoid, 
                 Sub_set is Finite_Set_S(Sub),
                 Super is Setoid,
                 Super_set is Finite_Set_S(Super)
                 ) =

representation = unit;

signature to_super : Sub -> Super; 

property to_super_congruence : all x y : Sub,
  Sub!equal(x, y) -> Super!equal(!to_super(x), !to_super(y));

signature to_super_set : Sub_set -> Super_set; 

property to_super_set_congruence : all x y : Sub_set,
  Sub_set!equal(x, y) -> Super_set!equal(!to_super_set(x), !to_super_set(y));

property to_super_set_const1 : all x_set : Sub_set, all y : Super,
  Super_set!is_a_member_of(y, !to_super_set(x_set)) ->
                 (ex x : Sub,
                     Sub_set!is_a_member_of(x, x_set) /\
                     Super!equal(!to_super(x), y));

property to_super_set_const2 : all x_set : Sub_set, all x : Sub,
                  Sub_set!is_a_member_of(x, x_set) ->
                        Super_set!is_a_member_of(!to_super(x), !to_super_set(x_set));

end;;

